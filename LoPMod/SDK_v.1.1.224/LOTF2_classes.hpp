#pragma once

// Dumped with Dumper-7!


namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// CLASSES
//---------------------------------------------------------------------------------------------------------------------

// 0x30 (0x2D0 - 0x2A0)
// Class LOTF2.AbilitySystemActor
class AAbilitySystemActor : public AActor
{
public:
	uint8                                        Pad_252B[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UAbilitySystemComponent*               AbilitySystemComponent;                            // 0x2B8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAbilitySystemComponent*               ExternalAbilitySystemComponent;                    // 0x2C0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGenericTeamId                        CachedTeamId;                                      // 0x2C8(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_252C[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AAbilitySystemActor* GetDefaultObj();

};

// 0x8 (0x118 - 0x110)
// Class LOTF2.AbilityTask_DynamicKnockback
class UAbilityTask_DynamicKnockback : public UAbilityTask_ApplyRootMotionConstantForce
{
public:
	float                                        KnockbackWaitTime;                                 // 0x110(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_252F[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAbilityTask_DynamicKnockback* GetDefaultObj();

	class UAbilityTask_DynamicKnockback* ApplyDynamicKnockbackForce(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, const struct FVector& KnockbackWorldDirection, float KnockbackAmountInCM, float KnockbackWait, float KnockbackDuration, class UCurveFloat* StrengthOverTimeCurve);
};

// 0x58 (0xD8 - 0x80)
// Class LOTF2.AbilityTask_HexAIMoveFacingTarget
class UAbilityTask_HexAIMoveFacingTarget : public UAbilityTask
{
public:
	FMulticastInlineDelegateProperty_            OnCompleted;                                       // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2532[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                TargetActor;                                       // 0xA8(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2533[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          MontageToUse;                                      // 0xC0(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2534[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAbilityTask_HexAIMoveFacingTarget* GetDefaultObj();

	class UAbilityTask_HexAIMoveFacingTarget* CreateMoveFacingTargetTask(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, const struct FVector& MoveDirectionRelativeToTarget, class AActor* TargetActor, float MoveAngle, float DistanceToReachNear, float DistanceToReachFar, class UAnimMontage* MontageToUse, bool bStopMontageWhenTaskEnds, bool bOrientTowardsMovement);
};

// 0x30 (0xB0 - 0x80)
// Class LOTF2.AbilityTask_HexWaitDirectionalDistanceAround
class UAbilityTask_HexWaitDirectionalDistanceAround : public UAbilityTask
{
public:
	FMulticastInlineDelegateProperty_            OnCompleted;                                       // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	int32                                        DirectionToCheck;                                  // 0x90(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseDefaultObstacleMask;                           // 0x94(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2547[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ObstaclesToConsider;                               // 0x98(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EDirectionValidationMode          DirectionValidationMode;                           // 0x9C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EDirectionCheckMode               DirectionCheckMode;                                // 0x9D(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2548[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DistanceToCheck_Meters;                            // 0xA0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MovementTimeToCheck_Seconds;                       // 0xA4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseWalkingSpeed;                                  // 0xA8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEnableVisLogDebug;                                // 0xA9(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2549[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAbilityTask_HexWaitDirectionalDistanceAround* GetDefaultObj();

	bool HasDirectionalDistanceAround();
	class UAbilityTask_HexWaitDirectionalDistanceAround* CreateWaitNotEnoughDirectionalDistanceAround(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, float DistanceToCheck_Meters, enum class EDirectionValidationMode DirectionValidationMode, enum class EDirectionCheckMode DirectionCheckMode, int32 ObstaclesToConsider, bool bUseDefaultObstacleMask, int32 DirectionToCheck, bool bUseWalkingSpeed, float MovementTimeToCheck_Seconds, bool bEnableVisLogDebug);
	class UAbilityTask_HexWaitDirectionalDistanceAround* CreateWaitDirectionalDistanceAround(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, float DistanceToCheck_Meters, enum class EDirectionValidationMode DirectionValidationMode, enum class EDirectionCheckMode DirectionCheckMode, int32 ObstaclesToConsider, bool bUseDefaultObstacleMask, int32 DirectionToCheck, bool bUseWalkingSpeed, float MovementTimeToCheck_Seconds, bool bEnableVisLogDebug);
};

// 0x58 (0xD8 - 0x80)
// Class LOTF2.AbilityTask_HexWaitFacingTarget
class UAbilityTask_HexWaitFacingTarget : public UAbilityTask
{
public:
	FMulticastInlineDelegateProperty_            OnCompleted;                                       // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	enum class EHexTurnToTargetMode              TurnMode;                                          // 0x90(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2553[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                TargetActor;                                       // 0x98(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               TargetLocation;                                    // 0xA0(0x18)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               TargetDirection;                                   // 0xB8(0x18)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        JudgeAngle;                                        // 0xD0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2554[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAbilityTask_HexWaitFacingTarget* GetDefaultObj();

	class UAbilityTask_HexWaitFacingTarget* CreateWaitFacingTargetTaskLocation(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, const struct FVector& TargetLocation, float JudgeAngle);
	class UAbilityTask_HexWaitFacingTarget* CreateWaitFacingTargetTaskDirection(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, const struct FVector& TargetDirection, float JudgeAngle);
	class UAbilityTask_HexWaitFacingTarget* CreateWaitFacingTargetTask(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, class AActor* TargetActor, float JudgeAngle);
};

// 0x30 (0xB0 - 0x80)
// Class LOTF2.AbilityTask_HexWaitGameplayTags
class UAbilityTask_HexWaitGameplayTags : public UAbilityTask
{
public:
	uint8                                        Pad_2559[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UAbilitySystemComponent*               OptionalExternalTarget;                            // 0xA0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_255A[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAbilityTask_HexWaitGameplayTags* GetDefaultObj();

	void GameplayTagCallback(const struct FGameplayTag& Tag, int32 NewCount);
};

// 0x10 (0xC0 - 0xB0)
// Class LOTF2.AbilityTask_HexWaitGameplayTagsAdded
class UAbilityTask_HexWaitGameplayTagsAdded : public UAbilityTask_HexWaitGameplayTags
{
public:
	FMulticastInlineDelegateProperty_            Added;                                             // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UAbilityTask_HexWaitGameplayTagsAdded* GetDefaultObj();

	class UAbilityTask_HexWaitGameplayTagsAdded* WaitGameplayTagsAdd(class UGameplayAbility* OwningAbility, const struct FGameplayTagContainer& Tags, class AActor* InOptionalExternalTarget, bool bOnlyTriggerOnce);
};

// 0x18 (0xC8 - 0xB0)
// Class LOTF2.AbilityTask_HexWaitGameplayTagsRemoved
class UAbilityTask_HexWaitGameplayTagsRemoved : public UAbilityTask_HexWaitGameplayTags
{
public:
	FMulticastInlineDelegateProperty_            Removed;                                           // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2567[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAbilityTask_HexWaitGameplayTagsRemoved* GetDefaultObj();

	class UAbilityTask_HexWaitGameplayTagsRemoved* WaitGameplayTagsRemove(class UGameplayAbility* OwningAbility, const struct FGameplayTagContainer& Tags, class AActor* InOptionalExternalTarget, bool bOnlyTriggerOnce, bool bSendRemovedEventForNotPresentTagsOnActivated);
};

// 0x20 (0xA0 - 0x80)
// Class LOTF2.AbilityTask_HexWaitReachTarget
class UAbilityTask_HexWaitReachTarget : public UAbilityTask
{
public:
	FMulticastInlineDelegateProperty_            OnCompleted;                                       // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class AActor*                                TargetActor;                                       // 0x90(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DistanceToReach;                                   // 0x98(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_256D[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAbilityTask_HexWaitReachTarget* GetDefaultObj();

	class UAbilityTask_HexWaitReachTarget* CreateWaitReachTargetTask(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, class AActor* TargetActor, float NewDistanceToReach);
};

// 0x50 (0xD0 - 0x80)
// Class LOTF2.AbilityTask_RepositionActor
class UAbilityTask_RepositionActor : public UAbilityTask
{
public:
	FMulticastInlineDelegateProperty_            OnRepositionActorCompleted;                        // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2579[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ALOTF2Character*                       Character;                                         // 0xC8(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UAbilityTask_RepositionActor* GetDefaultObj();

	class UAbilityTask_RepositionActor* RepositionActor(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, const struct FVector& Location, const struct FRotator& Rotation, float InterpolationTime, bool bShouldEaseIn, bool bShouldEaseOut, bool bShouldForceShortestPath);
	void OnMoveComponentToCompleted();
};

// 0x18 (0x98 - 0x80)
// Class LOTF2.AbilityTask_Tick
class UAbilityTask_Tick : public UAbilityTask
{
public:
	FMulticastInlineDelegateProperty_            OnTick;                                            // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_257D[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAbilityTask_Tick* GetDefaultObj();

	class UAbilityTask_Tick* CreateTickTask(class UGameplayAbility* OwningAbility, class FName TaskInstanceName);
};

// 0x50 (0xD0 - 0x80)
// Class LOTF2.AbilityTask_Timeline
class UAbilityTask_Timeline : public UAbilityTask
{
public:
	FMulticastInlineDelegateProperty_            OnTimelineTick;                                    // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTimelineEnd;                                     // 0x90(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2584[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAbilityTask_Timeline* GetDefaultObj();

	class UAbilityTask_Timeline* AbilityTask_Timeline(class UGameplayAbility* OwningAbility, class UCurveFloat* Curve, class UCurveFloat* Curve2, class UCurveFloat* Curve3, class UCurveFloat* Curve4, bool bPlayReversed);
};

// 0x20 (0xA0 - 0x80)
// Class LOTF2.AbilityTask_TurnTowardsTarget
class UAbilityTask_TurnTowardsTarget : public UAbilityTask
{
public:
	class AActor*                                TargetActor;                                       // 0x80(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               TargetLocation;                                    // 0x88(0x18)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UAbilityTask_TurnTowardsTarget* GetDefaultObj();

	class UAbilityTask_TurnTowardsTarget* CreateTurnTowardsTargetLocationTask(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, const struct FVector& TargetLocation);
	class UAbilityTask_TurnTowardsTarget* CreateTurnTowardsTargetActorTask(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, class AActor* TargetActor);
};

// 0x18 (0x98 - 0x80)
// Class LOTF2.AbilityTask_WaitCustomNetworkedEvent
class UAbilityTask_WaitCustomNetworkedEvent : public UAbilityTask
{
public:
	FMulticastInlineDelegateProperty_            OnEvent;                                           // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2592[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAbilityTask_WaitCustomNetworkedEvent* GetDefaultObj();

	class UAbilityTask_WaitCustomNetworkedEvent* WaitCustomEvent(class UGameplayAbility* OwningAbility, enum class EAbilityGenericReplicatedEvent Event, bool bOnlyTriggerOnce);
	void TriggerEvent();
};

// 0x10 (0x90 - 0x80)
// Class LOTF2.AbilityTask_WaitDelayOneFrame
class UAbilityTask_WaitDelayOneFrame : public UAbilityTask
{
public:
	FMulticastInlineDelegateProperty_            OnFinish;                                          // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UAbilityTask_WaitDelayOneFrame* GetDefaultObj();

	class UAbilityTask_WaitDelayOneFrame* WaitDelayOneFrame(class UGameplayAbility* OwningAbility);
};

// 0x38 (0xB8 - 0x80)
// Class LOTF2.AbilityTask_WaitDelayWithProgress
class UAbilityTask_WaitDelayWithProgress : public UAbilityTask
{
public:
	FMulticastInlineDelegateProperty_            OnFinish;                                          // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnProgressChanged;                                 // 0x90(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2594[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAbilityTask_WaitDelayWithProgress* GetDefaultObj();

	class UAbilityTask_WaitDelayWithProgress* WaitDelayWithProgress(class UGameplayAbility* OwningAbility, float Time);
};

// 0x18 (0x98 - 0x80)
// Class LOTF2.AbilityTask_WaitForVelocityLower
class UAbilityTask_WaitForVelocityLower : public UAbilityTask
{
public:
	FMulticastInlineDelegateProperty_            OnVelocityIsLowerThanThreshold;                    // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2596[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAbilityTask_WaitForVelocityLower* GetDefaultObj();

	class UAbilityTask_WaitForVelocityLower* WaitForVelocityLowerThanThreshold(class UGameplayAbility* OwningAbility, float PercentageOfCurrentMaxSpeedThreshold);
};

// 0x18 (0xC0 - 0xA8)
// Class LOTF2.AbilityTask_WaitGameplayTagChanged
class UAbilityTask_WaitGameplayTagChanged : public UAbilityTask_WaitGameplayTag
{
public:
	FMulticastInlineDelegateProperty_            OnChanged;                                         // 0xA8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2597[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAbilityTask_WaitGameplayTagChanged* GetDefaultObj();

	class UAbilityTask_WaitGameplayTagChanged* WaitGameplayTagChanged(class UGameplayAbility* OwningAbility, const struct FGameplayTag& Tag, class AActor* InOptionalExternalTarget);
};

// 0x80 (0x100 - 0x80)
// Class LOTF2.AbilityTask_WaitInputAction
class UAbilityTask_WaitInputAction : public UAbilityTask
{
public:
	FMulticastInlineDelegateProperty_            InputEventReceived;                                // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UInputAction*                          InputActionToWait;                                 // 0x90(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_259A[0x68];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAbilityTask_WaitInputAction* GetDefaultObj();

	class UAbilityTask_WaitInputAction* WaitInputActionEx(class UGameplayAbility* OwningAbility, class UInputAction* InputAction, TSet<enum class ETriggerEvent> TriggerEvents, bool OnlyTriggerOnce);
	class UAbilityTask_WaitInputAction* WaitInputAction(class UGameplayAbility* OwningAbility, class UInputAction* InputAction, enum class ETriggerEvent TriggerEvent, bool OnlyTriggerOnce);
	void OnInputActionEvent(struct FInputActionInstance& InputActionInstance);
};

// 0x28 (0xA8 - 0x80)
// Class LOTF2.AbilityTask_WaitInputAction_Replicated
class UAbilityTask_WaitInputAction_Replicated : public UAbilityTask
{
public:
	FMulticastInlineDelegateProperty_            InputEventReceived;                                // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UInputAction*                          InputActionToWait;                                 // 0x90(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_259C[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAbilityTask_WaitInputAction_Replicated* GetDefaultObj();

	class UAbilityTask_WaitInputAction_Replicated* WaitInputAction(class UGameplayAbility* OwningAbility, class UInputAction* InputAction, enum class ETriggerEvent TriggerEvent, bool OnlyTriggerOnce);
	void OnInputActionReceivedCallback();
	void OnInputActionEvent(struct FInputActionInstance& InputActionInstance);
};

// 0x40 (0x68 - 0x28)
// Class LOTF2.AchievementOnlineInterface
class UAchievementOnlineInterface : public UObject
{
public:
	uint8                                        Pad_259D[0x40];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAchievementOnlineInterface* GetDefaultObj();

};

// 0xD0 (0x100 - 0x30)
// Class LOTF2.AchievementSubsystem
class UAchievementSubsystem : public UGameInstanceSubsystem
{
public:
	uint8                                        Pad_259E[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UAchievementOnlineInterface*           OnlineInterface;                                   // 0x48(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FAchievementSubsystemConfig           AchievementSubsystemConfig;                        // 0x50(0x8)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TMap<class FName, class UAchievementTracker*> Trackers;                                          // 0x58(0x50)(Protected, NativeAccessSpecifierProtected)
	class UAchievementTrackerFactory*            TrackerFactory;                                    // 0xA8(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<class FName, float>                     TrackerProgress;                                   // 0xB0(0x50)(SaveGame, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UAchievementSubsystem* GetDefaultObj();

};

// 0xB8 (0xE0 - 0x28)
// Class LOTF2.AchievementTracker
class UAchievementTracker : public UObject
{
public:
	uint8                                        Pad_259F[0xB8];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAchievementTracker* GetDefaultObj();

};

// 0x0 (0xE0 - 0xE0)
// Class LOTF2.AchievementTrackerAllAchievement
class UAchievementTrackerAllAchievement : public UAchievementTracker
{
public:

	static class UClass* StaticClass();
	static class UAchievementTrackerAllAchievement* GetDefaultObj();

};

// 0x0 (0xE0 - 0xE0)
// Class LOTF2.AchievementTrackerCoopBossKill
class UAchievementTrackerCoopBossKill : public UAchievementTracker
{
public:

	static class UClass* StaticClass();
	static class UAchievementTrackerCoopBossKill* GetDefaultObj();

};

// 0x0 (0xE0 - 0xE0)
// Class LOTF2.AchievementTrackerDonateCoin
class UAchievementTrackerDonateCoin : public UAchievementTracker
{
public:

	static class UClass* StaticClass();
	static class UAchievementTrackerDonateCoin* GetDefaultObj();

};

// 0x50 (0x78 - 0x28)
// Class LOTF2.AchievementTrackerFactory
class UAchievementTrackerFactory : public UObject
{
public:
	TMap<enum class EAchievementTrackerType, TSubclassOf<class UAchievementTracker>> AchievementTrackerClassOfType;                     // 0x28(0x50)(Protected, UObjectWrapper, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UAchievementTrackerFactory* GetDefaultObj();

};

// 0x0 (0xE0 - 0xE0)
// Class LOTF2.AchievementTrackerPvpKill
class UAchievementTrackerPvpKill : public UAchievementTracker
{
public:

	static class UClass* StaticClass();
	static class UAchievementTrackerPvpKill* GetDefaultObj();

};

// 0x8 (0xE8 - 0xE0)
// Class LOTF2.AchievementTrackerQuest
class UAchievementTrackerQuest : public UAchievementTracker
{
public:
	class UQuest*                                Quest;                                             // 0xE0(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UAchievementTrackerQuest* GetDefaultObj();

	void UnbindQuest();
	void OnQuestStatusChanged(class UQuest* Quest);
	void BindQuest();
};

// 0x0 (0xE0 - 0xE0)
// Class LOTF2.AchievementTrackerSummonCoop
class UAchievementTrackerSummonCoop : public UAchievementTracker
{
public:

	static class UClass* StaticClass();
	static class UAchievementTrackerSummonCoop* GetDefaultObj();

};

// 0x28 (0x50 - 0x28)
// Class LOTF2.ActionsContext
class UActionsContext : public UObject
{
public:
	class UInputMappingContext*                  InputMappingContext;                               // 0x28(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FInputActionGameplayEventMapping> InputActions;                                      // 0x30(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<struct FComboInputsMapping>           ComboInputs;                                       // 0x40(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UActionsContext* GetDefaultObj();

};

// 0x40 (0x70 - 0x30)
// Class LOTF2.ActivitySubsystem
class UActivitySubsystem : public UGameInstanceSubsystem
{
public:
	class UActivitySubsystemConfig*              ActivitySubsystemConfig;                           // 0x30(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25A0[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UActivitySubsystem* GetDefaultObj();

	void OnGameFinished();
};

// 0x20 (0x50 - 0x30)
// Class LOTF2.ActivitySubsystemConfig
class UActivitySubsystemConfig : public UDataAsset
{
public:
	class FString                                ResumeGameActivityId;                              // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                        PresenceActivityIds;                               // 0x40(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UActivitySubsystemConfig* GetDefaultObj();

};

// 0x8 (0xB8 - 0xB0)
// Class LOTF2.ActorCollisionReplicationComponent
class UActorCollisionReplicationComponent : public UActorComponent
{
public:
	bool                                         bActorEnableCollision;                             // 0xB0(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_25A1[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UActorCollisionReplicationComponent* GetDefaultObj();

	void OnRep_ActorEnableCollision();
};

// 0x0 (0x28 - 0x28)
// Class LOTF2.ActorRedirectInterface
class IActorRedirectInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IActorRedirectInterface* GetDefaultObj();

	class AActor* GetActorRedirect();
};

// 0x18 (0x2B8 - 0x2A0)
// Class LOTF2.LOTF2UserWidget
class ULOTF2UserWidget : public UCommonUserWidget
{
public:
	class UEventNameBasedControllerIcons*        EventNameBasedControllerIconsClass;                // 0x2A0(0x8)(Edit, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25A2[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ULOTF2UserWidget* GetDefaultObj();

	void UpdateControllerIcons(enum class ECommonInputType NewInputMethod);
	void OnInputMethodChanged(enum class ECommonInputType NewInputMethod);
	void ListenForAxisEvent(class FName Axis, FDelegateProperty_ Func);
	class APlayerCharacterController* GetOwningPlayerCharacterController();
	class UTexture2D* GetControllerIconByEventName(struct FGameplayTag& Action);
};

// 0x18 (0x2D0 - 0x2B8)
// Class LOTF2.ActorWidget
class UActorWidget : public ULOTF2UserWidget
{
public:
	class AActor*                                OwningActor;                                       // 0x2B8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_            OnOwningActorChanged;                              // 0x2C0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UActorWidget* GetDefaultObj();

	void SetOwningActor(class AActor* NewOwner);
};

// 0x10 (0x6D0 - 0x6C0)
// Class LOTF2.ActorWidgetComponent
class UActorWidgetComponent : public UWidgetComponent
{
public:
	bool                                         bShouldClampWidgetInsideViewport;                  // 0x6C0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25A3[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	double                                       OffsetFromBorder;                                  // 0x6C8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UActorWidgetComponent* GetDefaultObj();

};

// 0x30 (0xE0 - 0xB0)
// Class LOTF2.AdaptiveTriggerComponent
class UAdaptiveTriggerComponent : public UActorComponent
{
public:
	struct FGameplayTagContainer                 DisabledByTags;                                    // 0xB0(0x20)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTag                          MeleeChargingTag;                                  // 0xD0(0x8)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          RangedFullyChargedTag;                             // 0xD8(0x8)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UAdaptiveTriggerComponent* GetDefaultObj();

	void OnRangedStanceChanged(enum class ERangedStance OldRangedStance, enum class ERangedStance NewRangedStance);
};

// 0x30 (0xE0 - 0xB0)
// Class LOTF2.HexApplySpawnConfigComponent
class UHexApplySpawnConfigComponent : public UActorComponent
{
public:
	uint8                                        Pad_25A4[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexApplySpawnConfigComponent* GetDefaultObj();

};

// 0x28 (0x108 - 0xE0)
// Class LOTF2.AddInventoryItemPostSpawn
class UAddInventoryItemPostSpawn : public UHexApplySpawnConfigComponent
{
public:
	TArray<TSoftClassPtr<class UItemData>>       Items;                                             // 0xE0(0x10)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                        Pad_25A5[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ALOTF2Character*                       TargetCharacter;                                   // 0x100(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UAddInventoryItemPostSpawn* GetDefaultObj();

	void OnItemDataLoaded();
};

// 0x70 (0x120 - 0xB0)
// Class LOTF2.AggroComponent
class UAggroComponent : public UActorComponent
{
public:
	TSubclassOf<class UGameplayEffect>           AggroGE;                                           // 0xB0(0x8)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAkAnathemaEvent                      AggroAkEvent;                                      // 0xB8(0x50)(Edit, NativeAccessSpecifierPublic)
	class UHexStateTreeComponent*                StateTreeComponent;                                // 0x108(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ABaseAIController*                     OwnerController;                                   // 0x110(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAbilitySystemComponent*               CurrentTargetASC;                                  // 0x118(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UAggroComponent* GetDefaultObj();

	void OnStateBegin(struct FGameplayTagContainer& StateChangePayload, class UHexStateTreeComponent* OwnerStateTreeComponent);
	void HandleDeath(class AActor* InstigatorActor, struct FGameplayTagContainer& InstigatorTags, bool bDeathWasObserved);
	struct FAkAnathemaEvent GetAggroAkEvent();
};

// 0xA8 (0xD0 - 0x28)
// Class LOTF2.CharacterAction
class UCharacterAction : public UObject
{
public:
	uint8                                        Pad_25A7[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnActionInterruptTagReceivedAndNoWaitingActions;   // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_25A8[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  ActionName;                                        // 0x58(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          InterruptTypeTag;                                  // 0x60(0x8)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShouldInteruptOthers;                             // 0x68(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanBeInterruptedByOthers;                         // 0x69(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAbortOnFailure;                                   // 0x6A(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25A9[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Timeout;                                           // 0x6C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25AA[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ActionPriority;                                    // 0x7C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25AB[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          TimeoutTimerHandle;                                // 0x88(0x8)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ABaseAIController*                     AIController;                                      // 0x90(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ABaseAICharacter*                      Character;                                         // 0x98(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25AC[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCharacterAction* GetDefaultObj();

	void OnTimeout();
	bool IsComplete();
	bool HasFailed();
	struct FGameplayTag GetActionType();
	enum class EeAnathemaAIActionState GetActionState();
	class FName GetActionName();
	void EndAction(bool bSuccess);
	void BP_UpdateAction(float DeltaTime);
	void BP_RunSetup();
	void BP_EndAction(bool bWasSuccessfull);
	void BP_BeginAction();
};

// 0x0 (0xD0 - 0xD0)
// Class LOTF2.AIActionApproachFlex
class UAIActionApproachFlex : public UCharacterAction
{
public:

	static class UClass* StaticClass();
	static class UAIActionApproachFlex* GetDefaultObj();

};

// 0x28 (0xF8 - 0xD0)
// Class LOTF2.AIActionMovementBase
class UAIActionMovementBase : public UCharacterAction
{
public:
	uint8                                        Pad_25AD[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAIActionMovementBase* GetDefaultObj();

};

// 0x28 (0x120 - 0xF8)
// Class LOTF2.AIActionApproachPlayer
class UAIActionApproachPlayer : public UAIActionMovementBase
{
public:
	float                                        DesiredDistance;                                   // 0xF8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldRun;                                        // 0xFC(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldGuard;                                      // 0xFD(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUsePathfinding;                                   // 0xFE(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIgnoreCharacterCapsuleRadius;                     // 0xFF(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAITask_MoveTo*                        PMoveToAITask;                                     // 0x100(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                          PMovementMontage;                                  // 0x108(0x8)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_25AF[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TimeToFullRotation;                                // 0x118(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_25B0[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAIActionApproachPlayer* GetDefaultObj();

	class UAIActionApproachPlayer* AIActionApproachPlayer(class UObject* WorldContextObject, float NewTimeout, float NewDesiredDistance, bool ShouldRun);
};

// 0x48 (0x118 - 0xD0)
// Class LOTF2.AIActionPlayMontage
class UAIActionPlayMontage : public UCharacterAction
{
public:
	uint8                                        Pad_25B5[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          M_pMontage;                                        // 0xF0(0x8)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          AnimationTag;                                      // 0xF8(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseGameplayAbilities;                             // 0x100(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25B6[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bUseDistanceAbortCondition;                        // 0x102(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25B7[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AbortDistance;                                     // 0x104(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseAngleAbortCondition;                           // 0x108(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25B8[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AbortAngle;                                        // 0x10C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseStaminaAbortCondition;                         // 0x110(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25B9[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AbortStaminaRate;                                  // 0x114(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UAIActionPlayMontage* GetDefaultObj();

	void OnMontageEnded(class UAnimMontage* AnimMontage, bool bInterrupted);
	void OnMontageBlendOut(class UAnimMontage* AnimMontage, bool bInterrupted);
	class UAIActionPlayMontage* AIActionPlayMontage(class UObject* WorldContextObject, const struct FGameplayTag& InterruptTag, float NewTimeout, class UAnimMontage* NewMontage, bool bNewInterrupt);
};

// 0x0 (0x118 - 0x118)
// Class LOTF2.AIActionAttackBase
class UAIActionAttackBase : public UAIActionPlayMontage
{
public:

	static class UClass* StaticClass();
	static class UAIActionAttackBase* GetDefaultObj();

};

// 0x0 (0x118 - 0x118)
// Class LOTF2.AIActionAttack
class UAIActionAttack : public UAIActionAttackBase
{
public:

	static class UClass* StaticClass();
	static class UAIActionAttack* GetDefaultObj();

};

// 0x0 (0x118 - 0x118)
// Class LOTF2.AIActionCombo
class UAIActionCombo : public UAIActionPlayMontage
{
public:

	static class UClass* StaticClass();
	static class UAIActionCombo* GetDefaultObj();

};

// 0x0 (0x118 - 0x118)
// Class LOTF2.AIActionDodge
class UAIActionDodge : public UAIActionPlayMontage
{
public:

	static class UClass* StaticClass();
	static class UAIActionDodge* GetDefaultObj();

};

// 0x0 (0x118 - 0x118)
// Class LOTF2.AIActionEndure
class UAIActionEndure : public UAIActionPlayMontage
{
public:

	static class UClass* StaticClass();
	static class UAIActionEndure* GetDefaultObj();

};

// 0x10 (0x108 - 0xF8)
// Class LOTF2.AIActionInvestigate
class UAIActionInvestigate : public UAIActionMovementBase
{
public:
	float                                        DesiredDistance;                                   // 0xF8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShouldRun;                                        // 0xFC(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25BB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAITask_MoveTo*                        PMoveToAITask;                                     // 0x100(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UAIActionInvestigate* GetDefaultObj();

	void OnMoveRequestFailed();
	void OnMoveFinished(enum class EPathFollowingResult Result, class AAIController* PAIController);
};

// 0x8 (0x100 - 0xF8)
// Class LOTF2.AIActionLeavePlayer
class UAIActionLeavePlayer : public UAIActionMovementBase
{
public:
	float                                        DesiredDistance;                                   // 0xF8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldGuard;                                      // 0xFC(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldRun;                                        // 0xFD(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25BC[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAIActionLeavePlayer* GetDefaultObj();

	class UAIActionLeavePlayer* AIActionLeavePlayer(class UObject* WorldContextObject, float NewTimeout, float NewDesiredDistance);
};

// 0x28 (0xD8 - 0xB0)
// Class LOTF2.AIActionManager
class UAIActionManager : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnAllActionsFinished;                              // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_25BD[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCharacterAction*                      ActiveAction;                                      // 0xC8(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_25BE[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAIActionManager* GetDefaultObj();

	void OnActionFinished(enum class EeAnathemaAIActionState ActionState);
	void AddActionByClass(TSubclassOf<class UCharacterAction> PAction);
	void AddAction(class UCharacterAction* PAction);
	void AbortAllActions();
};

// 0x8 (0x100 - 0xF8)
// Class LOTF2.AIActionMoveSideways
class UAIActionMoveSideways : public UAIActionMovementBase
{
public:
	bool                                         bMoveRight;                                        // 0xF8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldGuard;                                      // 0xF9(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25C0[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Angle;                                             // 0xFC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UAIActionMoveSideways* GetDefaultObj();

	class UAIActionMoveSideways* AIActionMoveSideways(class UObject* WorldContextObject, float NewTimeout, bool ShouldMoveRight);
};

// 0x8 (0xD8 - 0xD0)
// Class LOTF2.AIActionSwitchContext
class UAIActionSwitchContext : public UCharacterAction
{
public:
	enum class EeAIContextType                   NewContextType;                                    // 0xD0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSetAsNewMainContext;                              // 0xD1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25C2[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAIActionSwitchContext* GetDefaultObj();

	class UAIActionSwitchContext* AIActionSwitchContext(class UObject* WorldContextObject, enum class EeAIContextType ContextType, bool bSetAsMainContext);
};

// 0x18 (0x130 - 0x118)
// Class LOTF2.AIActionTurn
class UAIActionTurn : public UAIActionPlayMontage
{
public:
	float                                        JudgeAngle;                                        // 0x118(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurnSpeed;                                         // 0x11C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EeAITurnDirection                 TurnDirection;                                     // 0x120(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25C3[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAIActionTurn* GetDefaultObj();

	class UAIActionTurn* AIActionTurn(class UObject* WorldContextObject, float NewTimeout, float JudgeAngle);
};

// 0x0 (0xD0 - 0xD0)
// Class LOTF2.AIActionWait
class UAIActionWait : public UCharacterAction
{
public:

	static class UClass* StaticClass();
	static class UAIActionWait* GetDefaultObj();

};

// 0x10 (0xE0 - 0xD0)
// Class LOTF2.AIActionWaitGameplayEvent
class UAIActionWaitGameplayEvent : public UCharacterAction
{
public:
	struct FGameplayTag                          GameplayEventTag;                                  // 0xD0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25C4[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAIActionWaitGameplayEvent* GetDefaultObj();

	class UAIActionWaitGameplayEvent* AIActionWaitGameplayEvent(class UObject* WorldContextObject, const struct FGameplayTag& GameplayEventTagToWait);
};

// 0x0 (0x28 - 0x28)
// Class LOTF2.AIAnimatedBodyUserInterface
class IAIAnimatedBodyUserInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IAIAnimatedBodyUserInterface* GetDefaultObj();

};

// 0x90 (0x448 - 0x3B8)
// Class LOTF2.AnathemaGameplayAbility
class UAnathemaGameplayAbility : public UGameplayAbility
{
public:
	bool                                         bActivateAbilityOnGranted;                         // 0x3B8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25C5[0x1F];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          AbilityIdentifierTag;                              // 0x3D8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                 WhiteListForCancelAbilitiesWithTag;                // 0x3E0(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                 WhiteListForBlockAbilitiesWithTag;                 // 0x400(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<TSubclassOf<class UGameplayEffect>>   GameplayEffectsAppliedWhileActive;                 // 0x420(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	bool                                         bShouldClearInterruptsOnActivate;                  // 0x430(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25C6[0x17];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAnathemaGameplayAbility* GetDefaultObj();

	struct FMontageToPlay GetMontageToPlayFromAnimationSource(struct FAnimationSource& AnimSource);
};

// 0x20 (0x468 - 0x448)
// Class LOTF2.AIPlayMontageAbility
class UAIPlayMontageAbility : public UAnathemaGameplayAbility
{
public:
	uint8                                        Pad_25C7[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAIPlayMontageAbility* GetDefaultObj();

	void OnMontageCompleted(enum class EOnMontageDoneReason DoneReason);
};

// 0x0 (0x468 - 0x468)
// Class LOTF2.AIAttackAbility
class UAIAttackAbility : public UAIPlayMontageAbility
{
public:

	static class UClass* StaticClass();
	static class UAIAttackAbility* GetDefaultObj();

};

// 0x70 (0xA0 - 0x30)
// Class LOTF2.AICombatManagerSubsystem
class UAICombatManagerSubsystem : public UWorldSubsystem
{
public:
	uint8                                        Pad_25C9[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSet<struct FSerializationId>                SpawnersAlreadyInCombatWithThePlayer;              // 0x50(0x50)(NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UAICombatManagerSubsystem* GetDefaultObj();

	void StopAICombatManager();
	void StartAICombatManager();
	void RecalculateEnemyCombatRoles();
	float GetAggroScoreForTarget(class ALOTF2Character* RequestingActor, class ALOTF2Character* TargetActor);
};

// 0x20 (0x48 - 0x28)
// Class LOTF2.AIConsideration
class UAIConsideration : public UObject
{
public:
	float                                        Multiplier;                                        // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Bonus;                                             // 0x2C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Rank;                                              // 0x30(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25CA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bTimeBarrier;                                      // 0x38(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25CB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Cooldown;                                          // 0x3C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ACharacter*                            Character;                                         // 0x40(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UAIConsideration* GetDefaultObj();

	void SetCooldown(float FSeconds);
	void Reset();
	float InternalScoreBP();
	float InternalScore();
};

// 0x10 (0x58 - 0x48)
// Class LOTF2.AIConsiderationInterruption
class UAIConsiderationInterruption : public UAIConsideration
{
public:
	enum class EeInterruptionType                InterruptionType;                                  // 0x48(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25CC[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Score;                                             // 0x4C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          EffectTagToCheck;                                  // 0x50(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UAIConsiderationInterruption* GetDefaultObj();

};

// 0x50 (0x100 - 0xB0)
// Class LOTF2.AICustomizationComponent
class UAICustomizationComponent : public UActorComponent
{
public:
	TArray<TSoftObjectPtr<class USkeletalMesh>>  MeshVariations;                                    // 0xB0(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                        Pad_25CD[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class USkeletalMesh>          SelectedMesh;                                      // 0xD0(0x30)(Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UAICustomizationComponent* GetDefaultObj();

	void GenerateRandomCustomization();
};

// 0x0 (0x468 - 0x468)
// Class LOTF2.AIDodgeAbility
class UAIDodgeAbility : public UAIPlayMontageAbility
{
public:

	static class UClass* StaticClass();
	static class UAIDodgeAbility* GetDefaultObj();

};

// 0x70 (0x98 - 0x28)
// Class LOTF2.AIEnvironment
class UAIEnvironment : public UObject
{
public:
	TArray<TSubclassOf<class UDecisionContext>>  AvailableContextsClasses;                          // 0x28(0x10)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class UDecisionContext>>  ForbiddenContextsClasses;                          // 0x38(0x10)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                        Pad_25CE[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAIEnvironment* GetDefaultObj();

};

// 0x8 (0x2A8 - 0x2A0)
// Class LOTF2.AIEnvironmentActionSequenceActor
class AAIEnvironmentActionSequenceActor : public AActor
{
public:
	class UAIEnvironmentConfigComponent*         AIEnvironmentConfigComponent;                      // 0x2A0(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AAIEnvironmentActionSequenceActor* GetDefaultObj();

};

// 0x48 (0xF8 - 0xB0)
// Class LOTF2.AIEnvironmentBehaviorComponent
class UAIEnvironmentBehaviorComponent : public UActorComponent
{
public:
	struct FEnvironmentActionsData               EnvironmentActions;                                // 0xB0(0x30)(ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_25CF[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAIEnvironmentBehaviorComponent* GetDefaultObj();

};

// 0x10 (0xC0 - 0xB0)
// Class LOTF2.AIEnvironmentComponent
class UAIEnvironmentComponent : public UActorComponent
{
public:
	TSubclassOf<class UAIEnvironment>            AIEnvironmentClass;                                // 0xB0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAIEnvironment*                        AIEnvironment;                                     // 0xB8(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UAIEnvironmentComponent* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class LOTF2.EnvironmentActionData
class UEnvironmentActionData : public UObject
{
public:
	TWeakObjectPtr<class UGameplayEffect>        ActionEffect;                                      // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bAutoInsertWaitAfter;                              // 0x30(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_25D0[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        WaitTime;                                          // 0x34(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UEnvironmentActionData* GetDefaultObj();

};

// 0x10 (0x48 - 0x38)
// Class LOTF2.EnvironmentAnimationActionData
class UEnvironmentAnimationActionData : public UEnvironmentActionData
{
public:
	struct FGameplayTag                          AnimationTag;                                      // 0x38(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        Duration;                                          // 0x40(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_25D1[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UEnvironmentAnimationActionData* GetDefaultObj();

};

// 0x20 (0x58 - 0x38)
// Class LOTF2.EnvironmentTurnActionData
class UEnvironmentTurnActionData : public UEnvironmentActionData
{
public:
	enum class ETurnEnvironmentActionMode        TurnActionMode;                                    // 0x38(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_25D2[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                ReferenceActor;                                    // 0x40(0x8)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        Degrees;                                           // 0x48(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bRelative;                                         // 0x4C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_25D3[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DegreesBase;                                       // 0x50(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        TurnSpeed;                                         // 0x54(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UEnvironmentTurnActionData* GetDefaultObj();

};

// 0x30 (0x60 - 0x30)
// Class LOTF2.EnvironmentActionsDataAsset
class UEnvironmentActionsDataAsset : public UDataAsset
{
public:
	struct FEnvironmentActionsData               ActionsData;                                       // 0x30(0x30)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UEnvironmentActionsDataAsset* GetDefaultObj();

};

// 0x38 (0xE8 - 0xB0)
// Class LOTF2.AIEnvironmentConfigComponent
class UAIEnvironmentConfigComponent : public UActorComponent
{
public:
	struct FEnvironmentActionsInfo               Actions;                                           // 0xB0(0x38)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UAIEnvironmentConfigComponent* GetDefaultObj();

};

// 0x60 (0x110 - 0xB0)
// Class LOTF2.AIFactionComponent
class UAIFactionComponent : public UActorComponent
{
public:
	uint8                                        Pad_25D7[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EHexAITeams                       AIFactionTeam;                                     // 0xB8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25D8[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class EHexAIFactions, enum class ETeamAttitude> TargetFactionAttitudeOverride;                     // 0xC0(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UAIFactionComponent* GetDefaultObj();

	void SetFactionTeamId(enum class EHexAITeams TeamID);
	void OverrideFactionAttitude(enum class EHexAIFactions Faction, enum class ETeamAttitude NewAttitude);
	bool IsNeutral(class AActor* Actor);
	bool IsHostile(class AActor* Actor);
	bool IsFriendly(class AActor* Actor);
	enum class EHexAITeams GetFactionTeamId();
	enum class EHexAIFactions GetCharacterFaction();
};

// 0x0 (0xC0 - 0xC0)
// Class LOTF2.AIGlobalEnvironment
class UAIGlobalEnvironment : public UAIEnvironmentComponent
{
public:

	static class UClass* StaticClass();
	static class UAIGlobalEnvironment* GetDefaultObj();

	void OnAIControllerSpawned(class ABaseAIController* AIController);
};

// 0xA0 (0x150 - 0xB0)
// Class LOTF2.AILogicManagerComponent
class UAILogicManagerComponent : public UActorComponent
{
public:
	enum class EeAIContextType                   DefaultContextType;                                // 0xB0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25D9[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          AnimInterruptTag;                                  // 0xB4(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          CooldownGETag;                                     // 0xBC(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseBehaviorTreeLogic;                             // 0xC4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAutoStartLogicOnPossess;                          // 0xC5(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25DA[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnInterruptTagReceivedAndNoWaitingActions;         // 0xC8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_25DB[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UCharacterAction*                      HitReactAction;                                    // 0x110(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDecision*                             CurrentDecision;                                   // 0x118(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ABaseAIController*                     AIController;                                      // 0x120(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAIActionManager*                      AIActionManagerComponent;                          // 0x128(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAITargetSystemComponent*              AITargetSystemComponent;                           // 0x130(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAbilitySystemComponent*               AbilitySystemComponent;                            // 0x138(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnathemaBehaviorTreeComponent*        MainBehaviorComponent;                             // 0x140(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAIBehaviorEnvironment*                BehaviorEnvironment;                               // 0x148(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UAILogicManagerComponent* GetDefaultObj();

	void StopLogic();
	void StartLogic();
	void SetNewContext(enum class EeAIContextType NewContextToSet);
	void SetDefaultContextType(enum class EeAIContextType NewContextToSet);
	void RunMainBehavior(class UBehaviorTree* BTAsset);
	void RunCurrentDecision();
	void QueueContextChange(enum class EeAIContextType NewContextToSet);
	void OnTargetVisualLost();
	void OnTargetPerceived();
	void OnTargetLost();
	void OnTargetDetected();
	void OnTargetChanged(class AActor* NewTarget);
	void OnTargetAcquired();
	void OnInterruption(enum class EeInterruptionType NewInterruptionType);
	void OnActionsFinished();
	bool IsLogicActive();
	void InterruptGameplayTagCallback(const struct FGameplayTag& Tag, int32 NewCount);
	void ClearInterruptions();
};

// 0x1E8 (0x4A0 - 0x2B8)
// Class LOTF2.AimTargetWidget
class UAimTargetWidget : public ULOTF2UserWidget
{
public:
	struct FGameplayAttribute                    AttributeToTrack;                                  // 0x2B8(0x38)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayAttribute                    MaxValueAttributeToTrack;                          // 0x2F0(0x38)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ScaleValue;                                        // 0x328(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinScaleValue;                                     // 0x32C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxScaleValue;                                     // 0x330(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25DC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 SoulFlayInvalidTagContainer;                       // 0x338(0x20)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UTargetComponent>       CurrentTarget;                                     // 0x358(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    RadialProgressBarMaterialInterface;                // 0x360(0x8)(Edit, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USizeBox*                              SizeBox_TargetContainer;                           // 0x368(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOverlay*                              Container_Aim;                                     // 0x370(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOverlay*                              Container_PostureDanger;                           // 0x378(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Image_RadialProgressBar;                           // 0x380(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Image_Icon;                                        // 0x388(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Image_SoulflayableTarget;                          // 0x390(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Image_StabAvailable;                               // 0x398(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      FlickerPoiseDamage;                                // 0x3A0(0x8)(BlueprintVisible, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      StaggeredAnimationFeedback;                        // 0x3A8(0x8)(BlueprintVisible, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*              DynMaterialInstance;                               // 0x3B0(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGSequencePlayer*                    FlickerAnimHandle;                                 // 0x3B8(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_25DD[0xE0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAimTargetWidget* GetDefaultObj();

	void OnTargetHealthChanged(float FOldHealth, float FNewHealth);
	void OnStaggerStart();
	void OnStaggerEnd();
	void OnSetTarget(class UTargetComponent* InTargetComponent);
	void OnHUDVisibilityChange(bool bVisible);
	void BP_PlayStopStagger();
	void BP_PlayStartStagger();
};

// 0x48 (0xF8 - 0xB0)
// Class LOTF2.AIParasiteTetheringComponent
class UAIParasiteTetheringComponent : public UActorComponent
{
public:
	TWeakObjectPtr<class ALOTF2Character>        LinkedCharacter;                                   // 0xB0(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayEffectsWithParamsContainer   GameplayEffectsToApply;                            // 0xB8(0x10)(Transient, NativeAccessSpecifierPrivate)
	struct FHexBattleEffectIdentifierContainer   BattleEffectsToApply;                              // 0xC8(0x10)(Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_25E0[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAIParasiteTetheringComponent* GetDefaultObj();

	void OnStoppedTethering_BP();
	void OnStartedTethering_BP();
	void OnRep_LinkedCharacter();
	void OnOwnerDeath(class AActor* InstigatorActor, struct FGameplayTagContainer& InstigatorTags, bool bDeathWasObserved);
	void OnLinkedCharacterDeath(class AActor* InstigatorActor, struct FGameplayTagContainer& InstigatorTags, bool bDeathWasObserved);
	class ALOTF2Character* GetLinkedCharacter();
};

// 0x50 (0x100 - 0xB0)
// Class LOTF2.AIPatrollingComponent
class UAIPatrollingComponent : public UActorComponent
{
public:
	uint8                                        Pad_25E1[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USplineComponent*                      PathSplineComponent;                               // 0xD0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_25E2[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FPatrolPointInfo>              PatrolPath;                                        // 0xE0(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_25E3[0xE];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bFirstPatrolPointAssigned;                         // 0xFE(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_25E4[0x1];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAIPatrollingComponent* GetDefaultObj();

};

// 0x8 (0xB8 - 0xB0)
// Class LOTF2.AIPerceptionModifierComponent
class UAIPerceptionModifierComponent : public UActorComponent
{
public:
	uint8                                        Pad_25F5[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAIPerceptionModifierComponent* GetDefaultObj();

	bool K2_OverrideTouchStimulus(class APawn* ObserverPawn, class AController* ObserverController, struct FVector& InstigatorLocation, bool& IsTouched);
	bool K2_OverrideSightStimulus(class APawn* ObserverPawn, class AController* ObserverController, struct FVector& InstigatorLocation, bool& IsVisible);
	bool K2_OverrideNearHitStimulus(class APawn* ObserverPawn, class AController* ObserverController, struct FVector& InstigatorLocation, struct FVector& NearHitLocation, bool& IsNearHited);
	bool K2_OverrideHearingStimulus(class APawn* ObserverPawn, class AController* ObserverController, struct FVector& InstigatorLocation, struct FVector& NoiseLocation, bool& IsAudible);
	bool K2_OverrideESPStimulus(class APawn* ObserverPawn, class AController* ObserverController, struct FVector& InstigatorLocation, bool& IsSensed);
	bool K2_OverrideDamageStimulus(class APawn* ObserverPawn, class AController* ObserverController, struct FVector& InstigatorLocation, struct FVector& HitLocation, bool& IsDamaged);
	bool K2_ModifyTouchStimulus(class APawn* InstigatorPawn, class AController* InstigatorController, struct FVector& InstigatorLocation, struct FVector& TargetLocation, bool& Ignore);
	bool K2_ModifySightStimulus(class APawn* InstigatorPawn, class AController* InstigatorController, struct FVector& InstigatorLocation, struct FVector& TargetVisibleLocation, bool& Ignore, float& CloseSightRadius, float& DistantSightRadius, float& LoseSightRadius, float& PeripheralHorizAngle, float& PeripheralVertAngle);
	bool K2_ModifyNearHitStimulus(class APawn* InstigatorPawn, class AController* InstigatorController, struct FVector& InstigatorLocation, struct FVector& TargetLocation, bool& Ignore, struct FVector& NearHitLocation, struct FAISenseAffiliationFilter& AffiliationFilter);
	bool K2_ModifyHearingStimulus(class APawn* InstigatorPawn, class AController* InstigatorController, struct FVector& InstigatorLocation, struct FVector& NoiseLocation, bool& Ignore, float& HearingRange, struct FAISenseAffiliationFilter& AffiliationFilter);
	bool K2_ModifyESPStimulus(class APawn* InstigatorPawn, class AController* InstigatorController, struct FVector& InstigatorLocation, struct FVector& TargetLocation, bool& Ignore);
	bool K2_ModifyDamageStimulus(class APawn* InstigatorPawn, class AController* InstigatorController, struct FVector& InstigatorLocation, struct FVector& TargetLocation, bool& Ignore, struct FVector& HitLocation, struct FAISenseAffiliationFilter& AffiliationFilter);
};

// 0x0 (0x28 - 0x28)
// Class LOTF2.AIPerceptionModifierInterface
class IAIPerceptionModifierInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IAIPerceptionModifierInterface* GetDefaultObj();

};

// 0xA8 (0x158 - 0xB0)
// Class LOTF2.AirStateComponent
class UAirStateComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnFellIntoTheVoid;                                 // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnFallingStart;                                    // 0xC0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnFallingEnd;                                      // 0xD0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                        MinimumFallHeightToApplyFallDamage;                // 0xE0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaximumFallHeightToApplyFallDamage;                // 0xE4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ZeroEncumbranceDamageRatio;                        // 0xE8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinimumFallHeightToAllowPlungeAttack;              // 0xEC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinimumForwardProjectedSpeedToRollOnLanding;       // 0xF0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ForwardProjectedSpeedToAddFromInput;               // 0xF4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FallHeightToTransitionToKnockedDownFall;           // 0xF8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25F7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FLandingAnimationInfo>         LandingAnimations;                                 // 0x100(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                        FlinchIntensityOnSuperSoftLandingRunning;          // 0x110(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FlinchIntensityOnSuperSoftLandingSprinting;        // 0x114(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FlinchIntensityOnJumpStop;                         // 0x118(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FAnimationSource                      LandingToRollAnimationSource;                      // 0x11C(0x10)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_25F8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ALOTF2Character*                       OwnerCharacter;                                    // 0x130(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_25F9[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAirStateComponent* GetDefaultObj();

	void ResetFallenIntoTheVoidState();
	void OnMovementModeChanged(class ACharacter* Character, enum class EMovementMode PrevMovementMode, uint8 PreviousCustomMode);
	void OnLandedEvent(struct FHitResult& Hit);
	bool HasFallenIntoTheVoid();
};

// 0x8 (0x2F0 - 0x2E8)
// Class LOTF2.VoidVolume
class AVoidVolume : public AKillZVolume
{
public:
	class ULOTF2SerializationComponent*          SerializationComponent;                            // 0x2E8(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AVoidVolume* GetDefaultObj();

};

// 0x28 (0xD8 - 0xB0)
// Class LOTF2.AIRubberBandingComponent
class UAIRubberBandingComponent : public UActorComponent
{
public:
	uint8                                        Pad_25FA[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UBlackboardComponent*                  Blackboard;                                        // 0xD0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UAIRubberBandingComponent* GetDefaultObj();

};

// 0x0 (0x468 - 0x468)
// Class LOTF2.AIShieldAbility
class UAIShieldAbility : public UAIPlayMontageAbility
{
public:

	static class UClass* StaticClass();
	static class UAIShieldAbility* GetDefaultObj();

};

// 0x8 (0x2B0 - 0x2A8)
// Class LOTF2.AISphereEnvironmentActionSequenceActor
class AAISphereEnvironmentActionSequenceActor : public AAIEnvironmentActionSequenceActor
{
public:
	class USphereComponent*                      SequenceTrigger;                                   // 0x2A8(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AAISphereEnvironmentActionSequenceActor* GetDefaultObj();

	void OnActivationBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
};

// 0xB0 (0xD8 - 0x28)
// Class LOTF2.AITarget
class UAITarget : public UObject
{
public:
	uint8                                        Pad_260F[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        IsAttacking : 1;                                   // Mask: 0x1, PropSize: 0x10x38(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        IsBlocking : 1;                                    // Mask: 0x2, PropSize: 0x10x38(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        IsParried : 1;                                     // Mask: 0x4, PropSize: 0x10x38(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        IsDodging : 1;                                     // Mask: 0x8, PropSize: 0x10x38(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        IsExhausted : 1;                                   // Mask: 0x10, PropSize: 0x10x38(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        IsStunned : 1;                                     // Mask: 0x20, PropSize: 0x10x38(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        GatingEnabled : 1;                                 // Mask: 0x40, PropSize: 0x10x38(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_202 : 1;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_2610[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LastDodgeTime;                                     // 0x3C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LastExhaustTime;                                   // 0x40(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LastStunTime;                                      // 0x44(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EAITargetSystemThreatType         Threat;                                            // 0x48(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EAITargetSystemConfirmationType   Confirmation;                                      // 0x49(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2611[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               Location;                                          // 0x50(0x18)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               StandingLocation;                                  // 0x68(0x18)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               Facing;                                            // 0x80(0x18)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               Velocity;                                          // 0x98(0x18)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AActor>                 Actor;                                             // 0xB0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AAITargetMarkerActor*                  MarkerActor;                                       // 0xB8(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class APlayerCharacterCameraMarkerActor*     PerceivedViewMarkerActor;                          // 0xC0(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class APlayerCharacterCameraMarkerActor*     RealViewMarkerActor;                               // 0xC8(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UAITargetAssociatedSet> AssociatedSet;                                     // 0xD0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UAITarget* GetDefaultObj();

	void RequestGateLock(class ABaseAIController* LockingAIController);
	void OnTargetAttackParried(class ALOTF2Character* Character, class AActor* ParriedBy);
	void OnTargetAttackDeflected(class ALOTF2Character* Character, class AActor* DeflectedBy, struct FHitResult& HitResult, struct FVector& HitDirection);
	void OnPlayerTargetStunStop(class APlayerCharacterController* PlayerController);
	void OnPlayerTargetStunStart(class APlayerCharacterController* PlayerController);
	void OnPlayerTargetExhaustedStop(class APlayerCharacterController* PlayerController);
	void OnPlayerTargetExhaustedStart(class APlayerCharacterController* PlayerController);
	void OnPlayerTargetDodged(class APlayerCharacterController* PlayerController, bool IsStarting, float InRelativeDodgeAngle);
	void OnAITargetStunStop(class ABaseAIController* AIController);
	void OnAITargetStunStart(class ABaseAIController* AIController);
	void OnAITargetParriedStopped(class ABaseAIController* AIController, bool IsInterrupted);
	void OnAITargetParriedStarted(class ABaseAIController* AIController);
	void OnAITargetExhaustedStop(class ABaseAIController* AIController);
	void OnAITargetExhaustedStart(class ABaseAIController* AIController);
	void OnAITargetBlockStopped(class ABaseAIController* AIController, bool IsInterrupted);
	void OnAITargetBlockStarted(class ABaseAIController* AIController);
	bool IsVisible();
	bool IsValid();
	bool IsRecentlyVisible(float DeltaTime);
	bool IsRecentlyTouched(float DeltaTime, bool IncludeESP);
	bool IsRecentlyHeard(float DeltaTime);
	bool IsRecentlyAttacked(float DeltaTime, bool IncludeNearHits);
	bool IsInParryableWindow();
	bool IsInDamageWindow();
	bool IsGateLockingAIController(class ABaseAIController* InController);
	bool IsGateLockable();
	bool IsActor(class AActor* OtherActor);
	bool HasGateLockingAIController();
	class APlayerCharacterCameraMarkerActor* GetViewMarkerActor(bool* OutIsValid);
	struct FVector GetVelocity();
	float GetTimeUntilParryable();
	float GetTimeUntilDamage();
	enum class EAITargetSystemThreatType GetThreat();
	class UAITargetGatingComponent* GetTargetGatingComponent();
	struct FVector GetStandingLocation();
	struct FVector GetProjectedStandingLocation(float Time);
	struct FVector GetProjectedNavLocation(class UObject* WorldContextObject, class AController* Querier, float Radius, float Time);
	struct FVector GetProjectedLocation(float Time);
	class APlayerCharacterCameraMarkerActor* GetPerceivedViewMarkerActor(bool* OutIsValid);
	class ABaseAIController* GetOwnerController();
	struct FVector GetNavLocation(class UObject* WorldContextObject, class AController* Querier, float Radius);
	class AAITargetMarkerActor* GetMarkerActor(bool* OutIsValid);
	struct FVector GetLocation();
	float GetLastStunTime();
	float GetLastExhaustedTime();
	bool GetIsStunned();
	bool GetIsRecentlyStunned(float DeltaTime);
	bool GetIsRecentlyExhausted(float DeltaTime);
	bool GetIsParried();
	bool GetIsExhausted();
	bool GetIsDodging();
	bool GetIsBlocking();
	bool GetIsAttacking();
	class ABaseAIController* GetGateLockingAIController();
	struct FVector GetFacing();
	bool GetEnvelopeState(enum class EAITargetEnvelopeType Type, struct FAITargetEnvelopeState* OutState);
	enum class EAITargetSystemConfirmationType GetConfirmation();
	class AActor* GetActor();
};

// 0x78 (0xA0 - 0x28)
// Class LOTF2.AITargetAssociatedSet
class UAITargetAssociatedSet : public UObject
{
public:
	TWeakObjectPtr<class AActor>                 Target;                                            // 0x28(0x8)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UAITargetEnvelope*>             Envelopes;                                         // 0x30(0x10)(Edit, ExportObject, ZeroConstructor, EditConst, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	enum class ECombatRole                       CombatRole;                                        // 0x40(0x1)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2612[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TargetSetScore;                                    // 0x44(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2613[0x58];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAITargetAssociatedSet* GetDefaultObj();

};

// 0x90 (0xB8 - 0x28)
// Class LOTF2.AITargetEnvelope
class UAITargetEnvelope : public UObject
{
public:
	enum class EAITargetEnvelopeType             Type;                                              // 0x28(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2614[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Scale;                                             // 0x2C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LastActiveValue;                                   // 0x30(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TimeSinceLastStimulus;                             // 0x34(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TimeSinceLastStateChange;                          // 0x38(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FAITargetEnvelopeConfig               Config;                                            // 0x3C(0x1C)(NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FAITargetEnvelopeState                State;                                             // 0x58(0x58)(NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bIsSensed;                                         // 0xB0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bTargetUpdateForgetState;                          // 0xB1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2615[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAITargetEnvelope* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class LOTF2.AITargetEnvelopeConfigSettings
class UAITargetEnvelopeConfigSettings : public UObject
{
public:
	TArray<struct FAITargetDefaultEnvelopeConfig> DefaultEnvelopes;                                  // 0x28(0x10)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UAITargetEnvelopeConfigSettings* GetDefaultObj();

};

// 0x68 (0x308 - 0x2A0)
// Class LOTF2.AITargetGatingActiveLocation
class AAITargetGatingActiveLocation : public AActor
{
public:
	uint8                                        IsPaused : 1;                                      // Mask: 0x1, PropSize: 0x10x2A0(0x1)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        StrafeDirection : 1;                               // Mask: 0x2, PropSize: 0x10x2A0(0x1)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_203 : 6;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_2616[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        BaseStickDistance;                                 // 0x2A4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        StrafeAngle;                                       // 0x2A8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        StrafeTimer;                                       // 0x2AC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CloseInTimer;                                      // 0x2B0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2617[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               RelativeWorldLocation;                             // 0x2B8(0x18)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               StickAxis;                                         // 0x2D0(0x18)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FAITargetGatingActiveLocationSettings Settings;                                          // 0x2E8(0x20)(NoDestructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AAITargetGatingActiveLocation* GetDefaultObj();

};

// 0xE8 (0x198 - 0xB0)
// Class LOTF2.AITargetGatingComponent
class UAITargetGatingComponent : public UActorComponent
{
public:
	uint8                                        GateLockRecentlyChanged : 1;                       // Mask: 0x1, PropSize: 0x10xB0(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        GateLockEnabled : 1;                               // Mask: 0x2, PropSize: 0x10xB0(0x1)(Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        GateLockAllowAny : 1;                              // Mask: 0x4, PropSize: 0x10xB0(0x1)(Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_204 : 5;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_261B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        GateLockOwnerMaxDistance;                          // 0xB4(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GateLockOwnerForgetDistance;                       // 0xB8(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GateLockOwnerIgnoreCenternessDistance;             // 0xBC(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GateLockOwnerMinCenterness;                        // 0xC0(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GateLockOwnerMaxSpeed;                             // 0xC4(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SortingDistanceScoreDistance;                      // 0xC8(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SortingDistanceScore;                              // 0xCC(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SortingCenternessScore;                            // 0xD0(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinWaitingLocationUpdateDist;                      // 0xD4(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               LastWaitingLocationUpdatePoint;                    // 0xD8(0x18)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ABaseAIController>      OwnerCurrentTarget;                                // 0xF0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ABaseAIController>      GateLockOwner;                                     // 0xF8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TWeakObjectPtr<class ABaseAIController>> LockRequests;                                      // 0x100(0x10)(ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<TWeakObjectPtr<class ABaseAIController>> DebugLastLockRequests;                             // 0x110(0x10)(ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	class AAITargetGatingActiveLocation*         ActiveLocation;                                    // 0x120(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FAITargetGatingInterceptLocationEntry> InterceptLocations;                                // 0x128(0x10)(ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<struct FAITargetGatingWaitingLocationEntry> WaitingLocations;                                  // 0x138(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_261C[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAITargetGatingComponent* GetDefaultObj();

	void OnPlayerOwnerTargetChanged(class APlayerCharacterController* PlayerController, class UTargetComponent* PrevTarget, class UTargetComponent* NewTarget);
	void OnGateLockOwnerDeath(class ABaseAIController* AIController);
	struct FVector GetWaitingWorldLocation(class ABaseAIController* InWaitingController);
	class AAITargetGatingWaitingLocation* GetWaitingLocationActor(class ABaseAIController* InWaitingController, bool* OutIsValid);
	struct FVector GetInterceptWorldLocation(class ABaseAIController* InInterceptingController);
	class AAITargetGatingInterceptLocation* GetInterceptLocationActor(class ABaseAIController* InInterceptingController, bool* OutIsValid);
	struct FVector GetActiveWorldLocation();
	class AAITargetGatingActiveLocation* GetActiveLocationActor(bool* OutIsValid);
};

// 0x20 (0x2C0 - 0x2A0)
// Class LOTF2.AITargetGatingInterceptLocation
class AAITargetGatingInterceptLocation : public AActor
{
public:
	float                                        VelocityScale;                                     // 0x2A0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_261D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               CachedVelocity;                                    // 0x2A8(0x18)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AAITargetGatingInterceptLocation* GetDefaultObj();

};

// 0x10 (0x2B0 - 0x2A0)
// Class LOTF2.AITargetGatingTicker
class AAITargetGatingTicker : public AActor
{
public:
	TArray<TWeakObjectPtr<class UAITargetGatingComponent>> AITargetGatingComponents;                          // 0x2A0(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AAITargetGatingTicker* GetDefaultObj();

	void OnPlayerControllerCreated(class APlayerCharacterController* PlayerController);
	void OnAIControllerCreated(class ABaseAIController* AIController);
};

// 0x78 (0x318 - 0x2A0)
// Class LOTF2.AITargetGatingWaitingLocation
class AAITargetGatingWaitingLocation : public AActor
{
public:
	uint8                                        IsValidLocation : 1;                               // Mask: 0x1, PropSize: 0x10x2A0(0x1)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        IsValidOnNavMesh : 1;                              // Mask: 0x2, PropSize: 0x10x2A0(0x1)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_205 : 6;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_261E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MinDistance;                                       // 0x2A4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxDistance;                                       // 0x2A8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_261F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               AxisVector;                                        // 0x2B0(0x18)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2620[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AAITargetGatingWaitingLocation* GetDefaultObj();

};

// 0x0 (0x2A0 - 0x2A0)
// Class LOTF2.AITargetMarkerActor
class AAITargetMarkerActor : public AActor
{
public:

	static class UClass* StaticClass();
	static class AAITargetMarkerActor* GetDefaultObj();

};

// 0x148 (0x1F8 - 0xB0)
// Class LOTF2.AITargetSystemComponent
class UAITargetSystemComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnTargetPerceived;                                 // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTargetDetected;                                  // 0xC0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTargetAcquired;                                  // 0xD0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTargetLost;                                      // 0xE0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTargetChanged;                                   // 0xF0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTargetVisualLost;                                // 0x100(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                        HighThreatValue;                                   // 0x110(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MediumThreatValue;                                 // 0x114(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LowThreatValue;                                    // 0x118(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2627[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAITargetAssociatedSet*                TemplateAssociatedSet;                             // 0x120(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<TWeakObjectPtr<class AActor>, class UAITargetAssociatedSet*> Targets;                                           // 0x128(0x50)(Edit, ExportObject, EditConst, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class AActor*                                GoalTargetActor;                                   // 0x178(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAITarget*                             GoalTarget;                                        // 0x180(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAITarget*                             AttentionTarget;                                   // 0x188(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AActor>                 PreviousActiveTargetActor;                         // 0x190(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAIPerceptionComponent*                M_pPerceptionComponent;                            // 0x198(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2628[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AggroRequiredPercentageIncreaseToChangeTarget;     // 0x1B4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2629[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnStimulusProcessedDelegate;                       // 0x1C8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_262A[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAITargetSystemComponent* GetDefaultObj();

	void SetGoalTarget(class AActor* Target, bool bShouldClearOnTargetLost, float GoalTargetTimeout, bool bShouldPriorizeGoalTarget);
	void PushTargetChangeDisabledLock();
	void PopTargetChangeDisabledLock();
	void OnStimulusProcessed(class AActor* Target, const struct FAIStimulus& Stimulus);
	void OnStateEnd(struct FGameplayTagContainer& StateChangePayload, class UHexStateTreeComponent* OwnerStateTreeComponent);
	void OnStateBegin(struct FGameplayTagContainer& StateChangePayload, class UHexStateTreeComponent* OwnerStateTreeComponent);
	void OnReceiveAlert(class AActor* PNewTargetToAssign);
	void OnGoalTargetTimerCompleted();
	bool IsTargetPerceived(class AActor* Target);
	bool GetTargetEnvelopeState(class AActor* Target, enum class EAITargetEnvelopeType EnvelopeType, struct FAITargetEnvelopeState* OutState);
	enum class ECombatRole GetCombatRoleOfCurrentTarget();
	enum class ECombatRole GetCombatRoleByTarget(class AActor* DesiredActor);
	enum class EAITargetSystemThreatType GetAttentionTargetThreat();
	enum class EAITargetSystemConfirmationType GetAttentionTargetConfirmation();
};

// 0x78 (0x128 - 0xB0)
// Class LOTF2.AIWaitFirstEncounterSystemComp
class UAIWaitFirstEncounterSystemComp : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnFirstEncounterTriggered;                         // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_262B[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UBehaviorTree*                         InitialActionBehaviorTree;                         // 0xD0(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_262C[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UAITargetSystemComponent*              AITargetSystemComponent;                           // 0xF0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_262D[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAIWaitFirstEncounterSystemComp* GetDefaultObj();

	void TriggerFirstEncounter(class AActor* OverlappedActor, class AActor* OtherActor);
	bool ShouldRunTowardsTarget();
	struct FGameplayTag GetWaitFirstEncounterAnimationTag();
	struct FGameplayTag GetTriggerFirstEncounterAnimationTag();
	bool GetShouldIgnoreSenses();
	float GetDistanceToTriggerActionInMeters();
};

// 0x50 (0x4F0 - 0x4A0)
// Class LOTF2.AkAnathemaComponent
class UAkAnathemaComponent : public UAkComponent
{
public:
	uint8                                        Pad_262F[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAkAnathemaComponent* GetDefaultObj();

	int32 PostAkAnathemaEvent(struct FAkAnathemaEvent& AkAnathemaEvent);
};

// 0x20 (0x50 - 0x30)
// Class LOTF2.AmmoAttributeSet
class UAmmoAttributeSet : public UAttributeSet
{
public:
	struct FGameplayAttributeData                Ammo;                                              // 0x30(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                MaxAmmo;                                           // 0x40(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UAmmoAttributeSet* GetDefaultObj();

	void OnRep_MaxAmmo(struct FGameplayAttributeData& OldMaxAmmo);
	void OnRep_Ammo(struct FGameplayAttributeData& OldAmmo);
};

// 0xC8 (0x368 - 0x2A0)
// Class LOTF2.AmmoBarWidget
class UAmmoBarWidget : public UCommonUserWidget
{
public:
	class UPanelWidget*                          Ammo_Container;                                    // 0x2A0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UCommonUserWidget>         AmmoChargeClass;                                   // 0x2A8(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          AmmoCostTag;                                       // 0x2B0(0x8)(Edit, DisableEditOnTemplate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayAttribute                    Attribute;                                         // 0x2B8(0x38)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayAttribute                    MaxAttribute;                                      // 0x2F0(0x38)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAbilitySystemComponent*               PlayerAsc;                                         // 0x328(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEquipmentManagerComponent*            EquipmentManagerComponent;                         // 0x330(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class APlayerCharacter*                      PlayerCharacter;                                   // 0x338(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        CurrentAmmo;                                       // 0x340(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxAmmo;                                           // 0x344(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        CurrentAmmoCost;                                   // 0x348(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2630[0x1C];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAmmoBarWidget* GetDefaultObj();

	void UseAmmo(int32 AmmoToUse, int32 AmmoCost);
	void UpdateStatsInternal(float CurrentAmmoValue, float MaxAmmoValue);
	void UpdateStats(float CurrentAmmoValue, float MaxAmmoValue);
	void UpdateCachedPlayerInfo(class APawn* OlsPawn, class APawn* NewPawn);
	void UpdateAmmoCost(int32 AmmoCost);
	void UpdateAmmo(int32 AmmoCost);
	void ResetAmmoSlots();
	void OnEquipmentChanged();
	void OnConfigInit();
	void OnAmmoRangedSlotChanged(enum class EFEquipmentSlot RangedAmmoUsedSlot);
	void CreateAmmoSlots(int32 Slots);
	void BP_UpdateAmmo(int32 CurrentAmmo);
	void BP_PlayFailAbilityFeedback();
};

// 0x448 (0x478 - 0x30)
// Class LOTF2.ItemData
class UItemData : public UPrimaryDataAsset
{
public:
	TSubclassOf<class UInventoryItem>            InventoryItemClass;                                // 0x30(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<TSubclassOf<class UItemActivationPrecondition>> ItemActivationPreconditions;                       // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	class UAnimMontage*                          ItemUseAnimation;                                  // 0x48(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FItemUseAnimationData                 ItemUseAnimationData;                              // 0x50(0x20)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	class UTexture2D*                            ItemIcon;                                          // 0x70(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UTexture2D>             HDIcon;                                            // 0x78(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FText                                  ItemName;                                          // 0xA8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPrivate)
	class FText                                  CustomizationItemName;                             // 0xC0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPrivate)
	class FText                                  ItemShortDescription;                              // 0xD8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPrivate)
	class FText                                  ItemDescription;                                   // 0xF0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class AActor>                  ItemVisual;                                        // 0x108(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        ItemPropertyFlags;                                 // 0x138(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bItemHidden;                                       // 0x139(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bBossItem;                                         // 0x13A(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsUniqueForAccount;                               // 0x13B(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bShouldRemoveOnNewGamePlus;                        // 0x13C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsHostOnly;                                       // 0x13D(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bShouldAlwaysLoot;                                 // 0x13E(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bCanBeDropped;                                     // 0x13F(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bAllowUseMultipleInstances;                        // 0x140(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bRequiresActivatedAnchor;                          // 0x141(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bConsumedOnUsage;                                  // 0x142(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bDropAlternative;                                  // 0x143(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bDontRemoveFromUniquesList;                        // 0x144(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bCanDisplayInLoadingScreenTips;                    // 0x145(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2632[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MaxStackSize;                                      // 0x148(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        MaxItemLevel;                                      // 0x14C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          ItemCategory;                                      // 0x150(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bUsableAutoEquipOnPickup;                          // 0x158(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2633[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCharacterGameplayAbilitiesConfig     OnItemUsedGameplayAbilitiesConfig;                 // 0x160(0xE8)(Edit, NativeAccessSpecifierPublic)
	struct FCharacterGameplayAbilitiesConfig     OnItemAddedToTheInventoryGameplayAbilitiesConfig;  // 0x248(0xE8)(Edit, NativeAccessSpecifierPublic)
	enum class EDLCName                          DLC;                                               // 0x330(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2634[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class UItemData*, int32>                BuildCostMap;                                      // 0x338(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPrivate)
	class FText                                  InspectionDetails;                                 // 0x388(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPrivate)
	float                                        Mass;                                              // 0x3A0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        UseQuantityCost;                                   // 0x3A4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class UItemData*, int32>                AdditionalUseCostMap;                              // 0x3A8(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPrivate)
	struct FGameplayTagQuery                     DropOnDeathQuery;                                  // 0x3F8(0x48)(Edit, NativeAccessSpecifierPrivate)
	enum class EItemDevStatus                    ItemDevStatus;                                     // 0x440(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        RewardMultiplayerTargets;                          // 0x441(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bRewardUINotificationEnabled;                      // 0x442(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2635[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDataTableRowHandle                   ItemPriceRow;                                      // 0x448(0x10)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                 ItemTags;                                          // 0x458(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UItemData* GetDefaultObj();

	bool ShouldRemoveOnNewGamePlus();
	bool ShouldDropOnOwnerDeath(class ALOTF2Character* OwnerCharacter);
	bool ShouldDropAlternative();
	bool ShouldAlwaysLoot();
	void SetItemPropertyFlags(uint8 Value);
	bool RequiresActivatedAnchor();
	bool IsUsableInUmbral();
	bool IsUsableAutoEquipOnPickup();
	bool IsUsable();
	bool IsUnstackable();
	bool IsUnique();
	bool IsRefillable();
	bool IsQuestItem();
	bool IsInspectable();
	bool IsHostOnly();
	bool IsHidden();
	bool IsConsumedOnUsage();
	bool IsBossItem();
	bool IsAccountUnique();
	int32 GetUseQuantityCost();
	TMap<class UItemData*, int32> GetUseAdditionalCostMap();
	int32 GetMaxStackSize();
	int32 GetMaxItemLevel();
	float GetMass();
	struct FItemLoreStatRequirements GetLoreRequirements();
	TSoftClassPtr<class AActor> GetItemVisual();
	struct FItemUseAnimationData GetItemUseAnimationData();
	class UAnimMontage* GetItemUseAnimation();
	struct FGameplayTagContainer GetItemTags();
	class FText GetItemShortDescription();
	struct FItemPrice GetItemPrice();
	class FText GetItemName();
	class UTexture2D* GetItemIcon();
	enum class EItemDevStatus GetItemDevStatus();
	class FText GetItemDescription();
	struct FGameplayTag GetItemCategory();
	TArray<TSubclassOf<class UItemActivationPrecondition>> GetItemActivationPreconditions();
	TSubclassOf<class UInventoryItem> GetInventoryItemClass();
	class FText GetInspectionDetails();
	TSoftObjectPtr<class UTexture2D> GetHDIcon();
	class FText GetCustomizationItemName();
	TMap<class UItemData*, int32> GetBuildCostMap();
	int32 ClampToMaxStackSize(int32 Stack);
	bool CheckPropertyFlag(enum class EItemProperties Flag);
	bool CanDisplayInLoadingScreenTips();
	bool CanBeSold();
	bool CanBeRemovedFromUniquesList();
	bool CanBeDropped();
	bool AllowUseMultipleInstances();
};

// 0x210 (0x688 - 0x478)
// Class LOTF2.EquipementData
class UEquipementData : public UItemData
{
public:
	bool                                         bUseAttachmentRules;                               // 0x478(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EPropJoint                        AttachToJoint;                                     // 0x479(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2636[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               JointOffset;                                       // 0x480(0x18)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FRotator                              JointRotationOffset;                               // 0x498(0x18)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	enum class EPropJoint                        HolsterJoint;                                      // 0x4B0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2637[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  HolsterPivotSocket;                                // 0x4B4(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2638[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               HolsterJointOffset;                                // 0x4C0(0x18)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FRotator                              HolsterJointRotationOffset;                        // 0x4D8(0x18)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	enum class EPropJoint                        SecondaryAttachToJoint;                            // 0x4F0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EPropJoint                        SecondaryHolsterJoint;                             // 0x4F1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2639[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  SecondaryHolsterPivotSocket;                       // 0x4F4(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_263A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               SecondaryJointOffset;                              // 0x500(0x18)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FRotator                              SecondaryJointRotationOffset;                      // 0x518(0x18)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	bool                                         bUseEquippedOffsetsFromPrimary;                    // 0x530(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_263B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ShieldOffsetWhenHolsteredAtBack;                   // 0x534(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                               JointOffsetSecondary;                              // 0x538(0x18)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FRotator                              JointRotationOffsetSecondary;                      // 0x550(0x18)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	struct FCharacterGameplayAbilitiesConfig     OnEquippedGameplayAbilitiesConfig;                 // 0x568(0xE8)(Edit, NativeAccessSpecifierPrivate)
	TArray<struct FAkSwitchesOnEquip>            AkSwitchesOnEquip;                                 // 0x650(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	enum class EFEquipmentSlot                   EquipmentSlot;                                     // 0x660(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_263C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDataTableRowHandle                   TriggerPropertyNormal;                             // 0x668(0x10)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FDataTableRowHandle                   TriggerPropertyCharging;                           // 0x678(0x10)(Edit, NoDestructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UEquipementData* GetDefaultObj();

	struct FCharacterGameplayAbilitiesConfig GetEquippedGameplayAbilitiesConfig();
	enum class EFEquipmentSlot GetEquipmentSlot();
};

// 0x258 (0x8E0 - 0x688)
// Class LOTF2.AmmoData
class UAmmoData : public UEquipementData
{
public:
	struct FDataTableRowHandle                   StatsRow;                                          // 0x688(0x10)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	enum class EAmmoType                         AmmoTypeDefinition;                                // 0x698(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_263D[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCharacterGameplayAbilitiesConfig     OnSelectedGameplayAbilitiesConfig;                 // 0x6A0(0xE8)(Edit, NativeAccessSpecifierPrivate)
	TSubclassOf<class USubAutonomousAbilityData> SSAToTriggerWhenSimpleShot;                        // 0x788(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class USubAutonomousAbilityData> SSAToTriggerWhenChargedShot;                       // 0x790(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FSpawnDefinition                      SpawnDefinition;                                   // 0x798(0x120)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                 GameplayCueTags;                                   // 0x8B8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          TagToCheckForDynamicCost;                          // 0x8D8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UAmmoData* GetDefaultObj();

	struct FGameplayTag GetTagToCheckForDynamicCost();
	TSubclassOf<class USubAutonomousAbilityData> GetSSAToTriggerWhenSimpleShot();
	TSubclassOf<class USubAutonomousAbilityData> GetSSAToTriggerWhenChargedShot();
	struct FSpawnDefinition GetSpawnDefinition();
	struct FGameplayTagContainer GetGameplayCueTags();
	float GetExtraStaminaCostWhenCharged();
	TMap<struct FGameplayTag, float> GetCost();
};

// 0x8 (0x2A8 - 0x2A0)
// Class LOTF2.ItemVisual
class AItemVisual : public AActor
{
public:
	enum class EPropJoint                        AttachedJoint;                                     // 0x2A0(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAssignReceivesDecalsToFalseOnEquip;               // 0x2A1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_263E[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AItemVisual* GetDefaultObj();

	void SetSimulatePhysics(bool bSimulatePhysics);
	void OnRep_AttachedJoint();
	void BP_OnAttached(enum class EPropJoint Joint);
};

// 0x0 (0x2A8 - 0x2A8)
// Class LOTF2.AmmoOnQuiverVisual
class AAmmoOnQuiverVisual : public AItemVisual
{
public:

	static class UClass* StaticClass();
	static class AAmmoOnQuiverVisual* GetDefaultObj();

	void UpdateAmmoAmount(float NewAmmo, float AmmoCost);
	void SetNewAmmoRemainingAmount(float NewAmmo, float AmmoCost);
};

// 0x0 (0x2A0 - 0x2A0)
// Class LOTF2.AmmoSlotWidget
class UAmmoSlotWidget : public UCommonUserWidget
{
public:

	static class UClass* StaticClass();
	static class UAmmoSlotWidget* GetDefaultObj();

	void SetAmmoAsUsed();
	void Reset();
	void PlayUseAmmo();
	void PlayTryUseAmmo();
	void PlayMarkAmmo();
	void PlayCantUseAmmo();
};

// 0x110 (0x4D8 - 0x3C8)
// Class LOTF2.HexActivatableWidget
class UHexActivatableWidget : public UCommonActivatableWidget
{
public:
	class UEventNameBasedControllerIcons*        EventNameBasedControllerIconsClass;                // 0x3C8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EHexWidgetInputMode               InputConfig;                                       // 0x3D0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EMouseCaptureMode                 GameMouseCaptureMode;                              // 0x3D1(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bGameIgnoreMovement;                               // 0x3D2(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bGameIgnoreLookAt;                                 // 0x3D3(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bInterruptible;                                    // 0x3D4(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bRestoreCursor;                                    // 0x3D5(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2642[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FUIInteractionAnimationData           UIPlayerInteractionAnimationData;                  // 0x3D8(0x48)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TMap<struct FGameplayTag, struct FUIInteractionAnimationData> UIPlayerInteractionAnimationDataPerNPC;            // 0x420(0x50)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FUIInteractionAnimationData           UINPCInteractionAnimationData;                     // 0x470(0x48)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2643[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexActivatableWidget* GetDefaultObj();

	void OnUIInteractionAnimationDone();
	void OnPlayerTakeDamage(class AActor* DamagedActor, float Damage, const struct FGameplayTagContainer& AllAssetTags, class AActor* InstigatedBy, class AActor* DamageCauser, enum class EHexAttackTypeEffectivenes AttackTypeEffectiveness);
	void OnPlayerDeath(class AActor* InstigatorActor, struct FGameplayTagContainer& TagContainer, bool bDeathWasObserved);
	void OnInputMethodChanged(enum class ECommonInputType NewInputMethod);
	class UTexture2D* GetControllerIconByEventName(struct FGameplayTag& Action);
	void CloseWidget();
};

// 0xE8 (0x5C0 - 0x4D8)
// Class LOTF2.AmountSelectorWidget
class UAmountSelectorWidget : public UHexActivatableWidget
{
public:
	FMulticastInlineDelegateProperty_            OnAmountSelected;                                  // 0x4D8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	class UFocusableButtonWidget*                Button_ReduceAmount;                               // 0x4E8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFocusableButtonWidget*                Button_IncreaseAmount;                             // 0x4F0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                          Container_ItemPrice;                               // 0x4F8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonRichTextBlock*                  Text_Price;                                        // 0x500(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                      Text_ItemName;                                     // 0x508(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Image_Item;                                        // 0x510(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<enum class EInventoryInteractionActionType, class FText> Actions;                                           // 0x518(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                      Text_Amount;                                       // 0x568(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                      Text_ActionDescription;                            // 0x570(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          ReduceAmountActionTag;                             // 0x578(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          IncreaseAmountActionTag;                           // 0x580(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2644[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAmountSelectorWidget* GetDefaultObj();

	void OnReduceAmount();
	void OnIncreaseAmount();
	void OnConfirmAmount();
	void BP_OnReduceAmount();
	void BP_OnIncreaseAmount();
};

// 0xF8 (0x14B0 - 0x13B8)
// Class LOTF2.AnathemaAbilitySystemComponent
class UAnathemaAbilitySystemComponent : public UAbilitySystemComponent
{
public:
	uint8                                        Pad_264C[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnathemaGameplayAbility*              InterruptibleAbility;                              // 0x13C8(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_264D[0x80];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnAbilityFailedBP;                                 // 0x1450(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_264E[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 InitialTags;                                       // 0x1490(0x20)(Edit, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UAnathemaAbilitySystemComponent* GetDefaultObj();

	void RemoveTagsForInterruptibleAbility(class UAnathemaGameplayAbility* AbilityToInterrupt, struct FGameplayTagContainer& IAmInterruptibleByTheseTags);
	bool IsTagInInterruptionSet(struct FGameplayTag& AbilityTag);
	bool IsAnyTagInInterruptionSet(struct FGameplayTagContainer& AbilityTags);
	class UAnathemaGameplayAbility* GetInterruptibleAbilityIfMatchesAnyInterruptionTag(struct FGameplayTagContainer& AbilityTags);
	float GetGameplayEffectTimeRemaining(TSubclassOf<class UGameplayEffect> SourceGameplayEffect);
	float GetGameplayEffectDuration(TSubclassOf<class UGameplayEffect> SourceGameplayEffect);
	struct FGameplayTagContainer GetCurrentInterruptionTags();
	class UAnathemaGameplayAbility* GetCurrentInterruptibleAbility();
	class UGameplayAbility* FindFirstPrimaryInstanceFromParentClass(TSubclassOf<class UGameplayAbility> InAbilityClass);
	class UGameplayAbility* FindAbilityPrimaryInstanceByClass(TSubclassOf<class UGameplayAbility> InAbilityClass);
	void DEBUG_ApplyGameplayEffectToSelf(class UGameplayEffect* GameplayEffect, float Level, struct FGameplayEffectContextHandle& EffectContext);
	void ClearInterrupts();
	bool BP_TriggerAbilityClassFromGameplayEvent(TSubclassOf<class UGameplayAbility> AbilityToActivate, const struct FGameplayTag& EventTag, const struct FGameplayEventData& Payload);
	class UAnimMontage* BP_GetCurrentAnimatingAbilityMontage();
	void BP_GetBlockedAbilityTags(struct FGameplayTagContainer* TagContainer);
	class UGameplayAbility* BP_GetAnimatingAbility();
	void BP_CancelAbilities(struct FGameplayTagContainer& WithTags, struct FGameplayTagContainer& WithoutTags, class UGameplayAbility* Ignore);
	bool BP_AreAbilityTagsBlocked(struct FGameplayTagContainer& Tags);
	void ApplyGameplayEffectSpecToSelfLocal(struct FGameplayEffectSpecHandle& SpecHandle);
	void AddTagsForInterruptibleAbility(class UAnathemaGameplayAbility* AbilityToInterrupt, struct FGameplayTagContainer& IAmInterruptibleByTheseTags);
};

// 0x20 (0xF0 - 0xD0)
// Class LOTF2.AnathemaAITurnAction
class UAnathemaAITurnAction : public UCharacterAction
{
public:
	float                                        JudgeAngle;                                        // 0xD0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TurnSpeed;                                         // 0xD4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                AbilityClass;                                      // 0xD8(0x8)(Edit, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_264F[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAnathemaAITurnAction* GetDefaultObj();

};

// 0x0 (0x298 - 0x298)
// Class LOTF2.AnathemaBehaviorTreeComponent
class UAnathemaBehaviorTreeComponent : public UBehaviorTreeComponent
{
public:

	static class UClass* StaticClass();
	static class UAnathemaBehaviorTreeComponent* GetDefaultObj();

	class FString BP_GetDebugInfoString();
};

// 0x10 (0x458 - 0x448)
// Class LOTF2.AnathemaCharacterRepositionAbility
class UAnathemaCharacterRepositionAbility : public UAnathemaGameplayAbility
{
public:
	bool                                         bShouldOverrideExternalParameters;                 // 0x448(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShouldEaseIn;                                     // 0x449(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShouldEaseOut;                                    // 0x44A(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShouldForceShortestPath;                          // 0x44B(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InterpolationTime;                                 // 0x44C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAbilityTask_RepositionActor*          RepositionPlayerTask;                              // 0x450(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UAnathemaCharacterRepositionAbility* GetDefaultObj();

	void OnMoveComponentToCompleted();
};

// 0x8 (0x38 - 0x30)
// Class LOTF2.AnathemaFXManager
class UAnathemaFXManager : public UWorldSubsystem
{
public:
	bool                                         bDebugDisplayFXTraces;                             // 0x30(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bDebugDisplayFXTracesOnlyPlayer;                   // 0x31(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bDebugDisplayVFXDirection;                         // 0x32(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bDebugDisplayVFXAttackType;                        // 0x33(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2656[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAnathemaFXManager* GetDefaultObj();

	class UNiagaraComponent* SpawnNiagaraSystemOnLocation(class UNiagaraSystem* NiagaraSystem, struct FVector& Location, struct FRotator& Rotation, struct FVector& Scale);
	class UNiagaraComponent* SpawnNiagaraSystemOnActor(class AActor* Actor, class UNiagaraSystem* NiagaraSystem, class FName SocketName, struct FRotator& Rotation);
	void SpawnNiagaraAttachedWithOffset(class UNiagaraSystem* NiagaraSystem, class USceneComponent* Mesh, class FName SocketName, struct FVector& PointLocation, bool ApplyOffset);
	void SpawnMultipleDecalsAtLocation(TArray<class UMaterialInterface*>& DecalMaterials, const struct FDecalRandomizationData& RandomizationData, struct FVector& Size, struct FVector& Location, struct FRotator& Rotation, float LifeSpan);
	void SpawnMultipleDecalsAroundActor(TArray<class UMaterialInterface*>& DecalMaterials, const struct FDecalRandomizationData& RandomizationData, class AActor* Actor, struct FVector& Size, struct FRotator& Rotation, float LifeSpan);
	class UDecalComponent* SpawnDecalAtLocation(class UMaterialInterface* DecalMaterial, const struct FDecalRandomizationData& RandomizationData, struct FVector& Size, struct FVector& Location, struct FRotator& Rotation, float LifeSpan);
	void NotifyDebug();
	bool GetDebugDisplayVFXDirection();
	bool GetDebugDisplayVFXAttackType();
	void DisplayHitDebugInfo(class AActor* CharacterActor, class AActor* Hitactor, struct FVector& TraceStart, struct FVector& TraceEnd, bool IsSphere, int32 Radius, class UPhysicalMaterial* PhysicalMaterial, struct FVector& ImpactPoint, const struct FColor& DebugColorLine);
};

// 0x10 (0x468 - 0x458)
// Class LOTF2.AnathemaGameplayCueNotify_Burst
class UAnathemaGameplayCueNotify_Burst : public UGameplayCueNotify_Burst
{
public:
	TArray<struct FAkAnathemaEvent>              AkAnathemaEvents;                                  // 0x458(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UAnathemaGameplayCueNotify_Burst* GetDefaultObj();

};

// 0x10 (0x780 - 0x770)
// Class LOTF2.AnathemaGameplayCueNotify_BurstLatent
class AAnathemaGameplayCueNotify_BurstLatent : public AGameplayCueNotify_BurstLatent
{
public:
	TArray<struct FAkAnathemaEvent>              AkAnathemaEvents;                                  // 0x770(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AAnathemaGameplayCueNotify_BurstLatent* GetDefaultObj();

};

// 0xB0 (0x518 - 0x468)
// Class LOTF2.AnathemaGameplayCueNotify_EnvironmentHit
class UAnathemaGameplayCueNotify_EnvironmentHit : public UAnathemaGameplayCueNotify_Burst
{
public:
	struct FAkAnathemaEvent                      AkAnathemaEventEnvironment;                        // 0x468(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FAkAnathemaEvent                      AkAnathemaEventWeapon;                             // 0x4B8(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UEnvironmentHitFXData*                 EnvironmentHitFXData;                              // 0x508(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EAnathemaEnvironemntHitFXIntensity HitIntensity;                                      // 0x510(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2657[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAnathemaGameplayCueNotify_EnvironmentHit* GetDefaultObj();

};

// 0x58 (0x1310 - 0x12B8)
// Class LOTF2.AnathemaGameplayCueNotify_Looping
class AAnathemaGameplayCueNotify_Looping : public AGameplayCueNotify_Looping
{
public:
	TArray<struct FAkAnathemaEvent>              ApplicationAkAnathemaEvents;                       // 0x12B8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FAkAnathemaEvent>              LoopingAkAnathemaEvents;                           // 0x12C8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FAkAnathemaEvent>              RecurringAkAnathemaEvents;                         // 0x12D8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FAkAnathemaEvent>              RemovalAkAnathemaEvents;                           // 0x12E8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint32                                       TransitionDuration_ms;                             // 0x12F8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EAkCurveInterpolation             EFadeCuve;                                         // 0x12FC(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2658[0x13];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AAnathemaGameplayCueNotify_Looping* GetDefaultObj();

	class UGameplayAbility* GetAbility(struct FGameplayCueParameters& Parameters);
};

// 0x0 (0x38 - 0x38)
// Class LOTF2.HexDeveloperSettings
class UHexDeveloperSettings : public UDeveloperSettings
{
public:

	static class UClass* StaticClass();
	static class UHexDeveloperSettings* GetDefaultObj();

};

// 0x10 (0x48 - 0x38)
// Class LOTF2.AnathemaGameSystemsSettings
class UAnathemaGameSystemsSettings : public UHexDeveloperSettings
{
public:
	TSubclassOf<class UPickupFactory>            PickupFactoryClass;                                // 0x38(0x8)(Edit, ZeroConstructor, Config, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UInventoryItemFactory>     InventoryItemFactoryClass;                         // 0x40(0x8)(Edit, ZeroConstructor, Config, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UAnathemaGameSystemsSettings* GetDefaultObj();

};

// 0x30 (0x60 - 0x30)
// Class LOTF2.AnathemaGameSystems
class UAnathemaGameSystems : public UWorldSubsystem
{
public:
	class UPickupFactory*                        PickupFactory;                                     // 0x30(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInventoryItemFactory*                 InventoryItemFactory;                              // 0x38(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USpawnDirector*                        SpawnDirector;                                     // 0x40(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ULOTF2AI*                              LOTF2AI;                                           // 0x48(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPropSettings*                         PropSettings;                                      // 0x50(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2659[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAnathemaGameSystems* GetDefaultObj();

	void OnGameModeInitialized(class AGameModeBase* GameMode);
	class USpawnDirector* GetSpawnDirector();
	class UPropSettings* GetPropSettings();
	void FlushCurrentWorldStreaming();
};

// 0xD0 (0x518 - 0x448)
// Class LOTF2.AnathemaHitReactAbility
class UAnathemaHitReactAbility : public UAnathemaGameplayAbility
{
public:
	TArray<struct FHitReactData>                 HitReactions;                                      // 0x448(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, struct FHitReactEventData> HitReactionEvents;                                 // 0x458(0x50)(Edit, NativeAccessSpecifierPublic)
	bool                                         ApplyAdditionalRotation;                           // 0x4A8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_265A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRotator                              AdditionalRotationCorrection;                      // 0x4B0(0x18)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class UCurveFloat*                           DynamicKnockbackCurve;                             // 0x4C8(0x8)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRequiresMontage;                                  // 0x4D0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_265B[0x27];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UHexAICharacterMovementComponent*      MovementComponent;                                 // 0x4F8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_265C[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAnathemaHitReactAbility* GetDefaultObj();

	void OnProtoSecondaryInterruptsTimingArrived();
	void OnProtoPrimaryInterruptsTimingArrived();
	void OnMontageDone(enum class EOnMontageDoneReason DoneReason);
	class UAnimMontage* GetCustomAnimMontageByTag(struct FGameplayTag& AnimationTag);
};

// 0x20 (0x2C0 - 0x2A0)
// Class LOTF2.LOTF2GameplayActor
class ALOTF2GameplayActor : public AActor
{
public:
	uint8                                        Pad_265D[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EAbilitySystemComponentCreationPolicy AbilitySystemComponentCreationPolicy;              // 0x2A8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_265E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnathemaAbilitySystemComponent*       AbilitySystemComponent;                            // 0x2B0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnathemaAbilitySystemComponent*       ReplicatedAbilitySystemComponent;                  // 0x2B8(0x8)(ExportObject, Net, ZeroConstructor, Transient, InstancedReference, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ALOTF2GameplayActor* GetDefaultObj();

	void OnRep_ReplicatedAbilitySystemComponent();
};

// 0x98 (0x358 - 0x2C0)
// Class LOTF2.AnathemaSyncedInteractable
class AAnathemaSyncedInteractable : public ALOTF2GameplayActor
{
public:
	class USceneComponent*                       UIRootComponent;                                   // 0x2C0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInteractionComponent*                 InteractionComponent;                              // 0x2C8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHexSyncedAnimComponent*               SyncedAnimComponent;                               // 0x2D0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULOTF2SerializationComponent*          SerializationComponent;                            // 0x2D8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<class FName, struct FInteractableState> InteractableStates;                                // 0x2E0(0x50)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class FName                                  DefaultState;                                      // 0x330(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class USkeletalMeshComponent*>        InteractableSkeletalMeshComponents;                // 0x338(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FInteractableCurrentState             CurrentState;                                      // 0x348(0xC)(BlueprintVisible, BlueprintReadOnly, Net, SaveGame, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_265F[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AAnathemaSyncedInteractable* GetDefaultObj();

	void TransitionToState(class FName NewState, class UInteractionContext* Context);
	void OnSyncedAnimationFinished();
	void OnStateTransitionStart(class FName State);
	void OnStateSet(class FName State);
	void OnRep_CurrentState();
	void OnInteraction(class UInteractionContext* InteractionContext);
	struct FInteractableCurrentState GetCurrentState();
};

// 0x150 (0x4A8 - 0x358)
// Class LOTF2.AnathemaInteractableDoor
class AAnathemaInteractableDoor : public AAnathemaSyncedInteractable
{
public:
	class ULockComponent*                        LockComponent;                                     // 0x358(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bCanOpen;                                          // 0x360(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2661[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class FName, class FName>               SlotsToIncorrectSideStates;                        // 0x368(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TMap<class FName, class FName>               SlotsToOpenStates;                                 // 0x3B8(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TMap<class FName, class FName>               SlotsToFailedToUnlockStates;                       // 0x408(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	bool                                         bIsOpen;                                           // 0x458(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2662[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class AAkAcousticPortal>      AcousticPortal;                                    // 0x460(0x30)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        AcousticPortalOpenDelaySeconds;                    // 0x490(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        AcousticPortalCloseDelaySeconds;                   // 0x494(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  KOpenStateName;                                    // 0x498(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  KOpenAltStateName;                                 // 0x4A0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AAnathemaInteractableDoor* GetDefaultObj();

	void Reset();
	bool IsOpen();
	void HandleOpen(const struct FDoorActionContext& DoorActionContext);
	class ULockComponent* GetLockComponent();
	class AAkAcousticPortal* GetAcousticPortal();
	bool CanInteract(class UInteractionContext* InteractionContext);
};

// 0x58 (0x3B0 - 0x358)
// Class LOTF2.AnathemaItemContainer
class AAnathemaItemContainer : public AAnathemaSyncedInteractable
{
public:
	class USphereComponent*                      InteractionTrigger;                                // 0x358(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UItemData*>                     Contents;                                          // 0x360(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<TSoftClassPtr<class UItemData>>       LootContent;                                       // 0x370(0x10)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	struct FDataTableRowHandle                   LootTable;                                         // 0x380(0x10)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	bool                                         bHasBeenOpened;                                    // 0x390(0x1)(Edit, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bAutoAddItemToInventory;                           // 0x391(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2664[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AController*                           CurrentInteractorController;                       // 0x398(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2665[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AAnathemaItemContainer* GetDefaultObj();

	bool TryOpenInteraction(class AActor* Interactor);
	struct FDataTableRowHandle GetLootTable();
	bool GetHasBeenOpened();
	void AddItemToInventory();
};

// 0x60 (0x308 - 0x2A8)
// Class LOTF2.AnathemaLevelScript
class AAnathemaLevelScript : public ALevelScriptActor
{
public:
	uint8                                        Pad_2666[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AProxyManager*                         ProxyManager;                                      // 0x2F8(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bShouldCreateWitherSubsystem;                      // 0x300(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2667[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AAnathemaLevelScript* GetDefaultObj();

};

// 0xD8 (0x110 - 0x38)
// Class LOTF2.AnathemaSoundManagerSettings
class UAnathemaSoundManagerSettings : public UHexDeveloperSettings
{
public:
	class FString                                ControllerSpeakerBusName;                          // 0x38(0x10)(Edit, ZeroConstructor, Config, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                MotionBusName;                                     // 0x48(0x10)(Edit, ZeroConstructor, Config, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                Master_BusVolume;                                  // 0x58(0x10)(Edit, ZeroConstructor, Config, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                SFX_BusVolume;                                     // 0x68(0x10)(Edit, ZeroConstructor, Config, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                Music_BusVolume;                                   // 0x78(0x10)(Edit, ZeroConstructor, Config, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                VO_BusVolume;                                      // 0x88(0x10)(Edit, ZeroConstructor, Config, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                Environment_BusVolume;                             // 0x98(0x10)(Edit, ZeroConstructor, Config, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                ControllerSpeaker_BusVolume;                       // 0xA8(0x10)(Edit, ZeroConstructor, Config, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HexOcclusionRefreshInterval;                       // 0xB8(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2668[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAkAnathemaEvent                      QuestItemAudio;                                    // 0xC0(0x50)(Edit, Config, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UAnathemaSoundManagerSettings* GetDefaultObj();

};

// 0x40 (0x70 - 0x30)
// Class LOTF2.AnathemaSoundManager
class UAnathemaSoundManager : public UWorldSubsystem
{
public:
	uint8                                        Pad_266F[0x40];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAnathemaSoundManager* GetDefaultObj();

	void SpawnAkEventAtLocationAndPostOnAkComponent(struct FAkAnathemaEvent& AkAnathemaEvent, const struct FVector& Location, const struct FRotator& Orientation, class UWorld* In_World, class UAkSwitchValue* AkSwitch);
	void SetSwitchOnPlayer(class FName Scope, class UAkSwitchValue* AkSwitch, int32 PlayerIndex);
	void SetSwitchOnAkComponent(class UAkComponent* AkComponent, class FName Scope, class UAkSwitchValue* AkSwitch);
	void SetSwitchOnActor(class AActor* Actor, class FName Scope, class UAkSwitchValue* AkSwitch);
	void SetRtpcOnPlayer(class UAkRtpc* RTPC, float Val, int32 InterpolationTimeMs, int32 PlayerIndex);
	void SetRtpcOnAkComponent(class UAkComponent* AkComponent, class UAkRtpc* RTPC, float Val, int32 InterpolationTimeMs);
	void SetRtpcOnActor(class AActor* Actor, class UAkRtpc* RTPC, float Val, int32 InterpolationTimeMs);
	void SetRtpcGlobal(const class FString& RtpcName, float Val);
	void PostAkAnathemaEventOnPlayer(struct FAkAnathemaEvent& AkAnathemaEvent, int32 PlayerIndex);
	void PostAkAnathemaEventOnLocation(struct FAkAnathemaEvent& AkAnathemaEvent, struct FVector& Location, struct FRotator& Rotation);
	void PostAkAnathemaEventOnAkComponent(struct FAkAnathemaEvent& AkAnathemaEvent, class UAkComponent* AkComponent);
	void PostAkAnathemaEventOnActor(struct FAkAnathemaEvent& AkAnathemaEvent, class AActor* PlayingActor);
	void PostAkAnathemaEventFromGameplayCueNotify(struct FAkAnathemaEvent& AkAnathemaEvent, class AActor* Target, bool ShouldAttachToTarget, class UObject* GcObjectForDebug);
	void OnAkPostEventCallback(enum class EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo);
	void MulticastPostAkAnathemaEventAtLocation(struct FAkAnathemaEvent& AkAnathemaEvent, struct FVector& Location, struct FRotator& Rotation, class UWorld* World);
	void GlobalMuteSwitch();
	void CallGlobalMuteSwitch();
};

// 0xD0 (0x150 - 0x80)
// Class LOTF2.AnathemaTask_PlayMontage
class UAnathemaTask_PlayMontage : public UAbilityTask
{
public:
	FMulticastInlineDelegateProperty_            OnCompleted;                                       // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnBlendOut;                                        // 0x90(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnInterrupted;                                     // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCancelled;                                       // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnDone;                                            // 0xC0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnNotifyBegin;                                     // 0xD0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnNotifyEnd;                                       // 0xE0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UAnimMontage*                          MontageToPlay;                                     // 0xF0(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        Rate;                                              // 0xF8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  StartSection;                                      // 0xFC(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AnimRootMotionTranslationScale;                    // 0x104(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        StartTimeSeconds;                                  // 0x108(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bStopWhenAbilityEnds;                              // 0x10C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bForceDisableAutoBlendOut;                         // 0x10D(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EHexFocusDirectionUpdateMode      FocusUpdateMode;                                   // 0x10E(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2697[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        OverrideBlendInTime;                               // 0x110(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2698[0x3C];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAnathemaTask_PlayMontage* GetDefaultObj();

	void OnMontageEnded(class UAnimMontage* Montage, bool bInterrupted);
	void OnMontageBlendingOut(class UAnimMontage* Montage, bool bInterrupted);
	void OnAbilityCanceled();
	void HandleOnPlayMontageNotifyEnd(class FName NotifyName, struct FBranchingPointNotifyPayload& Payload);
	void HandleOnPlayMontageNotifyBegin(class FName NotifyName, struct FBranchingPointNotifyPayload& Payload);
	class UAnathemaTask_PlayMontage* CreatePlayMontageTask_Dynamic(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, class UAnimSequenceBase* AnimSequence, float PlayRate, class FName Slot, float BlendInTime, float BlendOutTime, int32 LoopCount, float BlendOutTriggerTime, float StartTime);
	class UAnathemaTask_PlayMontage* CreatePlayMontageTask_BlendSpaceDynamic(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, class UBlendSpace* BlendSpace, const struct FVector& BlendSpaceInput, float PlayRate, class FName Slot, float BlendInTime, float BlendOutTime, int32 LoopCount, float BlendOutTriggerTime, float StartTime);
	class UAnathemaTask_PlayMontage* CreatePlayMontageTask(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, class UAnimationAsset* Anim, float PlayRate, float BlendInTime, float BlendOutTime, class FName StartSection, const struct FVector& BlendSpaceInput);
	class UAnathemaTask_PlayMontage* CreatePlayMontageProxyGroupedParameters(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, struct FCreatePlayMontageProxyParameters& Parameters);
	class UAnathemaTask_PlayMontage* CreatePlayMontageProxy(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, class UAnimMontage* MontageToPlay, float Rate, class FName StartSection, bool bStopWhenAbilityEnds, enum class EHexFocusDirectionUpdateMode FocusUpdateMode, float AnimRootMotionTranslationScale, float StartTimeSeconds, bool bForceDisableAutoBlendOut, float OverrideBlendInTime);
};

// 0x30 (0x98 - 0x68)
// Class LOTF2.AnathemaTask_WaitGameplayEvent
class UAnathemaTask_WaitGameplayEvent : public UGameplayTask
{
public:
	FMulticastInlineDelegateProperty_            EventReceived;                                     // 0x68(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	uint8                                        Pad_269D[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAbilitySystemComponent*               OptionalExternalTarget;                            // 0x80(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_269E[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAnathemaTask_WaitGameplayEvent* GetDefaultObj();

	class UAnathemaTask_WaitGameplayEvent* WaitGameplayEvent(class AActor* TargetActor, const struct FGameplayTag& EventTag, bool OnlyTriggerOnce, bool OnlyMatchExact);
};

// 0x8 (0x30 - 0x28)
// Class LOTF2.AnathemaTickableObject
class UAnathemaTickableObject : public UObject
{
public:
	uint8                                        Pad_269F[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAnathemaTickableObject* GetDefaultObj();

};

// 0x0 (0x278 - 0x278)
// Class LOTF2.AnathamaWidget
class UAnathamaWidget : public UUserWidget
{
public:

	static class UClass* StaticClass();
	static class UAnathamaWidget* GetDefaultObj();

	void OnControllerNewPawn(class APawn* PPawn);
	void OnControllerEndPlay(class APawn* PPawn);
	void OnControllerBeginPlay(class APawn* PPawn);
};

// 0x8 (0x590 - 0x588)
// Class LOTF2.AnchorForbiddenAreaComponent
class UAnchorForbiddenAreaComponent : public UBoxComponent
{
public:
	uint8                                        Pad_26A2[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAnchorForbiddenAreaComponent* GetDefaultObj();

};

// 0x0 (0x2D8 - 0x2D8)
// Class LOTF2.AnchorForbiddenVolume
class AAnchorForbiddenVolume : public AVolume
{
public:

	static class UClass* StaticClass();
	static class AAnchorForbiddenVolume* GetDefaultObj();

};

// 0x8 (0x590 - 0x588)
// Class LOTF2.AnchorForgingAreaComponent
class UAnchorForgingAreaComponent : public UBoxComponent
{
public:
	uint8                                        Pad_26A6[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAnchorForgingAreaComponent* GetDefaultObj();

	void OnEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
};

// 0x0 (0x2E8 - 0x2E8)
// Class LOTF2.AnchorForgingAreaVolume
class AAnchorForgingAreaVolume : public APhysicsVolume
{
public:

	static class UClass* StaticClass();
	static class AAnchorForgingAreaVolume* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class LOTF2.AnchorMenuInterface
class IAnchorMenuInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IAnchorMenuInterface* GetDefaultObj();

};

// 0x260 (0x738 - 0x4D8)
// Class LOTF2.AnchorMenuWidget
class UAnchorMenuWidget : public UHexActivatableWidget
{
public:
	FMulticastInlineDelegateProperty_            OnAnchorMenuClosed;                                // 0x4D8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnAnchorMenuOpened;                                // 0x4E8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UCommonTextBlock*                      Text_FastTravel;                                   // 0x4F8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVerticalBox*                          Button_Panel;                                      // 0x500(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBackgroundBlur*                       Blur;                                              // 0x508(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFocusableButtonWidget*                Button_UpgradeCharacter;                           // 0x510(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFocusableButtonWidget*                Button_UpgradeEquipment;                           // 0x518(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFocusableButtonWidget*                Button_Resurrect;                                  // 0x520(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFocusableButtonWidget*                Button_ResurrectPartner;                           // 0x528(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFocusableButtonWidget*                Button_FastTravel;                                 // 0x530(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFocusableButtonWidget*                Button_Multiplayer;                                // 0x538(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFocusableButtonWidget*                Button_LogIn;                                      // 0x540(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                      Text_LogIn;                                        // 0x548(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                       MultiplayerSwitcher;                               // 0x550(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFocusableButtonWidget*                Button_StartMatchmaking;                           // 0x558(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFocusableButtonWidget*                Button_StopMatchmaking;                            // 0x560(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFocusableButtonWidget*                Button_InviteFriends;                              // 0x568(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFocusableButtonWidget*                Button_StartJoining;                               // 0x570(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFocusableButtonWidget*                Button_StopJoining;                                // 0x578(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFocusableButtonWidget*                Button_StartInvading;                              // 0x580(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFocusableButtonWidget*                Button_StopInvading;                               // 0x588(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFocusableButtonWidget*                Button_ProtoRunes;                                 // 0x590(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFocusableButtonWidget*                Button_NewGamePlus;                                // 0x598(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                      Text_NewGamePlus;                                  // 0x5A0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFocusableButtonWidget*                Button_Back;                                       // 0x5A8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOverlay*                              Container_ResurrectPartner;                        // 0x5B0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UHexActivatableWidget>   Upgrade_Character_Widget;                          // 0x5B8(0x30)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UHexActivatableWidget>   Upgrade_Equipment_Widget;                          // 0x5E8(0x30)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UHexActivatableWidget>   Upgrade_HealthPotion_Widget;                       // 0x618(0x30)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UHexActivatableWidget>   Fast_Travel_Widget;                                // 0x648(0x30)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UOnlineLobbyScreenWidget> Online_Lobby_Widget;                               // 0x678(0x30)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UCommonActivatableWidget> Proto_RunesScreen_Widget;                          // 0x6A8(0x30)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                  LoginFailedText;                                   // 0x6D8(0x18)(Edit, Protected, NativeAccessSpecifierProtected)
	class FText                                  CreateSessionFailedText;                           // 0x6F0(0x18)(Edit, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_26C6[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAnchorMenuWidget* GetDefaultObj();

	void ProcessOnlineButtonVisibilityDynamic(class ALOTF2WorldGameSession* GameSession);
	void OnUpgradeHealthPotion();
	void OnUpgradeEquipment();
	void OnUpgradeCharacter();
	void OnReturnToForgedAnchor();
	void OnResurrectPartner();
	void OnResurrect();
	void OnOpenProtoRunes();
	void OnInterrupted();
	void OnFastTravel();
	void OnCloseAnchorMenu();
	void OnAnchorMenuReady();
	void OnAnchorDestroyed(class AActor* DestroyedActor);
	bool IsReturnToForgedAnchorAvailable();
	void HandleStopMatchmaking();
	void HandleStopJoining();
	void HandleStopInvading();
	void HandleStartMatchmaking();
	void HandleStartJoining();
	void HandleStartInvading();
	void HandlePlayerStateAdded(class APlayerState* PlayerState);
	void HandleNewGamePlus();
	void HandleMultiplayerButton();
	void HandleLogInButton();
	void HandleInviteFriends();
	void HandleButtonBackMultiplayer();
	class ADualRealmAnchorActor* GetAnchorActor();
	void CloseMenu();
	void BP_LevelUpAvailable(bool bLevelUpAvailable);
};

// 0x18 (0x60 - 0x48)
// Class LOTF2.AngleConsideration
class UAngleConsideration : public UAIConsideration
{
public:
	class UCurveFloat*                           Curve;                                             // 0x48(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EeAIDirection                     Direction;                                         // 0x50(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26C7[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AngleToCheck;                                      // 0x54(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26C8[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAngleConsideration* GetDefaultObj();

};

// 0x38 (0x2E0 - 0x2A8)
// Class LOTF2.AnimatedImage
class UAnimatedImage : public UImage
{
public:
	FMulticastInlineDelegateProperty_            OnAnimationDone;                                   // 0x2A8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	int32                                        FramesPerSecond;                                   // 0x2B8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        CurrentFrame;                                      // 0x2BC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        TotalFrames;                                       // 0x2C0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bLoopAnimation;                                    // 0x2C4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26C9[0x1B];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAnimatedImage* GetDefaultObj();

	void Stop();
	void SetTargetFrame(int32 Frame);
	void SetCurrentFrame(int32 Frame);
	void Play();
	int32 GetTotalFrames();
};

// 0x10 (0x40 - 0x30)
// Class LOTF2.AnimationAttributeSet
class UAnimationAttributeSet : public UAttributeSet
{
public:
	struct FGameplayAttributeData                AnimationPlayRate;                                 // 0x30(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UAnimationAttributeSet* GetDefaultObj();

	void OnRep_AnimationPlayRate(struct FGameplayAttributeData& OldPlayRate);
};

// 0x5D0 (0x600 - 0x30)
// Class LOTF2.AnimationData
class UAnimationData : public UPrimaryDataAsset
{
public:
	struct FCharacterAnimationsConfig            Animations;                                        // 0x30(0x5D0)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UAnimationData* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class LOTF2.AnimNotifyCustomBeginEndInterface
class IAnimNotifyCustomBeginEndInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IAnimNotifyCustomBeginEndInterface* GetDefaultObj();

};

// 0x28 (0x58 - 0x30)
// Class LOTF2.AnimNotifyState_ActionDirection
class UAnimNotifyState_ActionDirection : public UAnimNotifyState
{
public:
	class FName                                  WeaponSocketName;                                  // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEquipableInventoryWeapon*             WeaponToTrack;                                     // 0x38(0x8)(BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_26CC[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAnimNotifyState_ActionDirection* GetDefaultObj();

};

// 0xB8 (0xE8 - 0x30)
// Class LOTF2.AnimNotifyState_AkAnathemaEvent
class UAnimNotifyState_AkAnathemaEvent : public UAnimNotifyState
{
public:
	class FName                                  AttachName;                                        // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          AkAnathemaEventOverrideTagBegin;                   // 0x38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FAkAnathemaEvent                      AkStartEvent;                                      // 0x40(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTag                          AkAnathemaEventOverrideTagEnd;                     // 0x90(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FAkAnathemaEvent                      AkEndEvent;                                        // 0x98(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UAnimNotifyState_AkAnathemaEvent* GetDefaultObj();

};

// 0x70 (0xA0 - 0x30)
// Class LOTF2.AnimNotifyState_BaseConditionalTag
class UAnimNotifyState_BaseConditionalTag : public UAnimNotifyState
{
public:
	uint8                                        Pad_26D0[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FConditionalTagNotifySettings         ConditionalTagSettings;                            // 0x38(0x60)(Edit, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	bool                                         bAllowInstantCustomNotifiesOnFrameZero;            // 0x98(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26D1[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAnimNotifyState_BaseConditionalTag* GetDefaultObj();

	void StoreCustomData(class UObject* CustomData, class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, int32 MontageInstanceID);
	bool ShouldTriggerNotify(class USkeletalMeshComponent* MeshComp);
	class FName GetNotifyIdentifier(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);
	void BP_NotifyTickImplementation(class USkeletalMeshComponent* SkeletalMeshComponent, class UAnimSequenceBase* Animation, float FrameDeltaTime, class UObject* CustomData);
	void BP_NotifyEndImplementation(class USkeletalMeshComponent* SkeletalMeshComponent, class UAnimSequenceBase* Animation, class UObject* CustomData);
	void BP_NotifyBeginImplementation(class USkeletalMeshComponent* SkeletalMeshComponent, class UAnimSequenceBase* Animation, float TotalDuration, int32 MontageInstanceID);
};

// 0x10 (0xB0 - 0xA0)
// Class LOTF2.AnimNotifyState_AutonomousAbility
class UAnimNotifyState_AutonomousAbility : public UAnimNotifyState_BaseConditionalTag
{
public:
	struct FDataTableRowHandle                   AutonomousAbilityDefinitionHandle;                 // 0xA0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UAnimNotifyState_AutonomousAbility* GetDefaultObj();

};

// 0x0 (0xA0 - 0xA0)
// Class LOTF2.AnimNotifyState_BaseGameplayEffect
class UAnimNotifyState_BaseGameplayEffect : public UAnimNotifyState_BaseConditionalTag
{
public:

	static class UClass* StaticClass();
	static class UAnimNotifyState_BaseGameplayEffect* GetDefaultObj();

	void BP_ModifySpecHandle(const struct FGameplayEffectSpecHandle& SpecHandle);
};

// 0x60 (0x198 - 0x138)
// Class LOTF2.AnimNotifyState_ConditionalTimedNiagaraEffectAdvanced
class UAnimNotifyState_ConditionalTimedNiagaraEffectAdvanced : public UAnimNotifyState_TimedNiagaraEffectAdvanced
{
public:
	struct FConditionalTagNotifySettings         ConditionalTagSettings;                            // 0x138(0x60)(Edit, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UAnimNotifyState_ConditionalTimedNiagaraEffectAdvanced* GetDefaultObj();

};

// 0x8 (0xA8 - 0xA0)
// Class LOTF2.AnimNotifyState_FacingAngleCorrection
class UAnimNotifyState_FacingAngleCorrection : public UAnimNotifyState_BaseGameplayEffect
{
public:
	float                                        FacingAngleCorrection;                             // 0xA0(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26D2[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAnimNotifyState_FacingAngleCorrection* GetDefaultObj();

};

// 0x58 (0x88 - 0x30)
// Class LOTF2.AnimNotifyState_FrameTiming
class UAnimNotifyState_FrameTiming : public UAnimNotifyState
{
public:
	TMap<class FName, int32>                     SectionsFrameTimings;                              // 0x30(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                         bRealFrames;                                       // 0x80(0x1)(BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26D5[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAnimNotifyState_FrameTiming* GetDefaultObj();

	bool IsRealFrames();
};

// 0x8 (0xA8 - 0xA0)
// Class LOTF2.AnimNotifyState_GameplayEffect
class UAnimNotifyState_GameplayEffect : public UAnimNotifyState_BaseGameplayEffect
{
public:
	TSubclassOf<class UGameplayEffect>           GameplayEffect;                                    // 0xA0(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UAnimNotifyState_GameplayEffect* GetDefaultObj();

};

// 0x10 (0xB0 - 0xA0)
// Class LOTF2.AnimNotifyState_GameplayTag
class UAnimNotifyState_GameplayTag : public UAnimNotifyState_BaseConditionalTag
{
public:
	struct FGameplayTag                          GameplayTag;                                       // 0xA0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShouldRemoveOnEnd;                                // 0xA8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26D7[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAnimNotifyState_GameplayTag* GetDefaultObj();

};

// 0x88 (0x128 - 0xA0)
// Class LOTF2.AnimNotifyState_NiagaraTrail
class UAnimNotifyState_NiagaraTrail : public UAnimNotifyState_BaseConditionalTag
{
public:
	struct FNiagaraSystem_WithParams             Template_WithParams;                               // 0xA0(0x58)(Edit, BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class FName                                  FirstSocketName;                                   // 0xF8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SecondSocketName;                                  // 0x100(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LocationOffset;                                    // 0x108(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDestroyAtEnd;                                     // 0x120(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26DD[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAnimNotifyState_NiagaraTrail* GetDefaultObj();

	class UFXSystemComponent* GetSpawnedEffect(class UMeshComponent* MeshComp);
};

// 0x50 (0x80 - 0x30)
// Class LOTF2.AnimNotifyState_PropEffect
class UAnimNotifyState_PropEffect : public UAnimNotifyState
{
public:
	class UNiagaraSystem*                        Template;                                          // 0x30(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPropJoint                        PropJoint;                                         // 0x38(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26E0[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  SocketName;                                        // 0x3C(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26E1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               LocationOffset;                                    // 0x48(0x18)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              RotationOffset;                                    // 0x60(0x18)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bDestroyAtEnd;                                     // 0x78(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26E2[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAnimNotifyState_PropEffect* GetDefaultObj();

};

// 0x8 (0x130 - 0x128)
// Class LOTF2.AnimNotifyState_PropNiagaraTrail
class UAnimNotifyState_PropNiagaraTrail : public UAnimNotifyState_NiagaraTrail
{
public:
	enum class EPropJoint                        PropJoint;                                         // 0x128(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFEquipmentSlot                   EquipmentSlot;                                     // 0x129(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26E4[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAnimNotifyState_PropNiagaraTrail* GetDefaultObj();

};

// 0x68 (0xC0 - 0x58)
// Class LOTF2.AnimNotifyState_PropTrail
class UAnimNotifyState_PropTrail : public UAnimNotifyState_Trail
{
public:
	enum class EPropJoint                        PropJoint;                                         // 0x58(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26E6[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FConditionalTagNotifySettings         ConditionalTagSettings;                            // 0x60(0x60)(Edit, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UAnimNotifyState_PropTrail* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class LOTF2.AnimNotifyState_StopAILogic
class UAnimNotifyState_StopAILogic : public UAnimNotifyState
{
public:

	static class UClass* StaticClass();
	static class UAnimNotifyState_StopAILogic* GetDefaultObj();

};

// 0x120 (0x1C0 - 0xA0)
// Class LOTF2.AnimNotifyState_SubAutonomousAbilityBase
class UAnimNotifyState_SubAutonomousAbilityBase : public UAnimNotifyState_BaseConditionalTag
{
public:
	struct FSpawnDefinition                      SpawnDefinition;                                   // 0xA0(0x120)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UAnimNotifyState_SubAutonomousAbilityBase* GetDefaultObj();

};

// 0x8 (0x1C8 - 0x1C0)
// Class LOTF2.AnimNotifyState_SubAutonomousAbility
class UAnimNotifyState_SubAutonomousAbility : public UAnimNotifyState_SubAutonomousAbilityBase
{
public:
	TSubclassOf<class USubAutonomousAbilityData> SubAutonomousAbilityData;                          // 0x1C0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UAnimNotifyState_SubAutonomousAbility* GetDefaultObj();

};

// 0x8 (0x1C8 - 0x1C0)
// Class LOTF2.AnimNotifyState_SAA_Projectile
class UAnimNotifyState_SAA_Projectile : public UAnimNotifyState_SubAutonomousAbilityBase
{
public:
	TSubclassOf<class USAA_ProjectileData>       SubAutonomousAbilityData;                          // 0x1C0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UAnimNotifyState_SAA_Projectile* GetDefaultObj();

};

// 0x60 (0x98 - 0x38)
// Class LOTF2.AnimNotify_BaseConditionalTag
class UAnimNotify_BaseConditionalTag : public UAnimNotify
{
public:
	struct FConditionalTagNotifySettings         ConditionalTagSettings;                            // 0x38(0x60)(Edit, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UAnimNotify_BaseConditionalTag* GetDefaultObj();

	void BP_NotifyImplementation(class USkeletalMeshComponent* SkeletalMeshComponent, class UAnimSequenceBase* Animation);
};

// 0xD0 (0x168 - 0x98)
// Class LOTF2.AnimNotify_AkAnathemaEvent
class UAnimNotify_AkAnathemaEvent : public UAnimNotify_BaseConditionalTag
{
public:
	class FName                                  AttachName;                                        // 0x98(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bFollow;                                           // 0xA0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26ED[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAkAnathemaEvent                      AkAnathemaSwitchEvent;                             // 0xA8(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTag                          AkAnathemaEventOverrideTag;                        // 0xF8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FAkAnathemaEvent                      AkAnathemaEvent;                                   // 0x100(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class UNiagaraSystem*                        VisualFX;                                          // 0x150(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  VisualAttachName;                                  // 0x158(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         ApplySwitchForWeaponHit;                           // 0x160(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFEquipmentSlot                   EquipmentSlot;                                     // 0x161(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bTriggerSubtitles;                                 // 0x162(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26EF[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAnimNotify_AkAnathemaEvent* GetDefaultObj();

};

// 0x20 (0xB8 - 0x98)
// Class LOTF2.AnimNotify_AutonomousAbility
class UAnimNotify_AutonomousAbility : public UAnimNotify_BaseConditionalTag
{
public:
	struct FDataTableRowHandle                   AutonomousAbilityDefinitionHandle;                 // 0x98(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_26F4[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAnimNotify_AutonomousAbility* GetDefaultObj();

};

// 0x60 (0x180 - 0x120)
// Class LOTF2.AnimNotify_ConditionalNiagaraEffect
class UAnimNotify_ConditionalNiagaraEffect : public UAnimNotify_PlayNiagaraEffect
{
public:
	struct FConditionalTagNotifySettings         ConditionalTagSettings;                            // 0x120(0x60)(Edit, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UAnimNotify_ConditionalNiagaraEffect* GetDefaultObj();

};

// 0x18 (0x50 - 0x38)
// Class LOTF2.AnimNotify_DamageTarget
class UAnimNotify_DamageTarget : public UAnimNotify
{
public:
	struct FDataTableRowHandle                   AttackDamageDefinitionHandle;                      // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	enum class EFEquipmentSlot                   SlotToUse;                                         // 0x48(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EPropJoint                        PropToUse;                                         // 0x49(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EReferenceActor                   ActorToDamage;                                     // 0x4A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26F8[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAnimNotify_DamageTarget* GetDefaultObj();

};

// 0x38 (0x70 - 0x38)
// Class LOTF2.AnimNotify_EnvironmentHit
class UAnimNotify_EnvironmentHit : public UAnimNotify
{
public:
	struct FGameplayCueTag                       GameplayCue;                                       // 0x38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               HitOffset;                                         // 0x40(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HitTestRadius;                                     // 0x58(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RootBoneName;                                      // 0x5C(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26FA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPhysicalMaterial*                     PreviewPhysicsMaterial;                            // 0x68(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UAnimNotify_EnvironmentHit* GetDefaultObj();

};

// 0x28 (0x190 - 0x168)
// Class LOTF2.AnimNotify_FootstepEvent
class UAnimNotify_FootstepEvent : public UAnimNotify_AkAnathemaEvent
{
public:
	class FString                                NotifyName;                                        // 0x168(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFootstepEventData*                    FootstepData;                                      // 0x178(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bFindSurfaceByVolume;                              // 0x180(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26FB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FindSurfaceByVolumeRadius;                         // 0x184(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TraceLength;                                       // 0x188(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26FC[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAnimNotify_FootstepEvent* GetDefaultObj();

};

// 0x8 (0xA0 - 0x98)
// Class LOTF2.AnimNotify_GameplayEffect
class UAnimNotify_GameplayEffect : public UAnimNotify_BaseConditionalTag
{
public:
	TSubclassOf<class UGameplayEffect>           GameplayEffect;                                    // 0x98(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UAnimNotify_GameplayEffect* GetDefaultObj();

};

// 0x8 (0xA8 - 0xA0)
// Class LOTF2.AnimNotify_GameplayEffectToBBActor
class UAnimNotify_GameplayEffectToBBActor : public UAnimNotify_GameplayEffect
{
public:
	class FName                                  TargetActorBlackboardKey;                          // 0xA0(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UAnimNotify_GameplayEffectToBBActor* GetDefaultObj();

};

// 0xB0 (0x148 - 0x98)
// Class LOTF2.AnimNotify_GameplayEvent
class UAnimNotify_GameplayEvent : public UAnimNotify_BaseConditionalTag
{
public:
	struct FGameplayEventData                    NotifyEvent;                                       // 0x98(0xB0)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UAnimNotify_GameplayEvent* GetDefaultObj();

};

// 0x50 (0xC8 - 0x78)
// Class LOTF2.AnimNotify_HexGameplayCue
class UAnimNotify_HexGameplayCue : public UAnimNotify_GameplayCue
{
public:
	struct FGameplayTagQuery                     OwnedTagsCondition;                                // 0x78(0x48)(Edit, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	bool                                         bIgnoreConditionInEditorPreview;                   // 0xC0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26FE[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAnimNotify_HexGameplayCue* GetDefaultObj();

	bool FulfillsCondition(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);
};

// 0x50 (0xB8 - 0x68)
// Class LOTF2.AnimNotify_HexGameplayCueState
class UAnimNotify_HexGameplayCueState : public UAnimNotify_GameplayCueState
{
public:
	struct FGameplayTagQuery                     OwnedTagsCondition;                                // 0x68(0x48)(Edit, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	bool                                         bIgnoreConditionInEditorPreview;                   // 0xB0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2700[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAnimNotify_HexGameplayCueState* GetDefaultObj();

	bool FulfillsCondition(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);
};

// 0x8 (0xA8 - 0xA0)
// Class LOTF2.AnimNotify_ScaleRootMotion
class UAnimNotify_ScaleRootMotion : public UAnimNotifyState_BaseConditionalTag
{
public:
	float                                        RootMotionScale;                                   // 0xA0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2701[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAnimNotify_ScaleRootMotion* GetDefaultObj();

};

// 0x18 (0xB8 - 0xA0)
// Class LOTF2.AnimNotify_ScaleRootMotionDynamic
class UAnimNotify_ScaleRootMotionDynamic : public UAnimNotifyState_BaseConditionalTag
{
public:
	struct FFloatRange                           RootMotionScaleLimits;                             // 0xA0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        OffsetDistanceToTarget;                            // 0xB0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShowDebug;                                        // 0xB4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2702[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAnimNotify_ScaleRootMotionDynamic* GetDefaultObj();

};

// 0x120 (0x1B8 - 0x98)
// Class LOTF2.AnimNotify_SubAutonomousAbilityBase
class UAnimNotify_SubAutonomousAbilityBase : public UAnimNotify_BaseConditionalTag
{
public:
	struct FSpawnDefinition                      SpawnDefinition;                                   // 0x98(0x120)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UAnimNotify_SubAutonomousAbilityBase* GetDefaultObj();

};

// 0x8 (0x1C0 - 0x1B8)
// Class LOTF2.AnimNotify_SubAutonomousAbility
class UAnimNotify_SubAutonomousAbility : public UAnimNotify_SubAutonomousAbilityBase
{
public:
	TSubclassOf<class USubAutonomousAbilityData> SubAutonomousAbilityData;                          // 0x1B8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UAnimNotify_SubAutonomousAbility* GetDefaultObj();

};

// 0x8 (0x1C0 - 0x1B8)
// Class LOTF2.AnimNotify_SAA_Projectile
class UAnimNotify_SAA_Projectile : public UAnimNotify_SubAutonomousAbilityBase
{
public:
	TSubclassOf<class USAA_ProjectileData>       SubAutonomousAbilityData;                          // 0x1B8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UAnimNotify_SAA_Projectile* GetDefaultObj();

};

// 0x8 (0x1C0 - 0x1B8)
// Class LOTF2.AnimNotify_SAA_AreaOfEffect
class UAnimNotify_SAA_AreaOfEffect : public UAnimNotify_SubAutonomousAbilityBase
{
public:
	TSubclassOf<class USAA_AreaOfEffectData>     SubAutonomousAbilityData;                          // 0x1B8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UAnimNotify_SAA_AreaOfEffect* GetDefaultObj();

};

// 0x0 (0x38 - 0x38)
// Class LOTF2.AnimNotify_SyncAnimAttach
class UAnimNotify_SyncAnimAttach : public UAnimNotify
{
public:

	static class UClass* StaticClass();
	static class UAnimNotify_SyncAnimAttach* GetDefaultObj();

};

// 0x10 (0x48 - 0x38)
// Class LOTF2.AnimNotify_WeaponHitFX
class UAnimNotify_WeaponHitFX : public UAnimNotify
{
public:
	enum class EFEquipmentSlot                   EquipmentSlot;                                     // 0x38(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EAnathemaHitFXType                WeaponHitFXType;                                   // 0x39(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         EnableVFX;                                         // 0x3A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         EnableSound;                                       // 0x3B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         EnableEnvironmentVFX;                              // 0x3C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         EnableEnvironmentSound;                            // 0x3D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2703[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        EnvironmentHitRadiusSphereTrace;                   // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2704[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAnimNotify_WeaponHitFX* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class LOTF2.AnimTagFunctionLibrary
class UAnimTagFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UAnimTagFunctionLibrary* GetDefaultObj();

	bool ChooseAnimSequence(class FName SourceEntryName, class UDataTable* AnimEntries, const struct FGameplayTag& DestTagId, struct FGameplayTagContainer& CurrentComboWindowTags, struct FGameplayTagContainer& AdditionalIdealTags, struct FGameplayTag& OverrideNextAttackType, class FName* EntryName, struct FTaggedAnimRow* Entry, int32* AnimIndex, struct FTaggedAnimRowAnim* Anim);
};

// 0x8 (0x30 - 0x28)
// Class LOTF2.CustomOverrideJointTransformData
class UCustomOverrideJointTransformData : public UObject
{
public:
	uint8                                        Pad_2707[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCustomOverrideJointTransformData* GetDefaultObj();

};

// 0x70 (0x110 - 0xA0)
// Class LOTF2.ANS_ApplyJointRelativeTransform
class UANS_ApplyJointRelativeTransform : public UAnimNotifyState_BaseConditionalTag
{
public:
	struct FTransform                            Transform;                                         // 0xA0(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EPropJoint                        Joint;                                             // 0x100(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2708[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        BlendInTime;                                       // 0x104(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BlendOutTime;                                      // 0x108(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2709[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UANS_ApplyJointRelativeTransform* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class LOTF2.ANS_BufferWindow
class UANS_BufferWindow : public UAnimNotifyState
{
public:

	static class UClass* StaticClass();
	static class UANS_BufferWindow* GetDefaultObj();

};

// 0x8 (0x38 - 0x30)
// Class LOTF2.ANS_ChangeMovementModeFlying
class UANS_ChangeMovementModeFlying : public UAnimNotifyState
{
public:
	enum class EMovementMode                     MovementModeOnExit;                                // 0x30(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_270A[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UANS_ChangeMovementModeFlying* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class LOTF2.CustomHolsterData
class UCustomHolsterData : public UObject
{
public:
	uint8                                        Pad_270B[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCustomHolsterData* GetDefaultObj();

};

// 0x8 (0xA8 - 0xA0)
// Class LOTF2.ANS_CustomAnimHolster
class UANS_CustomAnimHolster : public UAnimNotifyState_BaseConditionalTag
{
public:
	bool                                         bHolstered;                                        // 0xA0(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EEquipHand                        bHand;                                             // 0xA1(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_270C[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UANS_CustomAnimHolster* GetDefaultObj();

};

// 0x68 (0x98 - 0x30)
// Class LOTF2.ANS_DisableHitBoxesCollisions
class UANS_DisableHitBoxesCollisions : public UAnimNotifyState
{
public:
	TArray<class FName>                          BoneNames;                                         // 0x30(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPrivate)
	enum class ECollisionChannel                 Channel;                                           // 0x40(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_270D[0x57];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UANS_DisableHitBoxesCollisions* GetDefaultObj();

};

// 0x8 (0xA8 - 0xA0)
// Class LOTF2.ANS_FullHolsterEquipment
class UANS_FullHolsterEquipment : public UAnimNotifyState_BaseConditionalTag
{
public:
	bool                                         bHolstered;                                        // 0xA0(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bPlayAnimationAtStart;                             // 0xA1(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bPlayAnimationAtEnd;                               // 0xA2(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_270E[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PlayRate;                                          // 0xA4(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UANS_FullHolsterEquipment* GetDefaultObj();

};

// 0x8 (0xA8 - 0xA0)
// Class LOTF2.ANS_Guarding
class UANS_Guarding : public UAnimNotifyState_BaseGameplayEffect
{
public:
	bool                                         bIgnoreBlockReaction;                              // 0xA0(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_270F[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UANS_Guarding* GetDefaultObj();

};

// 0x20 (0x50 - 0x30)
// Class LOTF2.ANS_HexAnimatePlayerPostProcessComponent
class UANS_HexAnimatePlayerPostProcessComponent : public UAnimNotifyState
{
public:
	struct FDataTableRowHandle                   OnStartAnimationDataHandle;                        // 0x30(0x10)(Edit, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPrivate)
	struct FDataTableRowHandle                   OnEndAnimationDataHandle;                          // 0x40(0x10)(Edit, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UANS_HexAnimatePlayerPostProcessComponent* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class LOTF2.ANS_HexLockFocusDirection
class UANS_HexLockFocusDirection : public UAnimNotifyState
{
public:

	static class UClass* StaticClass();
	static class UANS_HexLockFocusDirection* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class LOTF2.ANS_HexSetFocusDirectionToActorForward
class UANS_HexSetFocusDirectionToActorForward : public UAnimNotifyState
{
public:

	static class UClass* StaticClass();
	static class UANS_HexSetFocusDirectionToActorForward* GetDefaultObj();

};

// 0x10 (0xB0 - 0xA0)
// Class LOTF2.ANS_HexSetRotationRate
class UANS_HexSetRotationRate : public UAnimNotifyState_BaseConditionalTag
{
public:
	enum class EHexRotationRateMode              RotationMode;                                      // 0xA0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSnapToFocusDirectionAtEnd;                        // 0xA1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2712[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MinRotationRateAngleLimits;                        // 0xA4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxRotationRateAngleLimits;                        // 0xA8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2713[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UANS_HexSetRotationRate* GetDefaultObj();

	float GetRotationRate();
};

// 0x8 (0xA8 - 0xA0)
// Class LOTF2.ANS_HolsterEquipmentBase
class UANS_HolsterEquipmentBase : public UAnimNotifyState_BaseConditionalTag
{
public:
	bool                                         bPlayAnimationAtStart;                             // 0xA0(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bPlayAnimationAtEnd;                               // 0xA1(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2717[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PlayRate;                                          // 0xA4(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UANS_HolsterEquipmentBase* GetDefaultObj();

	bool GetShouldPlayAnimationAtStart(class USkeletalMeshComponent* MeshComp);
	bool GetShouldPlayAnimationAtEnd(class USkeletalMeshComponent* MeshComp);
};

// 0x8 (0xB0 - 0xA8)
// Class LOTF2.ANS_HolsterHandEquipment
class UANS_HolsterHandEquipment : public UANS_HolsterEquipmentBase
{
public:
	enum class EEquipHand                        EquipHand;                                         // 0xA8(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2718[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UANS_HolsterHandEquipment* GetDefaultObj();

};

// 0x28 (0x58 - 0x30)
// Class LOTF2.ANS_InterruptibleWindow
class UANS_InterruptibleWindow : public UAnimNotifyState
{
public:
	struct FGameplayTagContainer                 InterruptibleTags;                                 // 0x30(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	bool                                         bShouldTriggerInterruptEvent;                      // 0x50(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_271A[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UANS_InterruptibleWindow* GetDefaultObj();

};

// 0x0 (0xA0 - 0xA0)
// Class LOTF2.ANS_PlayerDisableWalkOffLedges
class UANS_PlayerDisableWalkOffLedges : public UAnimNotifyState_BaseConditionalTag
{
public:

	static class UClass* StaticClass();
	static class UANS_PlayerDisableWalkOffLedges* GetDefaultObj();

};

// 0x8 (0xB0 - 0xA8)
// Class LOTF2.ANS_SmartHolster
class UANS_SmartHolster : public UANS_HolsterEquipmentBase
{
public:
	enum class EHolsterGroup                     HolsterGroup;                                      // 0xA8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_271B[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UANS_SmartHolster* GetDefaultObj();

};

// 0x18 (0xC0 - 0xA8)
// Class LOTF2.ANS_TemporaryHolsterEquipment
class UANS_TemporaryHolsterEquipment : public UANS_HolsterEquipmentBase
{
public:
	bool                                         bUseHolsterableSlots;                              // 0xA8(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFEquipmentSlot                   EquipmentSlot;                                     // 0xA9(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EHolsterableSlot                  HolsterableSlot;                                   // 0xAA(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_271E[0x15];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UANS_TemporaryHolsterEquipment* GetDefaultObj();

};

// 0x0 (0xC0 - 0xC0)
// Class LOTF2.ANS_TemporaryUnHolsterEquipment
class UANS_TemporaryUnHolsterEquipment : public UANS_TemporaryHolsterEquipment
{
public:

	static class UClass* StaticClass();
	static class UANS_TemporaryUnHolsterEquipment* GetDefaultObj();

};

// 0x8 (0xB0 - 0xA8)
// Class LOTF2.ANS_UnholsterLanternCosmetic
class UANS_UnholsterLanternCosmetic : public UANS_HolsterEquipmentBase
{
public:
	bool                                         bApplyCameraLogicChange;                           // 0xA8(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2720[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UANS_UnholsterLanternCosmetic* GetDefaultObj();

};

// 0x0 (0x38 - 0x38)
// Class LOTF2.AN_HexSetFocusDirectionToActorForward
class UAN_HexSetFocusDirectionToActorForward : public UAnimNotify
{
public:

	static class UClass* StaticClass();
	static class UAN_HexSetFocusDirectionToActorForward* GetDefaultObj();

};

// 0x28 (0x108 - 0xE0)
// Class LOTF2.ApplyEquipmentPostSpawn
class UApplyEquipmentPostSpawn : public UHexApplySpawnConfigComponent
{
public:
	TArray<TSoftClassPtr<class UEquipementData>> Equipment;                                         // 0xE0(0x10)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2721[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ALOTF2Character*                       TargetCharacter;                                   // 0x100(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UApplyEquipmentPostSpawn* GetDefaultObj();

	void OnEquipmentDataLoaded();
};

// 0x0 (0x4D8 - 0x4D8)
// Class LOTF2.HexGameDialog
class UHexGameDialog : public UHexActivatableWidget
{
public:

	static class UClass* StaticClass();
	static class UHexGameDialog* GetDefaultObj();

};

// 0x48 (0x520 - 0x4D8)
// Class LOTF2.HexConfirmationDialog
class UHexConfirmationDialog : public UHexGameDialog
{
public:
	TArray<class UHexConfirmationDialogButton*>  ActionButtons;                                     // 0x4D8(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                      Text_Title;                                        // 0x4E8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonRichTextBlock*                  RichText_Description;                              // 0x4F0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2724[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UHexDialogDescriptor*                  Descriptor;                                        // 0x508(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UHexConfirmationDialogButton> ActionButtonClass;                                 // 0x510(0x8)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                          Panel_Buttons;                                     // 0x518(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UHexConfirmationDialog* GetDefaultObj();

	void OnConfirmationAction(class FName ActionId);
};

// 0x10 (0x530 - 0x520)
// Class LOTF2.ApplyRunesConfirmationDialog
class UApplyRunesConfirmationDialog : public UHexConfirmationDialog
{
public:
	class UPanelWidget*                          Panel_Runes;                                       // 0x520(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class URuneEquipItemWidget>      RuneEquipItemClass;                                // 0x528(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UApplyRunesConfirmationDialog* GetDefaultObj();

	void SetRunes(bool bIsLantern, class UEquipableInventoryItem* AffectedItem, const TArray<class UHexRuneInventoryItem*>& OldRunes, const TArray<class UHexRuneInventoryItem*>& NewRunes);
};

// 0x238 (0x4F0 - 0x2B8)
// Class LOTF2.InGameMenuPanel
class UInGameMenuPanel : public ULOTF2UserWidget
{
public:
	FMulticastInlineDelegateProperty_            OnSwitchPercentChanges;                            // 0x2B8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRequestRefreshFocusEvent;                        // 0x2C8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2727[0x78];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnQuitGameRequested;                               // 0x350(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2728[0x60];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UInGameBottomBarPanel*                 BottomBarPanel;                                    // 0x3C0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          CameraTransitionTag;                               // 0x3C8(0x8)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          PanelID;                                           // 0x3D0(0x8)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        NavigationOptions;                                 // 0x3D8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bOverrideSwitchAction;                             // 0x3D9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2729[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  SwitchActionName;                                  // 0x3E0(0x18)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	bool                                         bOverrideUnequipAction;                            // 0x3F8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_272A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  UnequipActionName;                                 // 0x400(0x18)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	bool                                         bOverrideSelectAction;                             // 0x418(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_272B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  SelectActionName;                                  // 0x420(0x18)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	bool                                         bOverrideOkAction;                                 // 0x438(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_272C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  OkActionName;                                      // 0x440(0x18)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	bool                                         bAddCustomBottomBarActions;                        // 0x458(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_272D[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<struct FGameplayTag, class FText>       CustomBottomBarActions;                            // 0x460(0x50)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	bool                                         bOverrideTopBar;                                   // 0x4B0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bOverrideMenuSections;                             // 0x4B1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_272E[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGameplayTag>                  OverridenMenuSections;                             // 0x4B8(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bCycleNavigation;                                  // 0x4C8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShowTopBar;                                       // 0x4C9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShowTopBarButtons;                                // 0x4CA(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShowTopBarNavigation;                             // 0x4CB(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShowTopBarTitle;                                  // 0x4CC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_272F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  TopBarTitle;                                       // 0x4D0(0x18)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	bool                                         bCanSwitchCategories;                              // 0x4E8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2730[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UInGameMenuPanel* GetDefaultObj();

	void SetNavigationEnabled(bool bEnabled);
	void RequestSwitchToNextPanel();
	void RequestPanelChange(const struct FGameplayTag& NewPanelSection);
	void RequestBack(bool byConfirm);
	class UWidget* GetDesiredFocusTarget();
	void BP_UnregisterInput();
	void BP_RegisterInput();
	void BP_PanelDeactivated();
	void BP_PanelActivated();
};

// 0x108 (0x5F8 - 0x4F0)
// Class LOTF2.ApplyTintPanel
class UApplyTintPanel : public UInGameMenuPanel
{
public:
	TArray<struct FInventoryCategoryElement>     InventoryCategories;                               // 0x4F0(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTag                          Tag_MoveToPrevArmorSection;                        // 0x500(0x8)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          Tag_MoveToNextArmorSection;                        // 0x508(0x8)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          Tag_KeyboardPreviewKey;                            // 0x510(0x8)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                  PreviewTintText;                                   // 0x518(0x18)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class FText                                  ApplyTintText;                                     // 0x530(0x18)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class UEquipmentCategoryRow*                 Row_Head;                                          // 0x548(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEquipmentCategoryRow*                 Row_Body;                                          // 0x550(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEquipmentCategoryRow*                 Row_Arms;                                          // 0x558(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEquipmentCategoryRow*                 Row_Legs;                                          // 0x560(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTintGrid*                             Tints_Grid;                                        // 0x568(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UInventoryGridItem*>            ArmorItems;                                        // 0x570(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class UTintItemData*                         FocusedTint;                                       // 0x580(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2731[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class EFEquipmentSlot, class UTintItemData*> AppliedTints;                                      // 0x590(0x50)(Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2732[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UApplyTintPanel* GetDefaultObj();

	void OnItemInteracted(class UObject* InteractedItem);
	void BP_SetTintName(class UTintItemData* TintItemData);
	void BP_RefreshTints();
};

// 0x18 (0x6A0 - 0x688)
// Class LOTF2.ArmorPieceData
class UArmorPieceData : public UEquipementData
{
public:
	struct FDataTableRowHandle                   StatsRow;                                          // 0x688(0x10)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	enum class EArmorType                        Type;                                              // 0x698(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2733[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UArmorPieceData* GetDefaultObj();

};

// 0x28 (0x50 - 0x28)
// Class LOTF2.ArtBookAreasDataWrapper
class UArtBookAreasDataWrapper : public UObject
{
public:
	class FText                                  AreaName;                                          // 0x28(0x18)(BlueprintVisible, NativeAccessSpecifierPublic)
	class FName                                  ArtBookAreaRowName;                                // 0x40(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsUnlocked;                                       // 0x48(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasNewUnlocks;                                    // 0x49(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2734[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UArtBookAreasDataWrapper* GetDefaultObj();

};

// 0x50 (0x540 - 0x4F0)
// Class LOTF2.ArtBookAreasListWidget
class UArtBookAreasListWidget : public UInGameMenuPanel
{
public:
	class UDataTable*                            AreaDataTable;                                     // 0x4F0(0x8)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UListView*                             AreasListView;                                     // 0x4F8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          ArtBookPanelTag;                                   // 0x500(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                         HoverSound;                                        // 0x508(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                         ClickSound;                                        // 0x510(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_273B[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ULegendaryEditionManager*              LegendaryEditionManager;                           // 0x520(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_273C[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                LoadOptions;                                       // 0x530(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UArtBookAreasListWidget* GetDefaultObj();

	void QuitArtbook();
	void OnAreaHovered(class UObject* Area, bool bIsHovered);
	void OnAreaClicked(class UObject* Area);
	void MarkAreaAsViewed(struct FGameplayTag& Tag, class UDataTable* ArtBookTable);
	bool HasNewUnlocks(struct FGameplayTag& Tag, class UDataTable* ArtBookTable);
	void ActionSelectArea();
};

// 0xC0 (0x5B0 - 0x4F0)
// Class LOTF2.ArtBookWidget
class UArtBookWidget : public UInGameMenuPanel
{
public:
	class UDataTable*                            ArtBookDataTable;                                  // 0x4F0(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                ArtBookImage;                                      // 0x4F8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            ArtBookImageName;                                  // 0x500(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            ArtBookImageDescription;                           // 0x508(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOverlay*                              ArtBookOverlay;                                    // 0x510(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UTexture2D>             ArtBookInitialImage;                               // 0x518(0x30)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      WidgetAnimationFadeOut;                            // 0x548(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      WidgetAnimationFadeIn;                             // 0x550(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          ArtBookAreasPanelTag;                              // 0x558(0x8)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2742[0x48];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ULegendaryEditionManager*              LegendaryEditionManager;                           // 0x5A8(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UArtBookWidget* GetDefaultObj();

	void ResetArtData();
	void OnNewImageLoaded();
	void OnFadeOutFinished();
	void OnFadeInFinished();
	TArray<struct FArtBookDataAsset> GetUnlockedArt();
	void ForceFullscreenOff();
	void FadeChangeSlide();
	void ChangeSlide(int32 NewIndex);
	void ActionSlidesRight();
	void ActionSlidesLeft();
	void ActionFullscreen();
};

// 0x78 (0xA8 - 0x30)
// Class LOTF2.AsyncAction_PushContentToLayerForPlayer
class UAsyncAction_PushContentToLayerForPlayer : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_            BeforePush;                                        // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            AfterPush;                                         // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2746[0x58];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAsyncAction_PushContentToLayerForPlayer* GetDefaultObj();

	bool IsActive();
	void Cancel();
	class UAsyncAction_PushContentToLayerForPlayer* AsyncPushContentToLayerForPlayer(class APlayerController* OwningPlayer, TSoftClassPtr<class UCommonActivatableWidget> WidgetClass, const struct FGameplayTag& LayerName, bool bSuspendInputUntilComplete);
};

// 0x98 (0xC8 - 0x30)
// Class LOTF2.AsyncAction_ShowConfirmationDialog
class UAsyncAction_ShowConfirmationDialog : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_            OnResult;                                          // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2747[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnResultNamed;                                     // 0x58(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2748[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnShown;                                           // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2749[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UObject*                               WorldContextObject;                                // 0xA8(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ULocalPlayer*                          TargetLocalPlayer;                                 // 0xB0(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHexDialogDescriptor*                  Descriptor;                                        // 0xB8(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_274A[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAsyncAction_ShowConfirmationDialog* GetDefaultObj();

	class UAsyncAction_ShowConfirmationDialog* ShowConfirmationYesNo(class UObject* InWorldContextObject, class FText Title, class FText Message);
	class UAsyncAction_ShowConfirmationDialog* ShowConfirmationOkCancelCustomDialog(class UObject* InWorldContextObject, class FText Title, class FText Message, class FText Confirm, class FText Cancel, TSubclassOf<class UHexGameDialog> CustomDialog);
	class UAsyncAction_ShowConfirmationDialog* ShowConfirmationOkCancel(class UObject* InWorldContextObject, class FText Title, class FText Message);
	class UAsyncAction_ShowConfirmationDialog* ShowConfirmationOk(class UObject* InWorldContextObject, class FText Title, class FText Message);
	class UAsyncAction_ShowConfirmationDialog* ShowConfirmationCustom(class UObject* InWorldContextObject, class UHexDialogDescriptor* DialogDescriptor);
};

// 0x0 (0x28 - 0x28)
// Class LOTF2.AsyncBackAction
class IAsyncBackAction : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IAsyncBackAction* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class LOTF2.AsyncDeactivation
class IAsyncDeactivation : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IAsyncDeactivation* GetDefaultObj();

};

// 0x8 (0xB8 - 0xB0)
// Class LOTF2.AttachedActorComponent
class UAttachedActorComponent : public UActorComponent
{
public:
	float                                        ShieldOffsetWhenHolsteredAtBack;                   // 0xB0(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_274B[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAttachedActorComponent* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class LOTF2.InputActionPayloadFactory
class UInputActionPayloadFactory : public UObject
{
public:

	static class UClass* StaticClass();
	static class UInputActionPayloadFactory* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class LOTF2.AttackActionPayloadFactory
class UAttackActionPayloadFactory : public UInputActionPayloadFactory
{
public:
	class UInputAction*                          InputMovementAction;                               // 0x28(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UAttackActionPayloadFactory* GetDefaultObj();

};

// 0x278 (0x2A0 - 0x28)
// Class LOTF2.HexDamageDefEffectData
class UHexDamageDefEffectData : public UObject
{
public:
	struct FAttackDamageDefinition               DamageDefinition;                                  // 0x28(0x270)(NativeAccessSpecifierPrivate)
	struct FGameplayTag                          AttackDirectionOverride;                           // 0x298(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UHexDamageDefEffectData* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class LOTF2.HexDamageDefHelper
class UHexDamageDefHelper : public UObject
{
public:

	static class UClass* StaticClass();
	static class UHexDamageDefHelper* GetDefaultObj();

	void ApplyDamageDefinitionFromNameToActor(class AActor* InstigatorActor, class AActor* TargetActor, class FName DamageDefName, class AActor* PropToUse, class UObject* ExternalObject);
};

// 0xF0 (0x120 - 0x30)
// Class LOTF2.AttributesAttributeSet
class UAttributesAttributeSet : public UAttributeSet
{
public:
	struct FGameplayAttributeData                Strength;                                          // 0x30(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                Agility;                                           // 0x40(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                Faith;                                             // 0x50(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                Endurance;                                         // 0x60(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                Vitality;                                          // 0x70(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                Chaos;                                             // 0x80(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                InitialStrength;                                   // 0x90(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                InitialAgility;                                    // 0xA0(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                InitialFaith;                                      // 0xB0(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                InitialEndurance;                                  // 0xC0(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                InitialVitality;                                   // 0xD0(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                InitialChaos;                                      // 0xE0(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                Physique;                                          // 0xF0(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                Height;                                            // 0x100(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                ShouldUseAttributes;                               // 0x110(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UAttributesAttributeSet* GetDefaultObj();

	void OnRep_Vitality(struct FGameplayAttributeData& OldVitality);
	void OnRep_Strength(struct FGameplayAttributeData& OldStrength);
	void OnRep_ShouldUseAttributes(struct FGameplayAttributeData& OldShouldUseAttributes);
	void OnRep_Faith(struct FGameplayAttributeData& OldFaith);
	void OnRep_Endurance(struct FGameplayAttributeData& OldEndurance);
	void OnRep_Chaos(struct FGameplayAttributeData& OldChaos);
	void OnRep_Agility(struct FGameplayAttributeData& OldAgility);
};

// 0x68 (0x118 - 0xB0)
// Class LOTF2.AttributeTrackerComponent
class UAttributeTrackerComponent : public UActorComponent
{
public:
	uint8                                        Pad_274C[0x68];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAttributeTrackerComponent* GetDefaultObj();

	void OnAnyEquipmentChanged();
};

// 0xA00 (0xAB0 - 0xB0)
// Class LOTF2.AutonomousAbilitiesComponent
class UAutonomousAbilitiesComponent : public UActorComponent
{
public:
	struct FDataTableRowHandle                   AutonomousAbilityDefinitionHandle;                 // 0xB0(0x10)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	class USubAutonomousAbilityData*             SubAutonomousAbilityData;                          // 0xC0(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2751[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAutonomousAbilityDefinition          AutonomousAbilityDefinitionData;                   // 0xE8(0x9C0)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2752[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAutonomousAbilitiesComponent* GetDefaultObj();

	void OnRep_SubAutonomousAbilityData();
	void OnLinkedAutonomousAbilityDestroyed(class AActor* Actor, enum class EEndPlayReason EndPlayReason);
	void OnAttachedParentDestroyed(class AActor* DestroyedActor, enum class EEndPlayReason EndPlayReason);
	void OnAreaTimedOut();
	void OnAreaOverlapValidActor(class AActor* TargetActor, struct FHitResult& HitResult, bool bBlockedAttack);
	void OnAreaOverlapEffectsAppliedActor(class AActor* TargetActor, struct FHitResult& HitResult, bool bBlockedAttack);
	void OnAreaHitCollison(class AActor* OtherActor, struct FHitResult& Hit);
	void OnAreaEndOverlapValidActor(class AActor* TargetActor);
	TArray<class AActor*> BP_SpawnSubAutonomousAbility(class USubAutonomousAbilityData* SubAutonomousAbilityDataToSpawn, struct FSpawnDefinition& SpawnDefinition, class AActor* SpawnerActor, class APawn* Instigator);
	class AActor* BP_SpawnAutonomousAbilityWithParamsOverride(class UObject* WorldContextObject, struct FDataTableRowHandle& AutonomousAbilityDefinition, class AActor* Owner, TMap<struct FGameplayTag, float> ExtraParams);
	class AActor* BP_SpawnAutonomousAbility(class UObject* WorldContextObject, struct FDataTableRowHandle& AutonomousAbilityDefinition, class AActor* Owner);
};

// 0x0 (0x28 - 0x28)
// Class LOTF2.AutonomousAbilityDefinitionHelper
class UAutonomousAbilityDefinitionHelper : public UObject
{
public:

	static class UClass* StaticClass();
	static class UAutonomousAbilityDefinitionHelper* GetDefaultObj();

	void ApplyCost(class AActor* Actor, class UEquipableInventoryWeapon* EquipableWeapon, struct FAutonomousAbilityDefinition& AutonomousAbilityDefinition, TMap<struct FGameplayTag, float>& CostToOverride);
};

// 0x0 (0x38 - 0x38)
// Class LOTF2.AutonomousAbilitiesSettings
class UAutonomousAbilitiesSettings : public UHexDeveloperSettings
{
public:

	static class UClass* StaticClass();
	static class UAutonomousAbilitiesSettings* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class LOTF2.AutonomousAbilityActorInterface
class IAutonomousAbilityActorInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IAutonomousAbilityActorInterface* GetDefaultObj();

	void InitializeAutonomousAbilityActor(struct FAutonomousAbilityDefinition& AutonomousAbilityDefinition);
};

// 0x20 (0x2F0 - 0x2D0)
// Class LOTF2.HexGameplayEffectsArea
class AHexGameplayEffectsArea : public AAbilitySystemActor
{
public:
	FMulticastInlineDelegateProperty_            OnAreaTimedOutDelegate;                            // 0x2D0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UGameplayEffectsApplierComponent*      GameplayEffectsComponent;                          // 0x2E0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          AreaGameplayCue;                                   // 0x2E8(0x8)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AHexGameplayEffectsArea* GetDefaultObj();

};

// 0x8 (0x2F8 - 0x2F0)
// Class LOTF2.HexAutonomousEffectsArea
class AHexAutonomousEffectsArea : public AHexGameplayEffectsArea
{
public:
	class UAutonomousAbilitiesComponent*         AutonomousAbilitiesComponent;                      // 0x2F0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AHexAutonomousEffectsArea* GetDefaultObj();

};

// 0x30 (0xE0 - 0xB0)
// Class LOTF2.BaseAIAnimatedBody
class UBaseAIAnimatedBody : public UActorComponent
{
public:
	uint8                                        InitialNetReceive : 1;                             // Mask: 0x1, PropSize: 0x10xB0(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        IsPlayingMontage : 1;                              // Mask: 0x2, PropSize: 0x10xB0(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        IsStrafing : 1;                                    // Mask: 0x4, PropSize: 0x10xB0(0x1)(BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        IsBlocking : 1;                                    // Mask: 0x8, PropSize: 0x10xB0(0x1)(BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        IsParried : 1;                                     // Mask: 0x10, PropSize: 0x10xB0(0x1)(BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        IsExhausted : 1;                                   // Mask: 0x20, PropSize: 0x10xB0(0x1)(BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        IsStunned : 1;                                     // Mask: 0x40, PropSize: 0x10xB0(0x1)(BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_219 : 1;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_2753[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        BlockingFlags;                                     // 0xB4(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ParriedFlags;                                      // 0xB8(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MoveDistance;                                      // 0xBC(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MoveAngle;                                         // 0xC0(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BodyAngle;                                         // 0xC4(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EAIBodyStance                     BodyStance;                                        // 0xC8(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EAIMoveStyle                      MoveStyle;                                         // 0xC9(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2754[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAIAnimatedFlinch                     Flinch;                                            // 0xCC(0xC)(BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bIsKnockDown;                                      // 0xD8(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2755[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBaseAIAnimatedBody* GetDefaultObj();

	class ABaseAICharacter* GetOwningCharacter();
};

// 0x508 (0xB30 - 0x628)
// Class LOTF2.LOTF2Character
class ALOTF2Character : public ACharacter
{
public:
	uint8                                        Pad_275F[0x48];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnStartedBlocking;                                 // 0x670(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnStoppedBlocking;                                 // 0x680(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnEnterParryableWindow;                            // 0x690(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnExitParryableWindow;                             // 0x6A0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnControllerIsSet;                                 // 0x6B0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2760[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnCharacterHasBegunPlay;                           // 0x6D8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCharacterWillEndPlay;                            // 0x6E8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2761[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bCanUseCharacterMovementComponent;                 // 0x710(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2762[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRotator                              DesiredSmoothRotation;                             // 0x718(0x18)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AActor>                 AssignedSpawnPoint;                                // 0x730(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCharacterLodComponent*                CharacterLodComponent;                             // 0x738(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2763[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UHealthComponent*                      HealthComponent;                                   // 0x748(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDualRealmStateComponent*              DualRealmStateComponent;                           // 0x750(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEnergyComponent*                      EnergyComponent;                                   // 0x758(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPoiseComponent*                       PoiseComponent;                                    // 0x760(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHexFocusDirectionComponent*           FocusDirectionComponent;                           // 0x768(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCharacterTranslationComponent*        CharacterTranslationComponent;                     // 0x770(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCharacterConfigComponent*             CharacterConfigComponent;                          // 0x778(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStanceComponent*                      StanceComponent;                                   // 0x780(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEquipmentManagerComponent*            EquipmentManagerComponent;                         // 0x788(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHexAIBodyDriverComponent*             BodyDriverComponent;                               // 0x790(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsInitialEquipmentApplied;                        // 0x798(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2764[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UValidLocationTrackingComponent*       ValidLocationTrackingComponent;                    // 0x7A0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomizableSkeletalComponent*        SkeletalComponent;                                 // 0x7A8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomizableObjectInstance*           CustomizableObjectInstance;                        // 0x7B0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomizableObject*                   CustomizableObject;                                // 0x7B8(0x8)(Edit, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMutableWrapperComponent*              MutableWrapper;                                    // 0x7C0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBodyShapeData*                        BodyShapeData;                                     // 0x7C8(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<uint8>                                CustomizationSettingsData;                         // 0x7D0(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UAirStateComponent*                    AirStateComponent;                                 // 0x7E0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPropManagerComponent*                 PropManagerComponent;                              // 0x7E8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFeedbackComponent*                    FeedbackComponent;                                 // 0x7F0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCharacterAudioComponent*              AudioComponent;                                    // 0x7F8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDoDamageComponent*                    DoDamageComponent;                                 // 0x800(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                 DefaultInterruptGameplayTags;                      // 0x808(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class UAnathemaAbilitySystemComponent*       AbilitySystemComponent;                            // 0x828(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHexCharacterSoulFlayComponent*        SoulFlayComponent;                                 // 0x830(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHexSyncedAnimComponent*               SyncAnimComponent;                                 // 0x838(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMotionWarpingComponent*               MotionWarpingComponent;                            // 0x840(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHexAIPerceptionStimuliSourceComponent* AIStimuliSourceComponent;                          // 0x848(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAttributesAttributeSet*               AttributesAttributeSet;                            // 0x850(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBasicAttributeSet*                    BasicAttributeSet;                                 // 0x858(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMovementAttributeSet*                 MovementAttributeSet;                              // 0x860(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCombatAttributeSet*                   CombatAttributeSet;                                // 0x868(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPoiseAttributeSet*                    PoiseAttributeSet;                                 // 0x870(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMagicAttributeSet*                    MagicAttributeSet;                                 // 0x878(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAmmoAttributeSet*                     AmmoAttributeSet;                                  // 0x880(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEquipmentAttributeSet*                EquipmentAttributeSet;                             // 0x888(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoulFlayAttributeSet*                 SoulFlayAttributeSet;                              // 0x890(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWeaponAttributeSet*                   ScalingAttributeSet;                               // 0x898(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDamageAttributeSet*                   DamageAttributeSet;                                // 0x8A0(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDefenseAttributeSet*                  DefenseAttributeSet;                               // 0x8A8(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGuardAttributeSet*                    GuardAttributeSet;                                 // 0x8B0(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UResistanceAttributeSet*               ResistanceAttributeSet;                            // 0x8B8(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGuardResistanceAttributeSet*          GuardResistanceAttributeSet;                       // 0x8C0(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStatusEffectsAttributeSet*            StatusEffectsAttributeSet;                         // 0x8C8(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStatusEffectsDamageAttributeSet*      StatusEffectsDamageAttributeSet;                   // 0x8D0(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCombatReactionsAttributeSet*          CombatReactionsAttributeSet;                       // 0x8D8(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDamageDealtMultipliersAttributeSet*   DamageDealtMultipliersAttributeSet;                // 0x8E0(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDamageReceivedMultipliersAttributeSet* DamageReceivedMultipliersAttributeSet;             // 0x8E8(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEquipmentSlotMultipliersAttributeSet* EquipmentSlotMultipliersAttributeSet;              // 0x8F0(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUmbralAggroAttributeSet*              UmbralAggroAttributeSet;                           // 0x8F8(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TSoftClassPtr<class UGameplayAbility>> InitialAbilities;                                  // 0x900(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<TSoftClassPtr<class UGameplayAbility>> PassiveAbilities;                                  // 0x910(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<TSoftClassPtr<class UGameplayEffect>> InitialGameplayEffects;                            // 0x920(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	bool                                         bIsAiming;                                         // 0x930(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2765[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAimOffset                            AimOffset;                                         // 0x934(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, EditConst, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class FName                                  BoneToAimFrom;                                     // 0x93C(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FAimOffsetLockOnTargetParams          AimOffsetLockOnTargetParams;                       // 0x944(0x14)(Edit, BlueprintVisible, Net, EditConst, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        AimOffsetInterpSpeed;                              // 0x958(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LadderInitialCharacterHeight;                      // 0x95C(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bLadderSprinting;                                  // 0x960(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanUseRagdoll;                                    // 0x961(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2766[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class URagdollComponent>         RagdollComponentClass;                             // 0x968(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class FName>                          WeaponBonesToDetach;                               // 0x970(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                         bUsePhysicsBlendWeight;                            // 0x980(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCollisionsWithOtherPawnsAllowed;                  // 0x981(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2767[0x56];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TimeToWaitBeforeTryingToDisableCharacter;          // 0x9D8(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2768[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class URagdollComponent*                     RagdollComponent;                                  // 0x9E0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2769[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        MoveIgnoreActors;                                  // 0xA00(0x10)(Net, ZeroConstructor, RepNotify, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	class USkinnedDecalSampler*                  SkinnedDecalSampler;                               // 0xA10(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSpawnDecalsWhenReceivingDamage;                   // 0xA18(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_276A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SkinnedDecalDuration;                              // 0xA1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SkinnedDecalMinimumSize;                           // 0xA20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SkinnedDecalMaximumSize;                           // 0xA24(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAnathemaComponent*                  AkComponentRHand;                                  // 0xA28(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAnathemaComponent*                  AkComponentLHand;                                  // 0xA30(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVigorComponent*                       VigorComponent;                                    // 0xA38(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMojoComponent*                        MojoComponent;                                     // 0xA40(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_276B[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        BlockCooldownTime;                                 // 0xA54(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_276C[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        BlockingFlags;                                     // 0xA60(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        WantedBlockingFlags;                               // 0xA64(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bWantsToBlock;                                     // 0xA68(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bAutoSetDeflectorsOnBlock;                         // 0xA69(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsBlocking;                                       // 0xA6A(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bBlockingAllowed;                                  // 0xA6B(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        BlockingVulnerableWindowOverride;                  // 0xA6C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        WantedBlockingVulnerableWindowOverride;            // 0xA70(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  HeadSocketName;                                    // 0xA74(0x8)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bResetAimOffsetWhenOutsideThreshold;               // 0xA7C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_276D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ThresholdToResetAimOffset;                         // 0xA80(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bClampAimOffsetYawToThreshold;                     // 0xA84(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_276E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ThresholdToClampAimOffsetYaw;                      // 0xA88(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_276F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAkAnathemaComponent*                  AkComponentHead;                                   // 0xA90(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FLOTF2CharacterDamageWindowData> DamageWindows;                                     // 0xA98(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2770[0x88];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ALOTF2Character* GetDefaultObj();

	void UnsetLadderInitialCharacterHeight();
	void TakePoiseDamage(struct FDamageComponentDamageEvent& DamageComponentDamageEvent, class AController* EventInstigator, class AActor* DamageCauser);
	void StopBlocking();
	void StartBlocking(float InBlockingVulnerableWindowOverride, int32 InBlockingFlags);
	void SetRotationRateOverrideValue(float Value, class FName ID);
	void SetLadderSprinting(bool bLadderSprinting);
	void SetLadderInitialCharacterHeight(float InitialLadderHeight);
	void SetJointRelativeTransform(class FName ID, enum class EPropJoint Joint, struct FTransform& RelativeTransform, float BlendTime);
	void SetDualRealmStateComponent(class UDualRealmStateComponent* RealmState);
	void SetCollisionsWithOtherPawnsAllowed(bool bAllowCollisions);
	void SetBlockCooldownTime(float blockCool);
	void ServerSetDesiredSmoothRotation(const struct FRotator& NewRotation);
	void RemoveRotationRateOverride(class FName ID, bool bChecked);
	void RemoveRootMotionScaleOverride(class FName ID, bool bChecked);
	void RemoveJointRelativeTransform(class FName ID, enum class EPropJoint Joint, float BlendOutTime, bool bChecked);
	void RemoveGameplayTag(const struct FGameplayTag& TagToRemove);
	void PushDisableMontageRootMotion();
	void PopDisableMontageRootMotion();
	void OnRotationRateChanged(float NewRotationRate);
	void OnRep_MoveIgnore(const TArray<class AActor*>& OldMoveIgnoreActors);
	void OnRep_CollisionsWithOtherPawnsAllowed();
	void OnDamageTaken(struct FHitResult& HitResult);
	bool IsKnockDown();
	bool IsInAirState();
	bool IsFallingIntoTheVoid();
	bool IsBlocking();
	bool HasCharacterBegunPlay();
	void HandleNewCustomizationSettingsData(TArray<uint8>& NewCustomizationSettingsData);
	void HandleCharacterBodyType(enum class ECharacterBodyType CharacterBodyType);
	class UVigorComponent* GetVigorComponent();
	class UHexSyncedAnimComponent* GetSyncAnimComponent();
	class UStanceComponent* GetStanceComponent();
	float GetRotationRateOverrideValue(class FName ID);
	class UMotionWarpingComponent* GetMotionWarpingComponent();
	class UMojoComponent* GetMojoComponent();
	struct FVector GetLastValidLocation();
	bool GetLadderSprinting();
	float GetLadderInitialCharacterHeight();
	struct FVector GetItemDropValidLocation();
	bool GetIsAiming();
	class UInventoryComponent* GetInventoryComponent();
	int32 GetGameplayTagCount(const struct FGameplayTag& TagToCheck);
	class UDualRealmStateComponent* GetDualRealmStateComponent();
	class UCharacterData* GetCharacterData();
	class FName GetBoneToAimFrom();
	int32 GetBlockingFlags();
	float GetBlockCooldownTime();
	class UCharacterAudioComponent* GetAudioComponent();
	class UAkAnathemaComponent* GetAkComponentRHand();
	class UAkAnathemaComponent* GetAkComponentLHand();
	class UAkAnathemaComponent* GetAkComponentHead();
	struct FAimOffset GetAimOffset();
	class UAIFactionComponent* GetAIFactionComponent();
	class UHealthComponent* GetActorHealthComponent();
	class UAbilitySystemComponent* GetAbilitySystemComponent();
	bool ContainsRotationRateOverride(class FName ID);
	void BP_OnPlayerStateReady();
	void ApplyClassConfiguration(struct FCharacterClassData& CharacterClassData);
	void AddRotationRateOverride(float Value, class FName ID, int32 Priority);
	void AddRootMotionScaleOverride(float Value, class FName ID, int32 Priority);
	void AddJointRelativeTransform(class FName ID, enum class EPropJoint Joint, struct FTransform& RelativeTransform, float BlendInTime, int32 Priority);
	void AddGameplayTag(const struct FGameplayTag& TagToAdd);
};

// 0x110 (0xC40 - 0xB30)
// Class LOTF2.BaseAICharacter
class ABaseAICharacter : public ALOTF2Character
{
public:
	class UAIFactionComponent*                   AIFactionComponent;                                // 0xB30(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAggroComponent*                       AggroComponent;                                    // 0xB38(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        ForceFreezeMontage : 1;                            // Mask: 0x1, PropSize: 0x10xB40(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        ForceFreezeMontageWantStop : 1;                    // Mask: 0x2, PropSize: 0x10xB40(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        ForceFreezeMontageWantStopInterrupted : 1;         // Mask: 0x4, PropSize: 0x10xB40(0x1)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        IsFlying : 1;                                      // Mask: 0x8, PropSize: 0x10xB40(0x1)(Net, Transient, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_21A : 4;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_2773[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UBaseAIAnimatedBody*                   AnimatedBody;                                      // 0xB48(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UBaseAIAnimatedBody>       AnimatedBodyClassType;                             // 0xB50(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAIEnvironmentComponent*               AIEnvironmentComponent;                            // 0xB58(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  EyeBoneName;                                       // 0xB60(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIgnoreEyeBoneRotation;                            // 0xB68(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2774[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               EyeOffset;                                         // 0xB70(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStatsContainerComponent*              StatsContainerComponent;                           // 0xB88(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsReplicaParryable;                                // 0xB90(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanBeVisceralAttacked;                            // 0xB91(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EMovementMode                     FlyingStoredMovementMode;                          // 0xB92(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bDebugAttributesEnabled;                           // 0xB93(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2775[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USpecialDamageSpotsHighlighterComponent* SpecialDamageSpotsHighlighterComponent;            // 0xB98(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2776[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UDecisionContext*>              DecisionContexts;                                  // 0xBA8(0x10)(Edit, BlueprintVisible, ZeroConstructor, EditConst, NativeAccessSpecifierPrivate)
	TSubclassOf<class UNavigationQueryFilter>    DesiredNavigationFilterClass;                      // 0xBB8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2777[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSet<class UActorComponent*>                 ComponentsTickingDisableBySetTicking;              // 0xBC8(0x50)(ExportObject, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class UInventoryComponent*                   InventoryComponent;                                // 0xC18(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ULOTF2SerializationComponent*          LOTF2SerializationComponent;                       // 0xC20(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHexAIMovementAbilityHelperComponent*  MovementAbilityHelperComponent;                    // 0xC28(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class URevengeTargetComponent*               RevengeTargetComponent;                            // 0xC30(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2778[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ABaseAICharacter* GetDefaultObj();

	void SetFlying(bool InIsFlying);
	void OnRevive();
	void OnRep_IsFlying();
	void OnDebugAttributes(bool bEnabled);
	void OnDeath(class AActor* InstigatorActor, struct FGameplayTagContainer& InstigatorTags, bool bDeathWasObserved);
	void K2_UpdateAnimatedBody(class UBaseAIAnimatedBody* InAnimatedBody);
	void K2_OnAnimatedBodyUpdated(class UBaseAIAnimatedBody* InAnimatedBody);
	void K2_OnAIArchetypeAssigned(class ABaseAICharacter* Character);
	class UBaseAIAnimatedBody* K2_GetAnimatedBody();
	void HandleRevive();
	void HandleDeath(class AActor* InstigatorActor, struct FGameplayTagContainer& InstigatorTags, bool bDeathWasObserved);
	class UHexStateTreeComponent* GetStateTreeComponent();
	class ULOTF2SerializationComponent* GetSerializationComponent();
	struct FGameplayTagContainer GetCurrentStateTags();
	bool GetCanBeVisceralAttacked();
	class ABaseAIController* GetAIController();
};

// 0x280 (0x650 - 0x3D0)
// Class LOTF2.BaseAIController
class ABaseAIController : public AAIController
{
public:
	uint8                                        Pad_278B[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        IsAwakened : 1;                                    // Mask: 0x1, PropSize: 0x10x3E0(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_21B : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_278C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAITargetSystemComponent*              AITargetSystemComponent;                           // 0x3E8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAIWaitFirstEncounterSystemComp*       AIWaitFirstEncounterSystemComponent;               // 0x3F0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAIRubberBandingComponent*             AIRubberBandingComponent;                          // 0x3F8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAIPatrollingComponent*                AIPatrollingComponent;                             // 0x400(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAIEnvironmentBehaviorComponent*       AIEnvironmentBehaviorComponent;                    // 0x408(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHexEnvironmentalAwarenessComponent*   AIEnvAwarenessComponent;                           // 0x410(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHexAIGameplayEventHistoryComponent*   AIGameplayEventHistoryComponent;                   // 0x418(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHexStateTreeComponent*                StateTreeComponent;                                // 0x420(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAILogicManagerComponent*              AILogicManagerComponent;                           // 0x428(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAIActionManager*                      AIActionManagerComponent;                          // 0x430(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_            AnimationSignalDelegate;                           // 0x438(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_            NotifyNearHitDelegate;                             // 0x448(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_            NotifyDamagedDelegate;                             // 0x458(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_            NotifyDeathDelegate;                               // 0x468(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_            NotifyReviveDelegate;                              // 0x478(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_            NotifyExhaustedStartDelegate;                      // 0x488(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_            NotifyExhaustedStopDelegate;                       // 0x498(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_            NotifyStunStartDelegate;                           // 0x4A8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_            NotifyStunStopDelegate;                            // 0x4B8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_            BlockAnimEventDelegate;                            // 0x4C8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_            CombatSequenceBranchAnimEventDelegate;             // 0x4D8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_            BlockStartDelegate;                                // 0x4E8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_            BlockStopDelegate;                                 // 0x4F8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_            ParriedStartDelegate;                              // 0x508(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_            ParriedStopDelegate;                               // 0x518(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AActor>                 AssignedSpawnPoint;                                // 0x528(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         ProceduralTurnEnabled;                             // 0x530(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_278D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ProceduralTurnSpeed;                               // 0x534(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             ProceduralTurnInclusive;                           // 0x538(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             ProceduralTurnExclusive;                           // 0x548(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         EnableStrafeMovement;                              // 0x558(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EAIBodyStance                     BodyStance;                                        // 0x559(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EAIMoveStyle                      MoveStyle;                                         // 0x55A(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_278E[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  CurrentAttackEvent;                                // 0x55C(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsParried;                                         // 0x564(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsParryable;                                       // 0x565(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_278F[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ParriedFlags;                                      // 0x568(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsDodging;                                         // 0x56C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsExhausted;                                       // 0x56D(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsStunned;                                         // 0x56E(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2790[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               LastHitLocation;                                   // 0x570(0x18)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2791[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            QueuedRootTransform;                               // 0x590(0x60)(IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FAIAnimatedFlinch                     AnimatedFlinch;                                    // 0x5F0(0xC)(NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bIsKnockDown;                                      // 0x5FC(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsUsingUtilitySystem;                             // 0x5FD(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2792[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFocusOverrideData                    CurrentFocusOverride;                              // 0x600(0x40)(Transient, NoDestructor, NativeAccessSpecifierPrivate)
	enum class EHexNavLinkActionType_Down        NavLinkConfig_Down;                                // 0x640(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EHexNavLinkActionType_Up          NavLinkConfig_Up;                                  // 0x641(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2793[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UBaseAIPathFollowingComponent*         HexPathFollowingComponent;                         // 0x648(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ABaseAIController* GetDefaultObj();

	void UpdateAIPerceptionListener();
	void UpdateActiveTarget(class UAITarget* Goal, class UAITarget* Attention, bool* UseGoal);
	void StopParriedState(bool IsInterrupted);
	void StopBlocking(bool IsInterrupted);
	void StopBehaviourTree();
	void StartParriedState(int32 InParriedFlags);
	void StartBlocking(float InBlockingVulnerableWindow, int32 InBlockingFlags);
	void StartBehaviourTree();
	void SetTargetProximityStatus(enum class ETargetProximityStatus InTargetProximityStatus);
	void SetProceduralBodyTurnInclusiveRange(float Min, float Max);
	void SetProceduralBodyTurnExclusiveRange(float Min, float Max);
	void SetProceduralBodyTurn(bool Enable, float Speed);
	void SetMoveStyle(enum class EAIMoveStyle InMoveStyle);
	void SetGoalTarget(class AActor* Goal);
	void SetCanStrafe(bool InCanStrafe);
	void SetBodyStance(enum class EAIBodyStance InBodyStance);
	void SetAllowPlayerTargeting(bool InAllowTargeting);
	struct FVector ProjectPointOnNav(class UObject* WorldContextObject, struct FVector& Point, float Radius);
	void PlayHurtReaction(TSubclassOf<class UDamageType> DamageType, struct FVector& HitLocation, struct FVector& ShotDirection);
	void OnTakeDamageAny(class ABaseAIController* Controller, float Damage, struct FDamageEvent& DamageEvent, class AController* InstigatedBy, class AActor* DamageCauser);
	void OnTakeDamage(class ABaseAIController* Controller, float Damage, const struct FGameplayTagContainer& AllAssetTags, class AController* InstigatedBy, class AActor* DamageCauser);
	void OnStunStop(class ABaseAIController* Controller);
	void OnStunStart(class ABaseAIController* Controller);
	void OnRevive(class ABaseAIController* Controller);
	void OnPostPossess(class ABaseAICharacter* AICharacter);
	void OnPlayerRealmChange(enum class EGameRealm OldRealm, enum class EGameRealm NewRealm, enum class EActivateRealmReason Reason);
	void OnNearHit(class ABaseAIController* Controller, struct FDamageEvent& DamageEvent, class AController* InstigatedBy, class AActor* DamageCauser);
	void OnExhaustedStop(class ABaseAIController* Controller);
	void OnExhaustedStart(class ABaseAIController* Controller);
	void OnDeath(class ABaseAIController* Controller);
	bool NavRayTrace(class UObject* WorldContextObject, struct FVector& RayStart, struct FVector& RayEnd, struct FVector* HitLocation, float Radius);
	void K2_UpdateAnimatedBody(class UBaseAIAnimatedBody* InAnimatedBody);
	void K2_OnParriedStopped();
	void K2_OnParriedStarted();
	void K2_OnBlockStopped();
	void K2_OnBlockStarted();
	void K2_OnAnimatedBodyUpdated(class UBaseAIAnimatedBody* InAnimatedBody);
	bool K2_IsTargetPerceived(class AActor* Actor);
	bool K2_IsFollowingPath();
	bool K2_GetTargetEnvelopeState(class AActor* Actor, enum class EAITargetEnvelopeType EnvelopeType, struct FAITargetEnvelopeState* OutState);
	struct FVector K2_GetNavMeshLocation();
	class UAITarget* K2_GetGoalTarget();
	class UAITarget* K2_GetCurrentTarget();
	bool K2_GetCharacterLocation(struct FVector* Location);
	class UAITarget* K2_GetAttentionTarget();
	bool IsProceduralBodyTurnEnabled();
	void IsNeutralActorHostile(class AActor* Actor, bool* Result);
	bool IsMoving(float MinMoveSpeedOrDistance, bool UseSpeed);
	bool HasValidSpawnLocation();
	void HandleTakeDamage(class AActor* DamagedActor, float Damage, const struct FGameplayTagContainer& AllAssetTags, class AActor* InstigatedBy, class AActor* DamageCauser, enum class EHexAttackTypeEffectivenes AttackTypeEffectiveness);
	void HandleRevive();
	void HandleNearHit(struct FDamageEvent& DamageEvent, class AController* InstigatedBy, class AActor* DamageCauser);
	void HandleExitStun();
	void HandleExitParryableWindow(class ALOTF2Character* LOTF2Character);
	void HandleEnterStun();
	void HandleEnterParryableWindow(class ALOTF2Character* LOTF2Character);
	void HandleEndExhausted();
	void HandleDeath(class AActor* InstigatorActor, struct FGameplayTagContainer& InstigatorTags, bool bDeathWasObserved);
	void HandleBeginExhausted();
	enum class ETargetProximityStatus GetTargetProximityStatus();
	class UHexStateTreeComponent* GetStateTreeComponent();
	struct FVector GetSpawnNavLocation(class UObject* WorldContextObject, float Radius);
	struct FVector GetSpawnLocation();
	struct FVector GetSpawnFacingVector();
	float GetSpawnFacing();
	float GetProceduralBodyTurnInclusiveMin();
	float GetProceduralBodyTurnInclusiveMax();
	float GetProceduralBodyTurnExclusiveMin();
	float GetProceduralBodyTurnExclusiveMax();
	class ANavigationData* GetNavigationData();
	enum class EAIMoveStyle GetMoveStyle();
	float GetMoveSpeed();
	float GetLastStunEndTime();
	float GetLastStunEndSeconds();
	float GetLastExhaustedEndTime();
	float GetLastExhaustedEndSeconds();
	bool GetIsStunned();
	bool GetIsRecentlyStunned(float DeltaTime);
	bool GetIsRecentlyExhausted(float DeltaTime);
	bool GetIsParryable();
	bool GetIsParried();
	bool GetIsExhausted();
	bool GetIsBlocking();
	bool GetIsAttacking();
	bool GetCanStrafe();
	enum class EAIBodyStance GetBodyStance();
	class UAILogicManagerComponent* GetAILogicManagerComponent();
	class ABaseAICharacter* GetAICharacter();
	class UBehaviorTree* GetAIBehaviorTree();
	class UAIActionManager* GetAIActionManagerComponent();
	void GenerateFlinch();
	void ClearProceduralBodyTurnInclusiveRange();
	void ClearProceduralBodyTurnExclusiveRange();
	bool CanIgnoreTargetGateLock();
};

// 0x8 (0x30 - 0x28)
// Class LOTF2.AIPathFollowingMetaData
class UAIPathFollowingMetaData : public UAnimMetaData
{
public:
	float                                        SteeringTurnSpeed;                                 // 0x28(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2794[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAIPathFollowingMetaData* GetDefaultObj();

};

// 0x90 (0x358 - 0x2C8)
// Class LOTF2.BaseAIPathFollowingComponent
class UBaseAIPathFollowingComponent : public UPathFollowingComponent
{
public:
	class UHexCentripetalCatmullRomSpline*       CurveSmoothingSpline;                              // 0x2C8(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2795[0x88];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBaseAIPathFollowingComponent* GetDefaultObj();

};

// 0x88 (0x3D0 - 0x348)
// Class LOTF2.LotfAnimInstance
class ULotfAnimInstance : public UAnimInstance
{
public:
	uint8                                        Pad_279E[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsRelaxed;                                         // 0x358(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_279F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        IsExhausted : 1;                                   // Mask: 0x1, PropSize: 0x10x35C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        IsTired : 1;                                       // Mask: 0x2, PropSize: 0x10x35C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_21C : 6;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_27A0[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CombatStanceIndex;                                 // 0x360(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsBlocking;                                       // 0x364(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27A1[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FHexAnimatedFlinch                    Flinch;                                            // 0x368(0x14)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_27A2[0x54];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ULotfAnimInstance* GetDefaultObj();

	void StopFlinch();
	void SetTarget(class FName TargetName, struct FTargetData& TargetData);
	void SetBlocking(bool IsBlocking);
	bool IsKnockDown();
	bool IsAnyMontagePlayingInSlot(class FName SlotNodeName);
	void HandleOnStoppedBlocking(class ALOTF2Character* Character);
	void HandleOnStartedBlocking(class ALOTF2Character* Character);
	void HandleOnEndTired();
	void HandleOnBeginTired();
	void HandleExitExhausted();
	void HandleEnterExhausted();
	struct FTargetData GetTarget(class FName TargetName);
	enum class EStanceType GetStance();
	void ClearTarget(class FName TargetName);
	bool CalculateMoveBlendSpaceInput(float RotLerpSpeed, float& InAngle, float* OutAngle, float* OutSpeed);
	class UAnimMontage* BP_GetMontageByTagEx(struct FGameplayTag& AnimationTag, enum class EFEquipmentSlot EquipmentSlot, enum class EStanceType StanceType);
	class UAnimMontage* BP_GetMontageByTag(struct FGameplayTag& AnimationTag);
	bool BP_GetCurveValue(class FName CurveName, float* OutValue);
	class UBlendSpace* BP_GetBlendspaceByTag(struct FGameplayTag& AnimationTag);
	class UClass* BP_GetAnimInstanceBase();
	bool BP_GetAnimationsArrayByTag(struct FGameplayTag& AnimationTag, TArray<class UAnimSequence*>* OutAnimations);
	class UAnimSequence* BP_GetAnimationByTagEx(struct FGameplayTag& AnimationTag, enum class EFEquipmentSlot EquipmentSlot, enum class EStanceType StanceType);
	class UAnimSequence* BP_GetAnimationByTag(struct FGameplayTag& AnimationTag);
	class UBlendSpace* BP_GetAimOffsetBlendSpaceByTag(struct FGameplayTag& AnimationTag);
};

// 0x200 (0x5D0 - 0x3D0)
// Class LOTF2.BaseEnemyAnimInstance
class UBaseEnemyAnimInstance : public ULotfAnimInstance
{
public:
	float                                        DefaultRunSpeed;                                   // 0x3D0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27A3[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               L_CharVelocity_2D;                                 // 0x3D8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               W_CharVelocity_2D;                                 // 0x3F0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              W_CharRotation;                                    // 0x408(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        MoveSpeed;                                         // 0x420(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsMoving;                                          // 0x424(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsRunning;                                         // 0x425(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsInAir;                                           // 0x426(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27A4[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MoveAngle;                                         // 0x428(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EHexCardinalDirection             LocalVelocityDirection;                            // 0x42C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         WasMovingLastUpdate;                               // 0x42D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShouldTransitionToBlocking;                       // 0x42E(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27A5[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MinAimingPitch;                                    // 0x430(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxAimingPitch;                                    // 0x434(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        Aiming_Yaw;                                        // 0x438(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        Aiming_Pitch;                                      // 0x43C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bDisabled;                                         // 0x440(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27A6[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Flinch_Alpha;                                      // 0x444(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        R_Arm_Override_Alpha;                              // 0x448(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        L_Arm_Override_Alpha;                              // 0x44C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LArm_Layering_Alpha;                               // 0x450(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RArm_Layering_Alpha;                               // 0x454(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        UpperBody_Layering_AlphaValue;                     // 0x458(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AimingOffset_AlphaValue;                           // 0x45C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        NativeFlinchAnimTime;                              // 0x460(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27A7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FHexCardinalDirectionAnimationStruct  NativeWalkAnim_CardinalDirection;                  // 0x468(0x20)(Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FHexCardinalDirectionAnimationStruct  NativeRunAnim_CardinalDirection;                   // 0x488(0x20)(Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                 DisableLookAtCRTagContainer;                       // 0x4A8(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                         bLookAtCREnabled;                                  // 0x4C8(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27A8[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 IsNPCTagContainer;                                 // 0x4D0(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                         bIsNPCCharacter;                                   // 0x4F0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27A9[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 DialogueFacialOverrideActiveContainer;             // 0x4F8(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                         bDialogueOverrideAlphaEnabled;                     // 0x518(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27AA[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          AlternateIdleStateTag;                             // 0x51C(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHasAlternateIdleStateTag;                         // 0x524(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27AB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          CharacterDeadStateTag;                             // 0x528(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsCharacterDead;                                  // 0x530(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27AC[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          LookAtHeadOnlyInternalTag;                         // 0x534(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bLookAtHeadOnlyInternal;                           // 0x53C(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27AD[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               OwningActorLocation;                               // 0x540(0x18)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AActor>                 NPCLookAtTargetActor;                              // 0x558(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bLookAtTargetLocationSet;                          // 0x560(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27AE[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               LookAtTargetLocation;                              // 0x568(0x18)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               TargetLookAtBoneLocation;                          // 0x580(0x18)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27AF[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBaseEnemyAnimInstance* GetDefaultObj();

	void NativeUpdateLocomotionAnimation(struct FAnimUpdateContext* Context, struct FAnimNodeReference* NodeRef);
	void NativeUpdateFlinchAnimation(struct FAnimUpdateContext* Context, struct FAnimNodeReference* NodeRef);
	class FName GetLookAtSocketName();
	enum class EHexCardinalDirection GetLocalVelocityDirectionValue();
};

// 0x280 (0xDB0 - 0xB30)
// Class LOTF2.BaseFakeCharacter
class ABaseFakeCharacter : public ALOTF2Character
{
public:
	class UMaterialInstanceDynamic*              GhostVisualMaterialInstance;                       // 0xB30(0x8)(BlueprintVisible, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryComponent*                   InventoryComponent;                                // 0xB38(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    GhostVisualMaterial;                               // 0xB40(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FPlayerVisualData                     PlayerVisualData;                                  // 0xB48(0x268)(Net, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ABaseFakeCharacter* GetDefaultObj();

	void OnMutableMeshChanged();
	void OnItemVisualLoaded(class UEquipableInventoryItem* Item, class AActor* VisualInstance);
	void FadeOut();
	void EnableVisibility();
	void BP_ApplyGhostVisuals();
	void ApplyItemsGhostVisuals();
	void ApplyCharacterGhostVisuals();
};

// 0x30 (0xC70 - 0xC40)
// Class LOTF2.BaseNPCCharacter
class ABaseNPCCharacter : public ABaseAICharacter
{
public:
	uint8                                        Pad_27B0[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USceneComponent*                       InteractionCollisionRoot;                          // 0xC48(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInteractionComponent*                 InteractionComponent;                              // 0xC50(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNPCComponent*                         NPCComponent;                                      // 0xC58(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanOrientTowardsPlayer;                           // 0xC60(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27B1[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ABaseNPCCharacter* GetDefaultObj();

	void OnDialogueFinished(enum class EDialogueEndReason Reason);
};

// 0x110 (0x4E0 - 0x3D0)
// Class LOTF2.BasePlayerAnimInstance
class UBasePlayerAnimInstance : public ULotfAnimInstance
{
public:
	uint8                                        Pad_27B6[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        VerticalCameraRotationOffest;                      // 0x400(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27B7[0x24];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FHandAnimInfo                         LeftHandAnimInfo;                                  // 0x428(0x2)(BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FHandAnimInfo                         RightHandAnimInfo;                                 // 0x42A(0x2)(BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	int32                                        LeftAnimAge;                                       // 0x42C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        RightAnimAge;                                      // 0x430(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bFlipLeftDirection;                                // 0x434(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bFlipRightDirection;                               // 0x435(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FHandAnimInfo                         OngoingLeftHandAnimInfo;                           // 0x436(0x2)(BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FHandAnimInfo                         OngoingRightHandAnimInfo;                          // 0x438(0x2)(BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_27B8[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        OngoingLeftAnimAge;                                // 0x43C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        OngoingRightAnimAge;                               // 0x440(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27B9[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SafeguardTimeout;                                  // 0x458(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27BA[0x64];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          CharacterSelectionAnimationTag;                    // 0x4C0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          CharacterSelectionIdlePoseAnimationTag;            // 0x4C8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27BB[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBasePlayerAnimInstance* GetDefaultObj();

	void SetVerticalCameraRotationOffset(float NewOffset);
	bool SetLastMovementInput(bool RReplicate, struct FVector* OutLastMovementInput);
	void SetCharacterSelectionAnimationTag(struct FGameplayTag& NewTag);
	void SetCharacterCustomIdlePoseAnimationTag(struct FGameplayTag& NewTag);
	void RightEquipmentAnimationStarted();
	void RightEquipmentAnimationFinished();
	void RightEquipmentAnimationBlendingOut();
	void RequestRightEquipmentAnimation(enum class EHolsterableSlot HolsterableSlot, enum class EEquipAnimationType RightHandEquipAnimationType, bool bEquip);
	void RequestLeftEquipmentAnimation(enum class EHolsterableSlot HolsterableSlot, enum class EEquipAnimationType LeftHandEquipAnimationType, bool bEquip);
	void RemoveEquipAnimationsTemporarilyDisabled(class FName ID, bool bChecked);
	void RemoveEquipAnimationsPlayrateOverride(class FName ID, bool bChecked);
	void NotifySetupCharacterFromSave();
	void LeftEquipmentAnimationStarted();
	void LeftEquipmentAnimationFinished();
	void LeftEquipmentAnimationBlendingOut();
	bool IsTurnRateByDefaultEnabled();
	float GetEquipAnimationsPlayrate();
	void GetDebugStringArrayBP(TArray<class FString>* DebugStrings);
	void ClearRightEquipmentAnimations();
	void ClearLeftEquipmentAnimations();
	void AddEquipAnimationsTemporarilyDisabled(class FName ID, int32 Priority);
	void AddEquipAnimationsPlayrateOverride(float PlayRate, class FName ID, int32 Priority);
};

// 0x8 (0x2D8 - 0x2D0)
// Class LOTF2.DamageableActor
class ADamageableActor : public AAbilitySystemActor
{
public:
	class UHealthComponent*                      HealthComponent;                                   // 0x2D0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ADamageableActor* GetDefaultObj();

};

// 0x140 (0x418 - 0x2D8)
// Class LOTF2.Destructible
class ADestructible : public ADamageableActor
{
public:
	uint8                                        Pad_27BD[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class ADebris>                   DebrisClass;                                       // 0x2E0(0x8)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  StaticMeshComponent;                               // 0x2E8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UStaticMesh*>                   Debris;                                            // 0x2F0(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UFXSystemAsset*                        DestroyVisualFX;                                   // 0x300(0x8)(Edit, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                         DestroySoundFX;                                    // 0x308(0x8)(Edit, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CollisionThreshold;                                // 0x310(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ParticlePlayTime;                                  // 0x314(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayEffectsWithParamsContainer   GEToApplyOnCollision;                              // 0x318(0x10)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGameplayEffectsWithParamsContainer   GEToApplyOnOverlap;                                // 0x328(0x10)(Edit, Protected, NativeAccessSpecifierProtected)
	TArray<TSubclassOf<class AActor>>            ActorsToSpawnOnDestruction;                        // 0x338(0x10)(Edit, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TSubclassOf<class AActor>                    DestructionRemainsToSpawn;                         // 0x348(0x8)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DebrisDespawnMinTime;                              // 0x350(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DebrisDespawnMaxTime;                              // 0x354(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DebrisImpulseMultiplier;                           // 0x358(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bWorldReset;                                       // 0x35C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EHexAITeams                       Team;                                              // 0x35D(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bDrawDebug;                                        // 0x35E(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27BE[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  DestructibleDebugName;                             // 0x360(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bDestroyed;                                        // 0x368(0x1)(Edit, Net, ZeroConstructor, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bWasDestroyedBefore;                               // 0x369(0x1)(Edit, ZeroConstructor, EditConst, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_27BF[0x1E];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TWeakObjectPtr<class AActor>>         SpawnedActorsOnDestruction;                        // 0x388(0x10)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                        Pad_27C0[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ULOTF2SerializationComponent*          LOTF2SerializationComponent;                       // 0x3A8(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_27C1[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class USceneComponent*, bool>           ComponentVisibilityStates;                         // 0x3C0(0x50)(ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class UFXSystemComponent*                    SpawnedVFX;                                        // 0x410(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ADestructible* GetDefaultObj();

	void SetEnableHighlight(bool bEnable);
	void SetDestructibleDebugName(class FName DebugName);
	void ResetDestructible();
	void OnWorldReset();
	void OnVisualFXSpawned(class UFXSystemComponent* SpawnedVFX);
	void OnRep_Destroyed();
	void OnMeshHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, struct FHitResult& Hit);
	void OnDestructibleReset_BP();
	void OnDestructibleDestroyed_BP();
	void OnActorEndOverlapImpl(class AActor* OverlappedActor, class AActor* OtherActor);
	void OnActorBeginOverlapImpl(class AActor* OverlappedActor, class AActor* OtherActor);
	void MulticastHandleDestructibleEffects();
	void HandleDeath(class AActor* InstigatorActor, struct FGameplayTagContainer& InstigatorTags, bool bDeathWasObserved);
	void DestroyDestructible();
	void DeferredVFXDeactivation();
};

// 0x28 (0x440 - 0x418)
// Class LOTF2.BaseTumor
class ABaseTumor : public ADestructible
{
public:
	uint8                                        Pad_27C2[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class APhysicsConstraintActor>   PhysicalConstraintActorClass;                      // 0x420(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class APhysicsConstraintActor*               PhysicalConstraintActorInstance;                   // 0x428(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDualRealmBehaviourComponent*          DualRealmBehaviourComponent;                       // 0x430(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDualRealmStateComponent*              DualRealmStateComponent;                           // 0x438(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ABaseTumor* GetDefaultObj();

	void OnOwnerDestroyed(class AActor* ActorDestroyed);
};

// 0x128 (0x158 - 0x30)
// Class LOTF2.BasicAttributeSet
class UBasicAttributeSet : public UAttributeSet
{
public:
	struct FGameplayAttributeData                Level;                                             // 0x30(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                Health;                                            // 0x40(0x10)(BlueprintVisible, BlueprintReadOnly, Net, SaveGame, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                MaxHealth;                                         // 0x50(0x10)(BlueprintVisible, BlueprintReadOnly, Net, SaveGame, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                HealthProvisionalDamage;                           // 0x60(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                SoulBurstDamage;                                   // 0x70(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                Magic;                                             // 0x80(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                MaxMagic;                                          // 0x90(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                MagicRegenRate;                                    // 0xA0(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                Stamina;                                           // 0xB0(0x10)(BlueprintVisible, BlueprintReadOnly, Net, SaveGame, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                MaxStamina;                                        // 0xC0(0x10)(BlueprintVisible, BlueprintReadOnly, Net, SaveGame, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                MinStamina;                                        // 0xD0(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                StaminaRegenRate;                                  // 0xE0(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                StaminaRegenTimer;                                 // 0xF0(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                UsableStaminaMultiplier;                           // 0x100(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                StaminaMeleeAttackMultiplier;                      // 0x110(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                ItemDiscovery;                                     // 0x120(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                ItemDropRateMultiplier;                            // 0x130(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                RequiredDamageLevel;                               // 0x140(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	uint8                                        Pad_27C3[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBasicAttributeSet* GetDefaultObj();

	void OnRep_UsableStaminaMultiplier(struct FGameplayAttributeData& OldUsableStaminaMultiplier);
	void OnRep_StaminaRegenTimer(struct FGameplayAttributeData& OldStaminaRegenRate);
	void OnRep_StaminaRegenRate(struct FGameplayAttributeData& OldStaminaRegenRate);
	void OnRep_Stamina(struct FGameplayAttributeData& OldStamina);
	void OnRep_MinStamina(struct FGameplayAttributeData& OldMinStamina);
	void OnRep_MaxStamina(struct FGameplayAttributeData& OldMaxStamina);
	void OnRep_MaxMagic(struct FGameplayAttributeData& OldMaxMagic);
	void OnRep_MaxHealth(struct FGameplayAttributeData& OldMaxHealth);
	void OnRep_MagicRegenRate(struct FGameplayAttributeData& OldMagicRegenRate);
	void OnRep_Magic(struct FGameplayAttributeData& OldMagic);
	void OnRep_ItemDiscovery(struct FGameplayAttributeData& OldItemDiscovery);
	void OnRep_HealthProvisionalDamage(struct FGameplayAttributeData& OldHealthProvisionalDamage);
	void OnRep_Health(struct FGameplayAttributeData& OldHealth);
};

// 0x70 (0x98 - 0x28)
// Class LOTF2.BattleEffectsDecorator
class UBattleEffectsDecorator : public URichTextBlockDecorator
{
public:
	TSubclassOf<class UCommonTextStyle>          TextStyle;                                         // 0x28(0x8)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<enum class EGameplayModOp, class FText> TextFormat;                                        // 0x30(0x50)(Edit, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_27C4[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UInventoryItem*                        InventoryItem;                                     // 0x90(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UBattleEffectsDecorator* GetDefaultObj();

	void SetInventoryItem(class UInventoryItem* InventoryItem);
};

// 0x10 (0xF0 - 0xE0)
// Class LOTF2.BattleEffectsSpawnerConfigComponent
class UBattleEffectsSpawnerConfigComponent : public UHexApplySpawnConfigComponent
{
public:
	TArray<struct FHexBattleEffectWithQuery>     BattleEffectsWithQuery;                            // 0xE0(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UBattleEffectsSpawnerConfigComponent* GetDefaultObj();

};

// 0x60 (0x4A8 - 0x448)
// Class LOTF2.HexBattleEffectAbility
class UHexBattleEffectAbility : public UAnathemaGameplayAbility
{
public:
	uint8                                        Pad_27C8[0x60];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexBattleEffectAbility* GetDefaultObj();

	bool GetBattleEffectStringParam(const struct FGameplayTag& ParamName, class FName* OutValue);
	bool GetBattleEffectNumericParam(const struct FGameplayTag& ParamName, float* OutValue);
	bool GetBattleEffectAttributeParam(const struct FGameplayTag& ParamName, struct FGameplayAttribute* OutValue);
	struct FActiveGameplayEffectHandle ApplyBattleEffectWithCurrentAbilityParamsToSelf(class FName BattleEffectName);
};

// 0x130 (0x5D8 - 0x4A8)
// Class LOTF2.BEAbility_SpawnSAAOnDeath
class UBEAbility_SpawnSAAOnDeath : public UHexBattleEffectAbility
{
public:
	struct FSpawnDefinition                      SpawnDefinition;                                   // 0x4A8(0x120)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	TSubclassOf<class USubAutonomousAbilityData> SubAutonomousAbilityData;                          // 0x5C8(0x8)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FHexBattleEffectIdentifier            BattleEffectIdentifier;                            // 0x5D0(0x8)(Edit, NoDestructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UBEAbility_SpawnSAAOnDeath* GetDefaultObj();

	void OnWaitOneFrame();
	void DeathEventReceived(const struct FGameplayEventData& EventPayload);
};

// 0x0 (0x2B8 - 0x2B8)
// Class LOTF2.HexFocusableWidget
class UHexFocusableWidget : public ULOTF2UserWidget
{
public:

	static class UClass* StaticClass();
	static class UHexFocusableWidget* GetDefaultObj();

	bool SelectAndFocus();
	bool HasFocus();
};

// 0x10 (0x2C8 - 0x2B8)
// Class LOTF2.CustomizationUserWidget
class UCustomizationUserWidget : public UHexFocusableWidget
{
public:
	class UMutableWrapperComponent*              MutableInstance;                                   // 0x2B8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EBodyShapeAttributeType           AttributeType;                                     // 0x2C0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27C9[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCustomizationUserWidget* GetDefaultObj();

	void UpdateCustomizationDataInternal();
	void UpdateCustomizationData();
	void SetAttribute(enum class EBodyShapeAttributeType AttributeType, bool bApplyAttributeToChildren);
	void OnResetCustomization();
	void BP_UpdateCustomizationData();
};

// 0x8 (0x2D0 - 0x2C8)
// Class LOTF2.CustomizationSliderBase
class UCustomizationSliderBase : public UCustomizationUserWidget
{
public:
	class UHexGenericSlider*                     GenericSlider;                                     // 0x2C8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UCustomizationSliderBase* GetDefaultObj();

};

// 0x40 (0x310 - 0x2D0)
// Class LOTF2.BigFeatureSliderWidget
class UBigFeatureSliderWidget : public UCustomizationSliderBase
{
public:
	class UFocusableButtonWidget*                Button_Decrease;                                   // 0x2D0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFocusableButtonWidget*                Button_Increase;                                   // 0x2D8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomizationFeatureLabelWidget*      Text_FeatureName;                                  // 0x2E0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomizationFeatureLabelWidget*      Text_FeatureValue;                                 // 0x2E8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                  FeatureName;                                       // 0x2F0(0x18)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	float                                        FeatureValue;                                      // 0x308(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        IncrementValue;                                    // 0x30C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UBigFeatureSliderWidget* GetDefaultObj();

	void OnSliderValueChanged(float Value);
	void OnIncreaseButtonPressed();
	void OnDecreaseButtonPressed();
};

// 0x80 (0x130 - 0xB0)
// Class LOTF2.BlendSpaceSequence
class UBlendSpaceSequence : public UAnimSequenceBase
{
public:
	class UBlendSpace*                           BlendSpace;                                        // 0xB0(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               BlendSpaceInput;                                   // 0xB8(0x18)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bLooping : 1;                                      // Mask: 0x1, PropSize: 0x10xD0(0x1)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bHasRootMotionEnabled : 1;                         // Mask: 0x2, PropSize: 0x10xD0(0x1)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_21D : 6;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_27CA[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FBlendSampleData>              BlendSampleDataCache;                              // 0xD8(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FBlendFilter                          BlendFilter;                                       // 0xE8(0x10)(Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_27CB[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBlendSpaceSequence* GetDefaultObj();

};

// 0xB8 (0x5A8 - 0x4F0)
// Class LOTF2.CustomizationScreenWidget
class UCustomizationScreenWidget : public UInGameMenuPanel
{
public:
	class UWidgetSwitcher*                       Shape_Switcher;                                    // 0x4F0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                          Container_Shape_Options;                           // 0x4F8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInputActionButton*                    Button_FineTune;                                   // 0x500(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHideWeapons;                                      // 0x508(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanSwitchBodyType;                                // 0x509(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanUndress;                                       // 0x50A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanGenerateRandomCustomization;                   // 0x50B(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanGenerateHeadRandomCustomization;               // 0x50C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27CD[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  TextShowHelmet;                                    // 0x510(0x18)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class FText                                  TextHideHelmet;                                    // 0x528(0x18)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	bool                                         bCustomizingShape;                                 // 0x540(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27CE[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class EFEquipmentSlot, class UEquipableInventoryItem*> CurrentEquipment;                                  // 0x548(0x50)(Transient, Protected, NativeAccessSpecifierProtected)
	bool                                         bInteractionEnabled;                               // 0x598(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27CF[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCustomizationScreenWidget* GetDefaultObj();

	void OnSwitchBodyType();
	void OnRandomizeCharacter();
	void DeactivateShapePanel();
	void BP_UpdateEquipmentStatus();
	void BP_SwitchBodyType(enum class ECharacterBodyType CurrentBodyType);
	void BP_SwitchArmorVisibility(bool bVisible);
	void BP_RandomizeCharacter();
	void ActivateShapePanel(class UShapeCategoryWidget* ShapeCategoryWidget, bool bShowFineTune);
};

// 0x68 (0x610 - 0x5A8)
// Class LOTF2.BodyCustomizationScreenWidget
class UBodyCustomizationScreenWidget : public UCustomizationScreenWidget
{
public:
	uint8                                        Pad_27D0[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnRequestCharacterNameChange;                      // 0x5B8(0x10)(ZeroConstructor, InstancedReference, BlueprintCallable, NativeAccessSpecifierPublic)
	bool                                         bCharacterUndressed;                               // 0x5C8(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27D1[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UBodyShapeSliderWidget*                Slider_BodyShape;                                  // 0x5D0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                          Container_Selectors;                               // 0x5D8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBodyShapeData*                        BodyShapeData;                                     // 0x5E0(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBodyTypeSelectorWidget*               Selector_BodyType;                                 // 0x5E8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27D2[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UOptionSelectorBaseWidget*>     OptionSelectors;                                   // 0x5F8(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_27D3[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBodyCustomizationScreenWidget* GetDefaultObj();

	void UpdateSlider();
	void UpdateCustomizationOptions();
	void OnRequestCameraChange(enum class EBodyShapeCamera SelectedCamera, bool bZoomIn);
	void OnMeshChangeRequest(bool bIsBlocking);
	void OnMeshChanged();
	void OnLockFeature();
	void BP_StopShapeCustomization();
	void BP_SetActive(bool bActive);
	void BP_CloseCharInputName();
};

// 0x318 (0x348 - 0x30)
// Class LOTF2.BodyShapeData
class UBodyShapeData : public UDataAsset
{
public:
	class UHeadShapeData*                        HeadShapeData;                                     // 0x30(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            TattooDefaults;                                    // 0x38(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<enum class ECharacterBodyType, class UCustomizableObject*> CharacterBodyTypes;                                // 0x40(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<struct FPhysMergeConfig>              ClothMorphConfig;                                  // 0x90(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TMap<enum class EBodyShapeAttributeType, class FString> BodyShapeToMutable;                                // 0xA0(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TMap<enum class EArmorTintAttributeType, class FString> ArmorTintsToMutable;                               // 0xF0(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TMap<enum class ECustomizationCategory, struct FMorphFeatureArray> MorphFeatures;                                     // 0x140(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TMap<enum class ECustomizationCategory, struct FUIShapeDataArray> UIShapeData;                                       // 0x190(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class UCustomizationSettings*                DefaultCustomization;                              // 0x1E0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTattooData                           TattooData;                                        // 0x1E8(0xA0)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<enum class EPropJoint>                JointsAffectedByPhysique;                          // 0x288(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FPlayerSocketOverrides>        SocketsAffectedByPhysiqueFat;                      // 0x298(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FPlayerSocketOverrides>        SocketsAffectedByPhysiqueMuscular;                 // 0x2A8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FPlayerSocketOverrides>        SocketsAffectedByPhysiqueSkinny;                   // 0x2B8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UCustomizableObjectInstance>> MaleCharacterPresets;                              // 0x2C8(0x10)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UCustomizableObjectInstance>> FemaleCharacterPresets;                            // 0x2D8(0x10)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TMap<enum class ETattooLocation, struct FTattooAttributeByLocation> TattooAttributesByLocation;                        // 0x2E8(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<struct FPlayerSocketOverridesArray>   OverriddenSocketsAffectedByArmor;                  // 0x338(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UBodyShapeData* GetDefaultObj();

};

// 0x5C8 (0x890 - 0x2C8)
// Class LOTF2.BodyShapeSliderWidget
class UBodyShapeSliderWidget : public UCustomizationUserWidget
{
public:
	class UThreeValueSliderWidget*               BodyShapeSlider;                                   // 0x2C8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            Text_TopShapeName;                                 // 0x2D0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                  TopString;                                         // 0x2D8(0x18)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	class UTextBlock*                            Text_LeftShapeName;                                // 0x2F0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                  LeftString;                                        // 0x2F8(0x18)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	class UTextBlock*                            Text_RightShapeName;                               // 0x310(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                  RightString;                                       // 0x318(0x18)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	class UCommonNumericTextBlock*               Muscular_Value;                                    // 0x330(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonNumericTextBlock*               Large_Value;                                       // 0x338(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonNumericTextBlock*               Thin_Value;                                        // 0x340(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<enum class EBodyShapeAttributeType, class FString> SkinTypeOptions;                                   // 0x348(0x50)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	float                                        SkinChangeThresholdValue;                          // 0x398(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSelected;                                         // 0x39C(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EBodyShapeAttributeType           TopAttributeType;                                  // 0x39D(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EBodyShapeAttributeType           LeftAttributeType;                                 // 0x39E(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EBodyShapeAttributeType           RightAttributeType;                                // 0x39F(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FThreeValueSliderStyle                SliderStyle;                                       // 0x3A0(0x4F0)(Transient, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UBodyShapeSliderWidget* GetDefaultObj();

	void OnAllValuesChanged();
};

// 0x78 (0x340 - 0x2C8)
// Class LOTF2.OptionSelectorBaseWidget
class UOptionSelectorBaseWidget : public UCustomizationUserWidget
{
public:
	uint8                                        Pad_27D4[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnNewOptionSelected;                               // 0x2E8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	class UFocusableButtonWidget*                Button_PreviousOption;                             // 0x2F8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFocusableButtonWidget*                Button_NextOption;                                 // 0x300(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFocusableButtonWidget*                Button_Customize;                                  // 0x308(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                       Switcher_Options;                                  // 0x310(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                      Text_FeatureName;                                  // 0x318(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                  FeatureName;                                       // 0x320(0x18)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	enum class ECustomizationCategory            ShapeCategory;                                     // 0x338(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bDefaultLocked;                                    // 0x339(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27D5[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOptionSelectorBaseWidget* GetDefaultObj();

	void SetLocked(bool bLocked);
	void SetCurrentSelectedOption(int32 Index);
	void OnPreviousOptionSelected();
	void OnOptionSelected(int32 SelectedOptionIndex);
	void OnNextOptionSelected();
	void OnHovered();
	void OnCustomizeButtonSelected();
	bool IsLocked();
	int32 GetCurrentOptionIndex();
	void BP_LockFeature(bool Block);
};

// 0x48 (0x388 - 0x340)
// Class LOTF2.BodyTypeSelectorWidget
class UBodyTypeSelectorWidget : public UOptionSelectorBaseWidget
{
public:
	TSubclassOf<class UPresetNameWidget>         PresetWidgetClass;                                 // 0x340(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            InitialCharacterClasses;                           // 0x348(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27D6[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBodyTypeSelectorWidget* GetDefaultObj();

	void OnBodyTypeChanged(enum class ECharacterBodyType CharacterBody);
};

// 0x20 (0x2C0 - 0x2A0)
// Class LOTF2.ExtensionPointEntryWidget
class UExtensionPointEntryWidget : public UCommonUserWidget
{
public:
	FMulticastInlineDelegateProperty_            OnEntryHidden;                                     // 0x2A0(0x10)(ZeroConstructor, InstancedReference, BlueprintCallable, NativeAccessSpecifierPublic)
	float                                        Duration;                                          // 0x2B0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27D7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UExtensionPointWidget*                 ParentWidget;                                      // 0x2B8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UExtensionPointEntryWidget* GetDefaultObj();

	void BP_SetDuration(float Duration);
	void BP_OnDeactivated();
	void BP_OnActivated();
};

// 0x10 (0x2D0 - 0x2C0)
// Class LOTF2.BossSlainedMessageWidget
class UBossSlainedMessageWidget : public UExtensionPointEntryWidget
{
public:
	class UImage*                                Image_GuardianIcon;                                // 0x2C0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            Text_GuardianName;                                 // 0x2C8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UBossSlainedMessageWidget* GetDefaultObj();

	void SetBossInfo(class AActor* ActorToShow);
};

// 0x110 (0x3D0 - 0x2C0)
// Class LOTF2.BossStatsWidget
class UBossStatsWidget : public UExtensionPointEntryWidget
{
public:
	float                                        HighlightDelay;                                    // 0x2C0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27DC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UProgressBar*                          ProgressBar_HealthFeedback;                        // 0x2C8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProgressBar*                          ProgressBar_Health;                                // 0x2D0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProgressBar*                          ProgressBar_HealthHighlight;                       // 0x2D8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProgressBar*                          ProgressBar_HealthProvisionalDamage;               // 0x2E0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                      Text_BossName;                                     // 0x2E8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHealthComponent*                      HealthComponent;                                   // 0x2F0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAbilitySystemComponent*               AbilitySystemComponent;                            // 0x2F8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ABaseAICharacter>       BossAssigned;                                      // 0x300(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27DD[0xC8];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBossStatsWidget* GetDefaultObj();

	void UpdateCachedCharacterInfo(class APawn* PNewPawn);
	void UnassignBoss();
	void PlayTextDamageAnimation(float Damage, const struct FSlateColor& Color);
	void OnHealthProvisionalDamageChange(float FOldHealth, float FNewHealth);
	void OnHealthChange(float FOldHealth, float FNewHealth);
	void OnBossTakeDamage(class AActor* DamagedActor, float Damage, const struct FGameplayTagContainer& AllAssetTags, class AActor* InstigatedBy, class AActor* DamageCauser, enum class EHexAttackTypeEffectivenes AttackTypeEffectiveness);
	void OnBossDead(class AActor* InstigatorActor, struct FGameplayTagContainer& InstigatorTags, bool bDeathWasObserved);
	void OnBossActorEndPlay(class AActor* Actor, enum class EEndPlayReason EndPlayReason);
	void MoveProvisionalDamageBar(float CurrentHealth, float ProvisionalDamage);
	void BP_OnBossAssigned();
	void AssignBoss(class ABaseAICharacter* BossCharacter);
};

// 0x50 (0x308 - 0x2B8)
// Class LOTF2.BreadcrumbsLabel
class UBreadcrumbsLabel : public ULOTF2UserWidget
{
public:
	uint8                                        Pad_27E0[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UButton*                               BackgroundButton;                                  // 0x2C8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            Breadcrumb_Name;                                   // 0x2D0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Image_Arrow;                                       // 0x2D8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      SetActive_Animation;                               // 0x2E0(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      SetInactive_Animation;                             // 0x2E8(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      GlowOn_Animation;                                  // 0x2F0(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      GlowOff_Animation;                                 // 0x2F8(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27E1[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBreadcrumbsLabel* GetDefaultObj();

	void SetText(class FText& Text);
	void SetAsActive(bool bIsActive, bool bRenderGlow);
	void SetArrowVisible(bool bVisible);
	void OnFocusOut();
	void OnFocusIn();
	void OnBreadcrumbButtonClicked();
	void Init(enum class ECharCreationMode ID, class FText& Text, bool ArrowVisible);
};

// 0x60 (0x318 - 0x2B8)
// Class LOTF2.BreadcrumbsWidget
class UBreadcrumbsWidget : public ULOTF2UserWidget
{
public:
	FMulticastInlineDelegateProperty_            OnStepSelected;                                    // 0x2B8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class FText                                  Home_Text;                                         // 0x2C8(0x18)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	class UHorizontalBox*                        Breadcrumbs_Container;                             // 0x2E0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInputActionImage*                     Controller_Prev;                                   // 0x2E8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInputActionImage*                     Controller_Next;                                   // 0x2F0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UBreadcrumbsLabel>         BreadcrumbsLabelClass;                             // 0x2F8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27E3[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UBreadcrumbsLabel*>             Breadcrumbs;                                       // 0x308(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UBreadcrumbsWidget* GetDefaultObj();

	void SetActiveBreadcrumb(enum class ECharCreationMode breadcrumb);
	void Clear();
	void AddBreadcrumb(enum class ECharCreationMode ID, class FText& Text);
};

// 0x8 (0x98 - 0x90)
// Class LOTF2.BTCompositeNode_Utility
class UBTCompositeNode_Utility : public UBTCompositeNode
{
public:
	bool                                         bAllowRepeat;                                      // 0x90(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27E4[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTCompositeNode_Utility* GetDefaultObj();

};

// 0x8 (0x70 - 0x68)
// Class LOTF2.BTDecoratorUtilityBase
class UBTDecoratorUtilityBase : public UBTDecorator
{
public:
	bool                                         bIsGatingConsideration;                            // 0x68(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseAutoGeneratedNodeName;                         // 0x69(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27E6[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTDecoratorUtilityBase* GetDefaultObj();

	float ScoreUtilityFunctionBP(class APawn* Pawn);
};

// 0x8 (0x70 - 0x68)
// Class LOTF2.BTDecorator_GameplayEvent
class UBTDecorator_GameplayEvent : public UBTDecorator
{
public:
	struct FGameplayTag                          GameplayEvent;                                     // 0x68(0x8)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UBTDecorator_GameplayEvent* GetDefaultObj();

};

// 0x40 (0xB0 - 0x70)
// Class LOTF2.BTDecorator_HexAngleToTarget
class UBTDecorator_HexAngleToTarget : public UBTDecoratorUtilityBase
{
public:
	enum class EAngleCheckMode                   AngleCheckMode;                                    // 0x70(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27E7[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AngleToCheck;                                      // 0x74(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EeAIDirection                     Direction;                                         // 0x78(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27E8[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MinAngleRange;                                     // 0x7C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxAngleRange;                                     // 0x80(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27E9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                BlackboardKey;                                     // 0x88(0x28)(Edit, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UBTDecorator_HexAngleToTarget* GetDefaultObj();

};

// 0x8 (0x70 - 0x68)
// Class LOTF2.BTDecorator_HexCanInterruptWithAction
class UBTDecorator_HexCanInterruptWithAction : public UBTDecorator
{
public:
	struct FGameplayTag                          ActionToCheck;                                     // 0x68(0x8)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UBTDecorator_HexCanInterruptWithAction* GetDefaultObj();

};

// 0x48 (0xB0 - 0x68)
// Class LOTF2.BTDecorator_HexCanReactWithAttributeProbability
class UBTDecorator_HexCanReactWithAttributeProbability : public UBTDecorator
{
public:
	struct FGameplayAttribute                    Attribute;                                         // 0x68(0x38)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          AnimationTag;                                      // 0xA0(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseTagCheck;                                      // 0xA8(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         ShowDebug;                                         // 0xA9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27EA[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTDecorator_HexCanReactWithAttributeProbability* GetDefaultObj();

};

// 0x38 (0xE8 - 0xB0)
// Class LOTF2.BTDecorator_HexCanReactUsingProbabilityAttribute
class UBTDecorator_HexCanReactUsingProbabilityAttribute : public UBTDecorator_HexCanReactWithAttributeProbability
{
public:
	struct FGameplayAttribute                    ProbabilityAttribute;                              // 0xB0(0x38)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UBTDecorator_HexCanReactUsingProbabilityAttribute* GetDefaultObj();

};

// 0x0 (0x68 - 0x68)
// Class LOTF2.BTDecorator_HexCanRunWhileSpectating
class UBTDecorator_HexCanRunWhileSpectating : public UBTDecorator
{
public:

	static class UClass* StaticClass();
	static class UBTDecorator_HexCanRunWhileSpectating* GetDefaultObj();

};

// 0x28 (0x90 - 0x68)
// Class LOTF2.BTDecorator_HexIsInState
class UBTDecorator_HexIsInState : public UBTDecorator
{
public:
	enum class EBTBlackboardRestart              NotifyObserver;                                    // 0x68(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27EB[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 StatesToCheck;                                     // 0x70(0x20)(Edit, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UBTDecorator_HexIsInState* GetDefaultObj();

	void OnStateEnd(struct FGameplayTagContainer& StateTags, class UHexStateTreeComponent* OwnerStateTreeComponent);
	void OnStateBegin(struct FGameplayTagContainer& StateTags, class UHexStateTreeComponent* OwnerStateTreeComponent);
};

// 0x30 (0x98 - 0x68)
// Class LOTF2.BTDecorator_HexCheckGameplayTagOnActor
class UBTDecorator_HexCheckGameplayTagOnActor : public UBTDecorator
{
public:
	struct FBlackboardKeySelector                ActorToCheck;                                      // 0x68(0x28)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTag                          GameplayTag;                                       // 0x90(0x8)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UBTDecorator_HexCheckGameplayTagOnActor* GetDefaultObj();

};

// 0x0 (0x70 - 0x70)
// Class LOTF2.BTDecorator_HexCheckInsideLeashingVolume
class UBTDecorator_HexCheckInsideLeashingVolume : public UBTDecoratorUtilityBase
{
public:

	static class UClass* StaticClass();
	static class UBTDecorator_HexCheckInsideLeashingVolume* GetDefaultObj();

};

// 0x38 (0xA0 - 0x68)
// Class LOTF2.BTDecorator_HexCheckProvisionalHealth
class UBTDecorator_HexCheckProvisionalHealth : public UBTDecorator
{
public:
	struct FBlackboardKeySelector                TargetBBKey;                                       // 0x68(0x28)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	double                                       ValueToCheck;                                      // 0x90(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseMaxHealth;                                     // 0x98(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27EC[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTDecorator_HexCheckProvisionalHealth* GetDefaultObj();

};

// 0x8 (0x70 - 0x68)
// Class LOTF2.BTDecorator_HexCheckReactionAction
class UBTDecorator_HexCheckReactionAction : public UBTDecorator
{
public:
	enum class EReactionType                     ReactionType;                                      // 0x68(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ESensesActivationReaction         ReactionToCheck;                                   // 0x69(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27ED[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTDecorator_HexCheckReactionAction* GetDefaultObj();

};

// 0x8 (0x70 - 0x68)
// Class LOTF2.BTDecorator_HexCombatRole
class UBTDecorator_HexCombatRole : public UBTDecorator
{
public:
	enum class ECombatRole                       DesiredCombatRole;                                 // 0x68(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27EE[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTDecorator_HexCombatRole* GetDefaultObj();

};

// 0x60 (0xC8 - 0x68)
// Class LOTF2.BTDecorator_HexCompareBBEntries
class UBTDecorator_HexCompareBBEntries : public UBTDecorator
{
public:
	enum class EHexBlackBoardEntryComparison     Operator;                                          // 0x68(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27EF[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                BlackboardKeyA;                                    // 0x70(0x28)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                BlackboardKeyB;                                    // 0x98(0x28)(Edit, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_27F0[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTDecorator_HexCompareBBEntries* GetDefaultObj();

};

// 0x20 (0x88 - 0x68)
// Class LOTF2.BTDecorator_HexDirectionalDistanceAround
class UBTDecorator_HexDirectionalDistanceAround : public UBTDecorator
{
public:
	enum class EBTBlackboardRestart              NotifyObserver;                                    // 0x68(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27F1[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        DirectionToCheck;                                  // 0x6C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseDefaultObstacleMask;                           // 0x70(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27F2[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ObstaclesToConsider;                               // 0x74(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EDirectionValidationMode          DirectionValidationMode;                           // 0x78(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EDirectionCheckMode               DirectionCheckMode;                                // 0x79(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27F3[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DistanceToCheck_Meters;                            // 0x7C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MovementTimeToCheck_Seconds;                       // 0x80(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseWalkingSpeed;                                  // 0x84(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEnableVisLogDebug;                                // 0x85(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEnableDistanceToCheckField;                       // 0x86(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bEnableTimeToCheckField;                           // 0x87(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UBTDecorator_HexDirectionalDistanceAround* GetDefaultObj();

	void OnNewDirectionDistanceInfoPushed(class UHexEnvironmentalAwarenessComponent* EnvAwarenessComponent);
};

// 0x38 (0xD8 - 0xA0)
// Class LOTF2.BTDecorator_HexDistanceToCombo
class UBTDecorator_HexDistanceToCombo : public UBTDecorator_BlueprintBase
{
public:
	float                                        MinDistance;                                       // 0xA0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          ComboGameplayTag;                                  // 0xA4(0x8)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27F4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                Target;                                            // 0xB0(0x28)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UBTDecorator_HexDistanceToCombo* GetDefaultObj();

};

// 0x68 (0xD8 - 0x70)
// Class LOTF2.BTDecorator_HexDistanceToTarget
class UBTDecorator_HexDistanceToTarget : public UBTDecoratorUtilityBase
{
public:
	float                                        DistanceNear;                                      // 0x70(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27F5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                DistanceBBKey;                                     // 0x78(0x28)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FAIBehaviorNodeProperty               DistanceProperty;                                  // 0xA0(0xC)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_27F6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                TargetBBKey;                                       // 0xB0(0x28)(Edit, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UBTDecorator_HexDistanceToTarget* GetDefaultObj();

};

// 0x1A8 (0x210 - 0x68)
// Class LOTF2.BTDecorator_HexFindAllies
class UBTDecorator_HexFindAllies : public UBTDecorator
{
public:
	float                                        CheckForAbortRate;                                 // 0x68(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_27F7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                ActorToSearchAround;                               // 0x70(0x28)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	float                                        SearchRadius;                                      // 0x98(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MinEnemiesFound;                                   // 0x9C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<enum class EHexAIFactions>            FactionsToMatch;                                   // 0xA0(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	enum class ETeamAttitude                     Attitude;                                          // 0xB0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_27F8[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                AttitudeActor;                                     // 0xB8(0x28)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FGameplayTagQuery                     TagQueryToMatchOnAI;                               // 0xE0(0x48)(Edit, NativeAccessSpecifierPublic)
	enum class EHexAttributeOperation            AttributeOperationType;                            // 0x128(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_27F9[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayAttribute                    AttributeToCheck;                                  // 0x130(0x38)(Edit, BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayAttribute                    NumeratorAttributeToCheck;                         // 0x168(0x38)(Edit, BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayAttribute                    DenominatorAttributeToCheck;                       // 0x1A0(0x38)(Edit, BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EArithmeticKeyOperation           Operation;                                         // 0x1D8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_27FA[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RequiredAttributeValue;                            // 0x1DC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RequiredAttributesRatio;                           // 0x1E0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bStoreClosestAllyInBBK;                            // 0x1E4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_27FB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                ClosestAllyFoundKey;                               // 0x1E8(0x28)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UBTDecorator_HexFindAllies* GetDefaultObj();

};

// 0x78 (0x108 - 0x90)
// Class LOTF2.BTDecorator_HexGetAttributeRatio
class UBTDecorator_HexGetAttributeRatio : public UBTDecorator_BlackboardBase
{
public:
	struct FGameplayAttribute                    AttributeA_Numerator;                              // 0x90(0x38)(Edit, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayAttribute                    AttributeB_Denominator;                            // 0xC8(0x38)(Edit, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RatioRequired;                                     // 0x100(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseAutoGeneratedNodeName;                         // 0x104(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27FC[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTDecorator_HexGetAttributeRatio* GetDefaultObj();

};

// 0x0 (0x108 - 0x108)
// Class LOTF2.BTDecorator_HexGetHPRatio
class UBTDecorator_HexGetHPRatio : public UBTDecorator_HexGetAttributeRatio
{
public:

	static class UClass* StaticClass();
	static class UBTDecorator_HexGetHPRatio* GetDefaultObj();

};

// 0x8 (0x70 - 0x68)
// Class LOTF2.BTDecorator_HexHasAIBehavior
class UBTDecorator_HexHasAIBehavior : public UBTDecorator
{
public:
	struct FGameplayTag                          BehaviorTag;                                       // 0x68(0x8)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UBTDecorator_HexHasAIBehavior* GetDefaultObj();

};

// 0x8 (0x70 - 0x68)
// Class LOTF2.BTDecorator_HexHasAnimationWithTag
class UBTDecorator_HexHasAnimationWithTag : public UBTDecorator
{
public:
	struct FGameplayTag                          AnimationTag;                                      // 0x68(0x8)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UBTDecorator_HexHasAnimationWithTag* GetDefaultObj();

};

// 0x10 (0xB0 - 0xA0)
// Class LOTF2.BTDecorator_HexHasGameplayEffectStackCountBase
class UBTDecorator_HexHasGameplayEffectStackCountBase : public UBTDecorator_BlueprintBase
{
public:
	struct FGameplayTag                          GameplayEffectTag;                                 // 0xA0(0x8)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumRequiredStacks;                                 // 0xA8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27FD[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTDecorator_HexHasGameplayEffectStackCountBase* GetDefaultObj();

};

// 0x0 (0x68 - 0x68)
// Class LOTF2.BTDecorator_HexHasReachedPatrolEnd
class UBTDecorator_HexHasReachedPatrolEnd : public UBTDecorator
{
public:

	static class UClass* StaticClass();
	static class UBTDecorator_HexHasReachedPatrolEnd* GetDefaultObj();

};

// 0x30 (0x98 - 0x68)
// Class LOTF2.BTDecorator_HexIsCharacterRunning
class UBTDecorator_HexIsCharacterRunning : public UBTDecorator
{
public:
	struct FBlackboardKeySelector                ActorToCheck;                                      // 0x68(0x28)(Edit, NativeAccessSpecifierPublic)
	float                                        Tolerance;                                         // 0x90(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_27FE[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTDecorator_HexIsCharacterRunning* GetDefaultObj();

};

// 0x0 (0x68 - 0x68)
// Class LOTF2.BTDecorator_HexIsPlayingMontage
class UBTDecorator_HexIsPlayingMontage : public UBTDecorator
{
public:

	static class UClass* StaticClass();
	static class UBTDecorator_HexIsPlayingMontage* GetDefaultObj();

};

// 0x28 (0x90 - 0x68)
// Class LOTF2.BTDecorator_HexIsTargetPlayerUsingLantern
class UBTDecorator_HexIsTargetPlayerUsingLantern : public UBTDecorator
{
public:
	struct FBlackboardKeySelector                TargetActor;                                       // 0x68(0x28)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UBTDecorator_HexIsTargetPlayerUsingLantern* GetDefaultObj();

};

// 0x58 (0xC0 - 0x68)
// Class LOTF2.BTDecorator_HexLineOfSight
class UBTDecorator_HexLineOfSight : public UBTDecorator
{
public:
	struct FBlackboardKeySelector                TargetBBKey;                                       // 0x68(0x28)(Edit, Protected, NativeAccessSpecifierProtected)
	TArray<struct FHexAILineOfSightParams>       RayRequests;                                       // 0x90(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bAllRayRequestsRequired;                           // 0xA0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27FF[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        RequiredRayRequestsToPass;                         // 0xA4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CheckForLOSRate;                                   // 0xA8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEnableDebug;                                      // 0xAC(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2800[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DebugTime;                                         // 0xB0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2801[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTDecorator_HexLineOfSight* GetDefaultObj();

};

// 0x38 (0xA0 - 0x68)
// Class LOTF2.BTDecorator_HexNavLink
class UBTDecorator_HexNavLink : public UBTDecorator
{
public:
	struct FBlackboardKeySelector                NavLinkBlackboardKey;                              // 0x68(0x28)(Edit, NativeAccessSpecifierPublic)
	enum class EHexNavLinkProperty               PropertyToCheck;                                   // 0x90(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EHexNavLinkDirection              DirectionRequired;                                 // 0x91(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EHexNavLinkDistanceCheckOperationType OperationType;                                     // 0x92(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2802[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Min;                                               // 0x94(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Max;                                               // 0x98(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2803[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTDecorator_HexNavLink* GetDefaultObj();

};

// 0x10 (0x78 - 0x68)
// Class LOTF2.BTDecorator_HexPushToKillOrFall
class UBTDecorator_HexPushToKillOrFall : public UBTDecorator
{
public:
	float                                        MetersDisplacedByPush;                             // 0x68(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        MetersToConsiderFall;                              // 0x6C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UObject>                   KillingAreaBP;                                     // 0x70(0x8)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UBTDecorator_HexPushToKillOrFall* GetDefaultObj();

};

// 0x10 (0x78 - 0x68)
// Class LOTF2.BTDecorator_HexRandom_Float
class UBTDecorator_HexRandom_Float : public UBTDecorator
{
public:
	float                                        Probability;                                       // 0x68(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RandRangeMin;                                      // 0x6C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RandRangeMax;                                      // 0x70(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2804[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTDecorator_HexRandom_Float* GetDefaultObj();

};

// 0x28 (0x90 - 0x68)
// Class LOTF2.BTDecorator_HexSameRealm
class UBTDecorator_HexSameRealm : public UBTDecorator
{
public:
	struct FBlackboardKeySelector                TargetActor;                                       // 0x68(0x28)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UBTDecorator_HexSameRealm* GetDefaultObj();

};

// 0x8 (0x80 - 0x78)
// Class LOTF2.BTDecorator_HexSetTagCooldown
class UBTDecorator_HexSetTagCooldown : public UBTDecorator_SetTagCooldown
{
public:
	float                                        MinRandomCooldownDurationDeviation;                // 0x78(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxRandomCooldownDurationDeviation;                // 0x7C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UBTDecorator_HexSetTagCooldown* GetDefaultObj();

};

// 0x10 (0x88 - 0x78)
// Class LOTF2.BTDecorator_HexTagCooldown
class UBTDecorator_HexTagCooldown : public UBTDecorator_TagCooldown
{
public:
	float                                        MinRandomCooldownDurationDeviation;                // 0x78(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxRandomCooldownDurationDeviation;                // 0x7C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ECooldownComparison               CooldownComparisonMethod;                          // 0x80(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2805[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ComparisonValue;                                   // 0x84(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UBTDecorator_HexTagCooldown* GetDefaultObj();

};

// 0x30 (0xA0 - 0x70)
// Class LOTF2.BTDecorator_HexTimeLimit
class UBTDecorator_HexTimeLimit : public UBTDecorator_TimeLimit
{
public:
	struct FBlackboardKeySelector                TimeLimitBlackboardKey;                            // 0x70(0x28)(Edit, NativeAccessSpecifierPublic)
	bool                                         bClearTimeLimitBlackboardEntryOnExit;              // 0x98(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2806[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTDecorator_HexTimeLimit* GetDefaultObj();

};

// 0x0 (0x68 - 0x68)
// Class LOTF2.BTDecorator_HexUseDefaultAttackReactions
class UBTDecorator_HexUseDefaultAttackReactions : public UBTDecorator
{
public:

	static class UClass* StaticClass();
	static class UBTDecorator_HexUseDefaultAttackReactions* GetDefaultObj();

};

// 0x0 (0x68 - 0x68)
// Class LOTF2.BTDecorator_HexUseDefaultDestroyDestructibleBehavior
class UBTDecorator_HexUseDefaultDestroyDestructibleBehavior : public UBTDecorator
{
public:

	static class UClass* StaticClass();
	static class UBTDecorator_HexUseDefaultDestroyDestructibleBehavior* GetDefaultObj();

};

// 0x0 (0x68 - 0x68)
// Class LOTF2.BTDecorator_HexUseDefaultSpectatorBehavior
class UBTDecorator_HexUseDefaultSpectatorBehavior : public UBTDecorator
{
public:

	static class UClass* StaticClass();
	static class UBTDecorator_HexUseDefaultSpectatorBehavior* GetDefaultObj();

};

// 0xA8 (0x118 - 0x70)
// Class LOTF2.BTDecorator_HexUtilitySample
class UBTDecorator_HexUtilitySample : public UBTDecoratorUtilityBase
{
public:
	class UCurveFloat*                           Curve;                                             // 0x70(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRuntimeFloatCurve                    UtilityCurve;                                      // 0x78(0x88)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	enum class EeSamplingConsiderationParam      SamplingParam;                                     // 0x100(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2807[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FStepsToProbability>           ProbabilitiesBySteps;                              // 0x108(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UBTDecorator_HexUtilitySample* GetDefaultObj();

};

// 0x8 (0x78 - 0x70)
// Class LOTF2.BTDecorator_HexUtilityScore
class UBTDecorator_HexUtilityScore : public UBTDecoratorUtilityBase
{
public:
	float                                        Score;                                             // 0x70(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2808[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTDecorator_HexUtilityScore* GetDefaultObj();

};

// 0x38 (0xA8 - 0x70)
// Class LOTF2.BTDecorator_HexVerticalDistance
class UBTDecorator_HexVerticalDistance : public UBTDecoratorUtilityBase
{
public:
	struct FAIBehaviorNodeProperty               VerticalDistanceProperty;                          // 0x70(0xC)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2809[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                TargetBBKey;                                       // 0x80(0x28)(Edit, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UBTDecorator_HexVerticalDistance* GetDefaultObj();

};

// 0x0 (0x68 - 0x68)
// Class LOTF2.BTDecorator_HexWaitFirstEncounterShouldRun
class UBTDecorator_HexWaitFirstEncounterShouldRun : public UBTDecorator
{
public:

	static class UClass* StaticClass();
	static class UBTDecorator_HexWaitFirstEncounterShouldRun* GetDefaultObj();

};

// 0x0 (0x68 - 0x68)
// Class LOTF2.BTDecorator_OnlyOnce
class UBTDecorator_OnlyOnce : public UBTDecorator
{
public:

	static class UClass* StaticClass();
	static class UBTDecorator_OnlyOnce* GetDefaultObj();

};

// 0x10 (0x80 - 0x70)
// Class LOTF2.BTDecorator_UtilityConsideration
class UBTDecorator_UtilityConsideration : public UBTDecoratorUtilityBase
{
public:
	class UAIConsideration*                      Consideration;                                     // 0x70(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DefaultScore;                                      // 0x78(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_280A[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTDecorator_UtilityConsideration* GetDefaultObj();

};

// 0x78 (0x110 - 0x98)
// Class LOTF2.BTService_HexHandleReturnHomeFocus
class UBTService_HexHandleReturnHomeFocus : public UBTService_BlueprintBase
{
public:
	struct FBlackboardKeySelector                GoalLocation;                                      // 0x98(0x28)(Edit, NativeAccessSpecifierPublic)
	struct FBlackboardKeySelector                TargetToForget;                                    // 0xC0(0x28)(Edit, NativeAccessSpecifierPublic)
	enum class EHexConditionMode                 FocusConditionMode;                                // 0xE8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_280B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TimeFocusingOnTarget;                              // 0xEC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WalkedDistancePercentage;                          // 0xF0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EHexConditionMode                 FirstWindowConditionMode;                          // 0xF4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_280C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FirstWindowTime;                                   // 0xF8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FirstWindowWalkedDistancePercentage;               // 0xFC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FirstWindowSenses;                                 // 0x100(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SecondWindowSenses;                                // 0x104(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_280D[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTService_HexHandleReturnHomeFocus* GetDefaultObj();

};

// 0x70 (0xE0 - 0x70)
// Class LOTF2.BTService_HexIsTargetReachable
class UBTService_HexIsTargetReachable : public UBTService
{
public:
	struct FBlackboardKeySelector                TargetBBKey;                                       // 0x70(0x28)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                OutOfReachBBKey;                                   // 0x98(0x28)(Edit, Protected, NativeAccessSpecifierProtected)
	float                                        OutOfReachTimeThreshold;                           // 0xC0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEnableDebug;                                      // 0xC4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_280E[0xB];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UHexBaseBlackboardComponent*           BBComponent;                                       // 0xD0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_280F[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTService_HexIsTargetReachable* GetDefaultObj();

};

// 0x18 (0xB0 - 0x98)
// Class LOTF2.BTService_HexLockAggroTarget
class UBTService_HexLockAggroTarget : public UBTService_BlueprintBase
{
public:
	bool                                         bAllowTargetSwapOnDeath;                           // 0x98(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2811[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAITargetSystemComponent*              OwnerTargetSystemComponent;                        // 0xA0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHealthComponent*                      CurrentTargetHealthComponent;                      // 0xA8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UBTService_HexLockAggroTarget* GetDefaultObj();

	void OnTargetChange(class AActor* NewTarget);
	void OnCurrentTargetDeath(class AActor* InstigatorActor, struct FGameplayTagContainer& InstigatorTags, bool bDeathWasObserved);
};

// 0x30 (0xC8 - 0x98)
// Class LOTF2.BTService_HexOverrideFocus
class UBTService_HexOverrideFocus : public UBTService_BlueprintBase
{
public:
	struct FBlackboardKeySelector                TargetToFocusOn;                                   // 0x98(0x28)(Edit, NativeAccessSpecifierPublic)
	enum class EHexOverrideFocusMode             FocusOverrideMode;                                 // 0xC0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverrideLookAt;                                   // 0xC1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2812[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTService_HexOverrideFocus* GetDefaultObj();

};

// 0x58 (0xC8 - 0x70)
// Class LOTF2.BTService_HexPathDistanceToTarget
class UBTService_HexPathDistanceToTarget : public UBTService
{
public:
	struct FBlackboardKeySelector                TargetLocationKey;                                 // 0x70(0x28)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                PathDistanceKey;                                   // 0x98(0x28)(Edit, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2813[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTService_HexPathDistanceToTarget* GetDefaultObj();

};

// 0x0 (0x70 - 0x70)
// Class LOTF2.BTService_HexResetPatrolOnExit
class UBTService_HexResetPatrolOnExit : public UBTService
{
public:

	static class UClass* StaticClass();
	static class UBTService_HexResetPatrolOnExit* GetDefaultObj();

};

// 0x10 (0x80 - 0x70)
// Class LOTF2.BTService_HexUmbralAggro
class UBTService_HexUmbralAggro : public UBTService
{
public:
	TSubclassOf<class UGameplayEffect>           AggroBuildupGameplayEffectClass;                   // 0x70(0x8)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameplayEffect>           AttackDecisionGameplayEffectClass;                 // 0x78(0x8)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UBTService_HexUmbralAggro* GetDefaultObj();

};

// 0x8 (0x78 - 0x70)
// Class LOTF2.BTTaskNode_CharacterAction
class UBTTaskNode_CharacterAction : public UBTTaskNode
{
public:
	class UCharacterAction*                      CharacterAction;                                   // 0x70(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UBTTaskNode_CharacterAction* GetDefaultObj();

	void OnInterruptionTagReceived();
	void OnActionFinished(enum class EeAnathemaAIActionState ActionState);
};

// 0x0 (0x78 - 0x78)
// Class LOTF2.BTTask_AnathemaActionApproachPlayer
class UBTTask_AnathemaActionApproachPlayer : public UBTTaskNode_CharacterAction
{
public:

	static class UClass* StaticClass();
	static class UBTTask_AnathemaActionApproachPlayer* GetDefaultObj();

};

// 0x0 (0x78 - 0x78)
// Class LOTF2.BTTask_AnathemaActionAttack
class UBTTask_AnathemaActionAttack : public UBTTaskNode_CharacterAction
{
public:

	static class UClass* StaticClass();
	static class UBTTask_AnathemaActionAttack* GetDefaultObj();

};

// 0x0 (0x78 - 0x78)
// Class LOTF2.BTTask_AnathemaActionCombo
class UBTTask_AnathemaActionCombo : public UBTTaskNode_CharacterAction
{
public:

	static class UClass* StaticClass();
	static class UBTTask_AnathemaActionCombo* GetDefaultObj();

};

// 0x0 (0x78 - 0x78)
// Class LOTF2.BTTask_AnathemaActionLeavePlayer
class UBTTask_AnathemaActionLeavePlayer : public UBTTaskNode_CharacterAction
{
public:

	static class UClass* StaticClass();
	static class UBTTask_AnathemaActionLeavePlayer* GetDefaultObj();

};

// 0x0 (0x78 - 0x78)
// Class LOTF2.BTTask_AnathemaActionMoveSideways
class UBTTask_AnathemaActionMoveSideways : public UBTTaskNode_CharacterAction
{
public:

	static class UClass* StaticClass();
	static class UBTTask_AnathemaActionMoveSideways* GetDefaultObj();

};

// 0x0 (0x78 - 0x78)
// Class LOTF2.BTTask_AnathemaActionSwitchContext
class UBTTask_AnathemaActionSwitchContext : public UBTTaskNode_CharacterAction
{
public:

	static class UClass* StaticClass();
	static class UBTTask_AnathemaActionSwitchContext* GetDefaultObj();

};

// 0x8 (0x78 - 0x70)
// Class LOTF2.BTTaskNode_AnathemaRunInterruptBehavior
class UBTTaskNode_AnathemaRunInterruptBehavior : public UBTTaskNode
{
public:
	class UBehaviorTree*                         BTAsset;                                           // 0x70(0x8)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UBTTaskNode_AnathemaRunInterruptBehavior* GetDefaultObj();

};

// 0x0 (0x78 - 0x78)
// Class LOTF2.BTTask_AnathemaRunUtilityBehavior
class UBTTask_AnathemaRunUtilityBehavior : public UBTTask_RunBehavior
{
public:

	static class UClass* StaticClass();
	static class UBTTask_AnathemaRunUtilityBehavior* GetDefaultObj();

};

// 0x0 (0x70 - 0x70)
// Class LOTF2.BTTaskNode_AnathemaSelectNextPatrolPoint
class UBTTaskNode_AnathemaSelectNextPatrolPoint : public UBTTaskNode
{
public:

	static class UClass* StaticClass();
	static class UBTTaskNode_AnathemaSelectNextPatrolPoint* GetDefaultObj();

};

// 0x0 (0x70 - 0x70)
// Class LOTF2.BTTaskNode_AnathemaUpdatePatrolAction
class UBTTaskNode_AnathemaUpdatePatrolAction : public UBTTaskNode
{
public:

	static class UClass* StaticClass();
	static class UBTTaskNode_AnathemaUpdatePatrolAction* GetDefaultObj();

};

// 0x48 (0xE0 - 0x98)
// Class LOTF2.BTTask_HexCharacterAction
class UBTTask_HexCharacterAction : public UBTTask_BlackboardBase
{
public:
	float                                        Timeout;                                           // 0x98(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TimeoutRandomDeviation;                            // 0x9C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2814[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UGameplayAbility>          TaskAbility;                                       // 0xA8(0x8)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHasAbilityFinished;                               // 0xB0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseAutoGeneratedNodeName;                         // 0xB1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2815[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bTreatCancelationAsFailure;                        // 0xB3(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bDontWaitOnActionFailure;                          // 0xB4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanWalkOffLedges;                                 // 0xB5(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCheckForObstacles;                                // 0xB6(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2816[0x29];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTTask_HexCharacterAction* GetDefaultObj();

	void OnTriggeredAbilityEnded(struct FAbilityEndedData& AbilityEndedData);
	void OnAnyAbilityEnded(struct FAbilityEndedData& AbilityEndedData);
};

// 0x8 (0xE8 - 0xE0)
// Class LOTF2.BTTask_HexMovementAction
class UBTTask_HexMovementAction : public UBTTask_HexCharacterAction
{
public:
	bool                                         bShouldGuard;                                      // 0xE0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldWalk;                                       // 0xE1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2817[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTTask_HexMovementAction* GetDefaultObj();

};

// 0x38 (0x120 - 0xE8)
// Class LOTF2.BTTask_HexApproachTarget
class UBTTask_HexApproachTarget : public UBTTask_HexMovementAction
{
public:
	float                                        DistanceToReach;                                   // 0xE8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          DistanceToReachConfigVar;                          // 0xEC(0x8)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DistanceToReachRandomDeviation;                    // 0xF4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShouldPatrol;                                     // 0xF8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2818[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EApproachMode                     ApproachMode;                                      // 0xFC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShouldCalculatePath;                              // 0x100(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2819[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          AnimationTag;                                      // 0x104(0x8)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_281A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          MontageToUse;                                      // 0x110(0x8)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CustomRotationRate;                                // 0x118(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bOverrideRotationRate;                             // 0x11C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bWarnIfMontageNotFound;                            // 0x11D(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_281B[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTTask_HexApproachTarget* GetDefaultObj();

};

// 0x20 (0x100 - 0xE0)
// Class LOTF2.BTTask_HexApproachTargetMontage
class UBTTask_HexApproachTargetMontage : public UBTTask_HexCharacterAction
{
public:
	float                                        DistanceToReach;                                   // 0xE0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShouldCalculatePath;                              // 0xE4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_281C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          AnimationTag;                                      // 0xE8(0x8)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          MontageToUse;                                      // 0xF0(0x8)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CustomRotationRate;                                // 0xF8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bOverrideRotationRate;                             // 0xFC(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_281D[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTTask_HexApproachTargetMontage* GetDefaultObj();

};

// 0x18 (0xF8 - 0xE0)
// Class LOTF2.BTTask_HexPlayMontage
class UBTTask_HexPlayMontage : public UBTTask_HexCharacterAction
{
public:
	bool                                         bUseDistanceAbortCondition;                        // 0xE0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_281E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AbortDistance;                                     // 0xE4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseAngleAbortCondition;                           // 0xE8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_281F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AbortAngle;                                        // 0xEC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bForceDisableAutoBlendOut;                         // 0xF0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2820[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTTask_HexPlayMontage* GetDefaultObj();

};

// 0x20 (0x118 - 0xF8)
// Class LOTF2.BTTask_HexAttack
class UBTTask_HexAttack : public UBTTask_HexPlayMontage
{
public:
	struct FGameplayTag                          AnimationTag;                                      // 0xF8(0x8)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bForceNoDeflect;                                   // 0x100(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2821[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          AnimMontage;                                       // 0x108(0x8)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2822[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTTask_HexAttack* GetDefaultObj();

};

// 0x0 (0x118 - 0x118)
// Class LOTF2.BTTask_HexCombo
class UBTTask_HexCombo : public UBTTask_HexAttack
{
public:

	static class UClass* StaticClass();
	static class UBTTask_HexCombo* GetDefaultObj();

};

// 0x8 (0x100 - 0xF8)
// Class LOTF2.BTTask_HexDodge
class UBTTask_HexDodge : public UBTTask_HexPlayMontage
{
public:
	enum class EAIDodgeDirection                 DodgeDirection;                                    // 0xF8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2823[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTTask_HexDodge* GetDefaultObj();

};

// 0x0 (0x118 - 0x118)
// Class LOTF2.BTTask_HexEmote
class UBTTask_HexEmote : public UBTTask_HexAttack
{
public:

	static class UClass* StaticClass();
	static class UBTTask_HexEmote* GetDefaultObj();

};

// 0x28 (0x120 - 0xF8)
// Class LOTF2.BTTask_HexFlyingMovementAction
class UBTTask_HexFlyingMovementAction : public UBTTask_HexPlayMontage
{
public:
	struct FGameplayTag                          MontageToPlayTag;                                  // 0xF8(0x8)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxFlightDistance_Meters;                          // 0x100(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinDistanceToTarget_Meters;                        // 0x104(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bInverseDistanceToTarget;                          // 0x108(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2824[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MinDistanceToGround_Meters;                        // 0x10C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bInverseDistanceToGround;                          // 0x110(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseWalkingSpeed;                                  // 0x111(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2825[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SpeedMultiplier;                                   // 0x114(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EMovementMode                     OnStartMovementMode;                               // 0x118(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EMovementMode                     OnEndMovementMode;                                 // 0x119(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bRestorePreviousMovementMode;                      // 0x11A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEnableVisLogDebug;                                // 0x11B(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEnableMaxDistanceFlight;                          // 0x11C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEnableDistanceToTarget;                           // 0x11D(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bGroundDetectionEnabled;                           // 0x11E(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2826[0x1];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTTask_HexFlyingMovementAction* GetDefaultObj();

};

// 0x20 (0x140 - 0x120)
// Class LOTF2.BTTask_HexFlyingMovement_Directional
class UBTTask_HexFlyingMovement_Directional : public UBTTask_HexFlyingMovementAction
{
public:
	struct FVector                               FlyingDirection;                                   // 0x120(0x18)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ERelativeFlightMovementType       RelativeLocationFlightMode;                        // 0x138(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2827[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTTask_HexFlyingMovement_Directional* GetDefaultObj();

};

// 0x8 (0x128 - 0x120)
// Class LOTF2.BTTask_HexFlyingMovement_Targeted
class UBTTask_HexFlyingMovement_Targeted : public UBTTask_HexFlyingMovementAction
{
public:
	bool                                         bKeepAltitudeTowardsTarget;                        // 0x120(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2828[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTTask_HexFlyingMovement_Targeted* GetDefaultObj();

};

// 0x8 (0x120 - 0x118)
// Class LOTF2.BTTask_HexGrabAttack
class UBTTask_HexGrabAttack : public UBTTask_HexAttack
{
public:
	uint8                                        Pad_2829[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTTask_HexGrabAttack* GetDefaultObj();

};

// 0x0 (0xE0 - 0xE0)
// Class LOTF2.BTTask_HexIdle
class UBTTask_HexIdle : public UBTTask_HexCharacterAction
{
public:

	static class UClass* StaticClass();
	static class UBTTask_HexIdle* GetDefaultObj();

};

// 0x8 (0xF0 - 0xE8)
// Class LOTF2.BTTask_HexLeaveTarget
class UBTTask_HexLeaveTarget : public UBTTask_HexMovementAction
{
public:
	float                                        DistanceToReach;                                   // 0xE8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bOrientTowardsMovement;                            // 0xEC(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_282A[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTTask_HexLeaveTarget* GetDefaultObj();

};

// 0x8 (0xF8 - 0xF0)
// Class LOTF2.BTTask_HexLeaveTargetMontage
class UBTTask_HexLeaveTargetMontage : public UBTTask_HexLeaveTarget
{
public:
	struct FGameplayTag                          MovementMontageToUse;                              // 0xF0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UBTTask_HexLeaveTargetMontage* GetDefaultObj();

};

// 0x8 (0xF0 - 0xE8)
// Class LOTF2.BTTask_HexMoveSideways
class UBTTask_HexMoveSideways : public UBTTask_HexMovementAction
{
public:
	enum class EMoveSidewaysDirection            MovementDirection;                                 // 0xE8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_282B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RotationAngle;                                     // 0xEC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UBTTask_HexMoveSideways* GetDefaultObj();

};

// 0x10 (0x100 - 0xF0)
// Class LOTF2.BTTask_HexMoveSidewaysMontage
class UBTTask_HexMoveSidewaysMontage : public UBTTask_HexMoveSideways
{
public:
	struct FGameplayTag                          LeftMontageTag;                                    // 0xF0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          RightMontageTag;                                   // 0xF8(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UBTTask_HexMoveSidewaysMontage* GetDefaultObj();

};

// 0x110 (0x1F8 - 0xE8)
// Class LOTF2.BTTask_HexMoveToEQSResultMovementAction
class UBTTask_HexMoveToEQSResultMovementAction : public UBTTask_HexMovementAction
{
public:
	uint8                                        Pad_282C[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayEventData                    AbilityPayload;                                    // 0xF8(0xB0)(NativeAccessSpecifierPrivate)
	struct FEQSParametrizedQueryExecutionRequest EQSRequest;                                        // 0x1A8(0x48)(Edit, NativeAccessSpecifierPrivate)
	float                                        DistanceToReach;                                   // 0x1F0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        DistanceToReachRandomDeviation;                    // 0x1F4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UBTTask_HexMoveToEQSResultMovementAction* GetDefaultObj();

};

// 0x8 (0x128 - 0x120)
// Class LOTF2.BTTask_HexPatrolToTarget
class UBTTask_HexPatrolToTarget : public UBTTask_HexApproachTarget
{
public:
	struct FGameplayTag                          MontageTag;                                        // 0x120(0x8)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UBTTask_HexPatrolToTarget* GetDefaultObj();

};

// 0x10 (0x108 - 0xF8)
// Class LOTF2.BTTask_HexPlayAnimationEnvironmentAction
class UBTTask_HexPlayAnimationEnvironmentAction : public UBTTask_HexPlayMontage
{
public:
	uint8                                        Pad_282D[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTTask_HexPlayAnimationEnvironmentAction* GetDefaultObj();

};

// 0x10 (0x108 - 0xF8)
// Class LOTF2.BTTask_HexPlayWaitFirstEncounter
class UBTTask_HexPlayWaitFirstEncounter : public UBTTask_HexPlayMontage
{
public:
	enum class EWaitFirstEncounterAnimationToPlay AnimationToPlay;                                   // 0xF8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_282E[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTTask_HexPlayWaitFirstEncounter* GetDefaultObj();

};

// 0x0 (0xE0 - 0xE0)
// Class LOTF2.BTTask_HexRestorePrevPatrolPoint
class UBTTask_HexRestorePrevPatrolPoint : public UBTTask_HexCharacterAction
{
public:

	static class UClass* StaticClass();
	static class UBTTask_HexRestorePrevPatrolPoint* GetDefaultObj();

};

// 0x0 (0x70 - 0x70)
// Class LOTF2.BTTask_HexSelectNextEnvAction
class UBTTask_HexSelectNextEnvAction : public UBTTaskNode
{
public:

	static class UClass* StaticClass();
	static class UBTTask_HexSelectNextEnvAction* GetDefaultObj();

};

// 0x8 (0x88 - 0x80)
// Class LOTF2.BTTask_HexSetTagCooldown
class UBTTask_HexSetTagCooldown : public UBTTask_SetTagCooldown
{
public:
	float                                        MinRandomCooldownDurationDeviation;                // 0x80(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxRandomCooldownDurationDeviation;                // 0x84(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UBTTask_HexSetTagCooldown* GetDefaultObj();

};

// 0x10 (0xF0 - 0xE0)
// Class LOTF2.BTTask_HexTurnToTarget
class UBTTask_HexTurnToTarget : public UBTTask_HexCharacterAction
{
public:
	float                                        JudgeAngle;                                        // 0xE0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TurnSpeed;                                         // 0xE4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIgnoreJudgeAngle;                                 // 0xE8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_282F[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTTask_HexTurnToTarget* GetDefaultObj();

};

// 0x0 (0xF0 - 0xF0)
// Class LOTF2.BTTask_HexTurnEnvironmentAction
class UBTTask_HexTurnEnvironmentAction : public UBTTask_HexTurnToTarget
{
public:

	static class UClass* StaticClass();
	static class UBTTask_HexTurnEnvironmentAction* GetDefaultObj();

};

// 0x0 (0xE0 - 0xE0)
// Class LOTF2.BTTask_HexWaitFinishCombo
class UBTTask_HexWaitFinishCombo : public UBTTask_HexCharacterAction
{
public:

	static class UClass* StaticClass();
	static class UBTTask_HexWaitFinishCombo* GetDefaultObj();

};

// 0x0 (0x70 - 0x70)
// Class LOTF2.BTTask_SignalActionComplete
class UBTTask_SignalActionComplete : public UBTTaskNode
{
public:

	static class UClass* StaticClass();
	static class UBTTask_SignalActionComplete* GetDefaultObj();

};

// 0x18 (0x2D8 - 0x2C0)
// Class LOTF2.BuffIconWidget
class UBuffIconWidget : public UExtensionPointEntryWidget
{
public:
	class UCommonLazyImage*                      Image_BuffIcon;                                    // 0x2C0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                      Text_Amount;                                       // 0x2C8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2830[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBuffIconWidget* GetDefaultObj();

};

// 0xE8 (0x110 - 0x28)
// Class LOTF2.CachedSlateBrush
class UCachedSlateBrush : public UObject
{
public:
	uint8                                        Pad_2831[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSlateBrush                           SlateBrush;                                        // 0x30(0xD0)(NativeAccessSpecifierPublic)
	uint8                                        Pad_2832[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCachedSlateBrush* GetDefaultObj();

};

// 0x20 (0x48 - 0x28)
// Class LOTF2.CachedSlateBrushArray
class UCachedSlateBrushArray : public UObject
{
public:
	TArray<struct FSlateBrush>                   SlateBrushes;                                      // 0x28(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2833[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCachedSlateBrushArray* GetDefaultObj();

};

// 0x78 (0x128 - 0xB0)
// Class LOTF2.CameraTargetComponent
class UCameraTargetComponent : public UActorComponent
{
public:
	bool                                         bDrawDebugHelpers;                                 // 0xB0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2836[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USkeleton*                             ReferenceSkeleton;                                 // 0xB8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FName, struct FTargetDesc>        Targets;                                           // 0xC0(0x50)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FBoneReference                        TargetBoneReference;                               // 0x110(0x10)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class FName                                  TargetBoneName;                                    // 0x120(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UCameraTargetComponent* GetDefaultObj();

	void SetTarget(class FName TargetName, class USceneComponent* Target, struct FTransform& TargetOffset);
	bool IsTargetValid(class FName TargetName);
	void GetTargetViewPoint(class FName TargetName, struct FVector* Location, struct FRotator* Rotation);
	void GetTargetTransform(class FName TargetName, struct FTransform* Transform);
	void GetTargetPosition(class FName TargetName, struct FVector* Position);
	void GetTargetCharacterLocation(class FName TargetName, struct FVector* Location);
	void ClearTargets();
	void ClearTarget(class FName TargetName);
};

// 0x0 (0x28 - 0x28)
// Class LOTF2.CameraUtil
class UCameraUtil : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UCameraUtil* GetDefaultObj();

	bool WorldToScreenNorm(class APawn* Pawn, struct FVector& WorldLocation, struct FVector2D* ScreenLocation);
	bool ScreenNormToWorld(class APawn* Pawn, struct FVector2D& ScreenNormLocation, struct FVector* ScreenWorldLocation, struct FVector* ScreenWorldDirection);
};

// 0x18 (0xE8 - 0xD0)
// Class LOTF2.CharacterActionBT
class UCharacterActionBT : public UCharacterAction
{
public:
	uint8                                        Pad_2839[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UBehaviorTree*                         ActionBT;                                          // 0xE0(0x8)(Edit, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UCharacterActionBT* GetDefaultObj();

};

// 0x70 (0x120 - 0xB0)
// Class LOTF2.CharacterActionManager
class UCharacterActionManager : public UActorComponent
{
public:
	uint8                                        Pad_283A[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSet<class UCharacterAction*>                M_setActions;                                      // 0xC0(0x50)(NativeAccessSpecifierPrivate)
	uint8                                        Pad_283B[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCharacterActionManager* GetDefaultObj();

};

// 0x10 (0xE0 - 0xD0)
// Class LOTF2.CharacterActionSequence
class UCharacterActionSequence : public UCharacterAction
{
public:
	TArray<class UCharacterAction*>              ActionStack;                                       // 0xD0(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UCharacterActionSequence* GetDefaultObj();

};

// 0x3F0 (0x420 - 0x30)
// Class LOTF2.CharacterAIData
class UCharacterAIData : public UPrimaryDataAsset
{
public:
	struct FDataTableRowHandle                   AIStatsRow;                                        // 0x30(0x10)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bUseNewAIStats_PLACEHOLDER;                        // 0x40(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_283C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCharacterAIConfig                    AIConfiguration;                                   // 0x48(0x388)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, float>             ConfigVars;                                        // 0x3D0(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UCharacterAIData* GetDefaultObj();

};

// 0x128 (0x728 - 0x600)
// Class LOTF2.CharacterAnimationData
class UCharacterAnimationData : public UAnimationData
{
public:
	TMap<struct FGameplayTag, TSubclassOf<class UWeaponAnimationData>> MovesetsDataList;                                  // 0x600(0x50)(Edit, BlueprintVisible, UObjectWrapper, NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, TSoftClassPtr<class UWeaponAnimationData>> MovesetsData;                                      // 0x650(0x50)(Deprecated, UObjectWrapper, NativeAccessSpecifierPublic)
	struct FMovesetAttackData                    AttackData;                                        // 0x6A0(0x18)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FGameplayTag                          AttackDefinitionCategory;                          // 0x6B8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<enum class EStanceType, struct FWeaponMovesetData> DefaultStanceData;                                 // 0x6C0(0x50)(Edit, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class UAnimationData>>    CoreMovesets;                                      // 0x710(0x10)(Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	class UDataTable*                            SyncAnimationsMoveset;                             // 0x720(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UCharacterAnimationData* GetDefaultObj();

};

// 0xA8 (0x158 - 0xB0)
// Class LOTF2.CharacterAudioComponent
class UCharacterAudioComponent : public UActorComponent
{
public:
	TArray<struct FAkAnathemaEvent>              StartAkEvents;                                     // 0xB0(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FAkAnathemaEvent                      BreathAkEvent;                                     // 0xC0(0x50)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class UAkRtpc*                               BreathStaminaRtpc;                                 // 0x110(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkRtpc*                               BreathSpeedRtpc;                                   // 0x118(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkRtpc*                               SpeedRtpc;                                         // 0x120(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkRtpc*                               BreathEnemyStateRtpc;                              // 0x128(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_283E[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                LoopingPlayingIDs;                                 // 0x140(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_283F[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCharacterAudioComponent* GetDefaultObj();

	void StopAkEvents(class AActor* InstigatorActor, struct FGameplayTagContainer& InstigatorTags, bool bDeathWasObserved);
	void OnEnemyCombatStateChange(struct FGameplayTagContainer& Payload, class UHexStateTreeComponent* OwnerStateTreeComponent);
};

// 0x30 (0x68 - 0x38)
// Class LOTF2.CharacterClassSettings
class UCharacterClassSettings : public UHexDeveloperSettings
{
public:
	TSoftObjectPtr<class UDataTable>             InitialCharacterClasses;                           // 0x38(0x30)(Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UCharacterClassSettings* GetDefaultObj();

};

// 0x30 (0x60 - 0x30)
// Class LOTF2.CharacterClassManager
class UCharacterClassManager : public UGameInstanceSubsystem
{
public:
	TArray<class FName>                          UnlockedCharacterClasses;                          // 0x30(0x10)(ZeroConstructor, SaveGame, NativeAccessSpecifierPrivate)
	TArray<class FName>                          CurrentGameUnlockedCharacterClasses;               // 0x40(0x10)(ZeroConstructor, SaveGame, NativeAccessSpecifierPrivate)
	class FName                                  UnlockedCharacterClassToShow;                      // 0x50(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2841[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCharacterClassManager* GetDefaultObj();

	void OnQuestComplete(struct FGameplayTagContainer& Tags);
	void OnNewClassUnlockedShown(enum class EMessagingResult Result, class UHexGameDialog* Dialog);
};

// 0xE0 (0x190 - 0xB0)
// Class LOTF2.CharacterConfigComponent
class UCharacterConfigComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnCharacterAnimLayerStackChanged;                  // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UCharacterData*                        CharacterData;                                     // 0xC0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, SaveGame, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UCharacterData>          CharacterDataClass;                                // 0xC8(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FAnimationMovesetStack                AnimationMovesetStack;                             // 0xF8(0x10)(Protected, NativeAccessSpecifierProtected)
	struct FAnimationMovesetStack                AnimationMovesetStackReplicated;                   // 0x108(0x10)(Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	bool                                         bShouldNotifyAnimationStackChange;                 // 0x118(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2849[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<struct FGameplayTag, float>             ConfigVars;                                        // 0x120(0x50)(Protected, NativeAccessSpecifierProtected)
	struct FDataTableRowHandle                   LootTableOverride;                                 // 0x170(0x10)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	struct FDataTableRowHandle                   LootTableAdditive;                                 // 0x180(0x10)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UCharacterConfigComponent* GetDefaultObj();

	void RemoveAnimationMovesetLayer(struct FGameplayTag& LayerSourceID, bool bShouldNotify);
	void OnRep_ReplicatedAnimationMovesetStack(struct FAnimationMovesetStack* OldReplicatedAnimationMovesetStack);
	bool IsCharacterDefinitionValid();
	class UBlendSpace* GetBlendspaceByTag(struct FGameplayTag& AnimationTag);
	class UAnimMontage* GetAnimMontageByTag(struct FGameplayTag& AnimationTag, bool bWarnIfNotFound);
	class UClass* GetAnimInstanceBase();
	bool GetAnimationsArrayByTag(struct FGameplayTag& AnimationTag, TArray<class UAnimSequence*>* OutAnimations);
	struct FAnimationMovesetStack GetAnimationMovesetStack();
	class UAnimSequence* GetAnimationByTag(struct FGameplayTag& AnimationTag);
	float GetAITeamAttackEffectivity();
	class UAimOffsetBlendSpace* GetAimOffsetBlendSpaceByTag(struct FGameplayTag& AnimationTag);
	enum class ESensesActivationReaction GetAIFoundReaction();
	enum class ESensesActivationReaction GetAICautionReaction();
	bool GetAICanReactToAlert();
	float GetAIAlertRadius();
	bool GetAIAlarmSkipCollisionChecks();
	bool BP_GetConfigVar(struct FGameplayTag& ConfigVarTag, float* VarValue);
	void AddOrReplaceAnimationMovesetLayer(struct FAnimationMovesetLayer& NewLayer, bool bShouldNotify);
	void AddAnimationMovesetLayerByTag(struct FGameplayTag& AnimMoveset, bool bShouldNotify, int32 Priority);
	void AddAnimationMovesetLayer(struct FAnimationMovesetLayer& NewLayer, bool bShouldNotify);
};

// 0x3B8 (0x3E8 - 0x30)
// Class LOTF2.CharacterData
class UCharacterData : public UPrimaryDataAsset
{
public:
	struct FDataTableRowHandle                   StatsRow;                                          // 0x30(0x10)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	TSubclassOf<class UCharacterAnimationData>   AnimationsData;                                    // 0x40(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UCharacterGameplayData>    GameplayData;                                      // 0x48(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UCharacterAIData>          AIData;                                            // 0x50(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UCharacterAnimationData> AnimationsDataClass;                               // 0x58(0x30)(Deprecated, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UCharacterGameplayData>  GameplayDataClass;                                 // 0x88(0x30)(Deprecated, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UCharacterAIData>        AIDataClass;                                       // 0xB8(0x30)(Deprecated, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            SpecialDamageSpotTable;                            // 0xE8(0x8)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCharactersBodyConfig                 BodyConfiguration;                                 // 0xF0(0x40)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                         bHasEquipment;                                     // 0x130(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_284A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCharacterEquipmentConfig             EquipmentConfig;                                   // 0x138(0x210)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TSubclassOf<class UCharacterUIData>          UIData;                                            // 0x348(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UCharacterSoundData>       SoundData;                                         // 0x350(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UCharacterUIData>        UIDataClass;                                       // 0x358(0x30)(Deprecated, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UCharacterSoundData>     SoundDataClass;                                    // 0x388(0x30)(Deprecated, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                   LootTable;                                         // 0x3B8(0x10)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bGenerateLootPickup;                               // 0x3C8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_284B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FAttributeInitializationData>  ExtraAttributes;                                   // 0x3D0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPublic)
	enum class EHexAITeams                       Team;                                              // 0x3E0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_284C[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCharacterData* GetDefaultObj();

	bool IsAICharacter();
	bool HasEquipment();
	class UCharacterUIData* GetUIData();
	enum class EHexAITeams GetTeam();
	class UCharacterSoundData* GetSoundData();
	TMap<struct FGameplayTag, TSubclassOf<class UWeaponAnimationData>> GetMovesetsDataList();
	class UCharacterGameplayData* GetGameplayData();
	struct FCharacterGameplayAbilitiesConfig GetGameplayAbilitiesConfig();
	struct FCharacterEquipmentConfig GetEquipmentConfig();
	struct FCharactersBodyConfig GetBodyConfig();
	struct FCharacterAnimationsConfig GetAnimationsConfig();
	class UCharacterAnimationData* GetAnimationData();
	class UCharacterAIData* GetAIData();
	struct FCharacterAIConfig GetAIConfig();
	void AutoFillData();
};

// 0x0 (0x28 - 0x28)
// Class LOTF2.CharacterDefinitionUtils
class UCharacterDefinitionUtils : public UObject
{
public:

	static class UClass* StaticClass();
	static class UCharacterDefinitionUtils* GetDefaultObj();

};

// 0xF0 (0x120 - 0x30)
// Class LOTF2.GameplayData
class UGameplayData : public UPrimaryDataAsset
{
public:
	struct FCharacterGameplayAbilitiesConfig     GameplayAbilitiesConfig;                           // 0x30(0xE8)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FGameplayTag                          CharacterSoulFlayHurtReactTag;                     // 0x118(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGameplayData* GetDefaultObj();

};

// 0x28 (0x148 - 0x120)
// Class LOTF2.CharacterGameplayData
class UCharacterGameplayData : public UGameplayData
{
public:
	bool                                         bCanAbsorbLanternLightVigor;                       // 0x120(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2853[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          CameraTransitionTag;                               // 0x124(0x8)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldOverrideSpineAngleData;                     // 0x12C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bApplySpineRotationOffset;                         // 0x12D(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2854[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AngleToApplySpineRotation;                         // 0x130(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpineOffsetAngleLimit;                             // 0x134(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LockOnWeightMultiplier;                            // 0x138(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverrideMaxDistanceToLockOn;                      // 0x13C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2855[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxDistanceToLockOn;                               // 0x140(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2856[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCharacterGameplayData* GetDefaultObj();

};

// 0x10 (0x2B0 - 0x2A0)
// Class LOTF2.DecalsHitGeneratorActor
class ADecalsHitGeneratorActor : public AActor
{
public:
	class UNiagaraSystem*                        NiagaraDecalGenerator;                             // 0x2A0(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                    DecalMaterial;                                     // 0x2A8(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ADecalsHitGeneratorActor* GetDefaultObj();

};

// 0x1D0 (0x200 - 0x30)
// Class LOTF2.CharacterHitFXData
class UCharacterHitFXData : public UPrimaryDataAsset
{
public:
	struct FAkAnathemaEvent                      HitDoneEvent;                                      // 0x30(0x50)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	struct FAkAnathemaEvent                      HitTakenEvent;                                     // 0x80(0x50)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	TMap<struct FGameplayTag, struct FAkAnathemaEvent> AkEventsSharedNotify;                              // 0xD0(0x50)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class UNiagaraSystem*                        HitDoneNiagaraFXs;                                 // 0x120(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AActor>                    BloodPoolActorClass;                               // 0x128(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<struct FGameplayTag, class UFXData*>    UnarmedHitFX;                                      // 0x130(0x50)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	TMap<struct FGameplayTag, struct FBloodDataFX> BloodFXs;                                          // 0x180(0x50)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class UNiagaraSystem*                        DeterministicDirectionalBlood;                     // 0x1D0(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    BloodDecalMaterial;                                // 0x1D8(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class ADecalsHitGeneratorActor>  BP_DecalsGeneratorActor;                           // 0x1E0(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNiagaraSystem*                        StabBloodFX;                                       // 0x1E8(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNiagaraSystem*                        TrailStabBloodFX;                                  // 0x1F0(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNiagaraSystem*                        StabBloodFXDecalGenerator;                         // 0x1F8(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UCharacterHitFXData* GetDefaultObj();

};

// 0x50 (0x88 - 0x38)
// Class LOTF2.CharacterIconSettings
class UCharacterIconSettings : public UHexDeveloperSettings
{
public:
	TMap<TSoftClassPtr<class UCharacterData>, TSoftObjectPtr<class UTexture2D>> Icons;                                             // 0x38(0x50)(Edit, Config, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UCharacterIconSettings* GetDefaultObj();

};

// 0x180 (0x230 - 0xB0)
// Class LOTF2.CharacterLodComponent
class UCharacterLodComponent : public UActorComponent
{
public:
	uint8                                        Pad_2860[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        SenseMask;                                         // 0xC8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2861[0x13];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bForceHighQuality;                                 // 0xDC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2862[0x3B];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LodScoreMultiplier;                                // 0x118(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2863[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UActorComponent*>               ManagedComponentsArray;                            // 0x128(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class UActorComponent*>               ManagedComponentsWithNoTickArray;                  // 0x138(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class UNiagaraComponent*>             ManagedNiagaraComponentsArray;                     // 0x148(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2864[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class UObject*, bool>                   ManagedObjectsExternalTickStateMap;                // 0x180(0x50)(Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2865[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class EGameRealm, bool>            RealmTickStateMap;                                 // 0x1D8(0x50)(Edit, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2866[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCharacterLodComponent* GetDefaultObj();

	void SetForceHighQuality(bool bForceQuality);
	void RemoveForceHighQualityOverride(class FName ID, bool bChecked);
	void OnManagedSkeletalComponentCollisionSettingsChanged(class UPrimitiveComponent* Primitive);
	void OnExternalTickChanged_Components(class UActorComponent* PComponent, bool bEnabled);
	void OnExternalTickChanged_Actors(class AActor* PActor, bool bEnabled);
	void OnCharacterUnPossessed(class ALOTF2Character* PCharacter);
	void OnCharacterControllerChanged(class ALOTF2Character* PCharacter, class AController* POldController, class AController* PNewController);
	void OnActorRemoveComponent(class AActor* PActor, class UActorComponent* PComponent);
	void OnActorFinishAddComponents(class AActor* PActor, class UActorComponent* PComponent);
	bool IsForceHighQuality();
	void AddForceHighQualityOverride(bool bForceHighQuality, class FName ID, int32 Priority, bool bReplaceIfExisting);
};

// 0x50 (0x80 - 0x30)
// Class LOTF2.CharacterMovesetList
class UCharacterMovesetList : public UPrimaryDataAsset
{
public:
	TMap<struct FGameplayTag, TSoftObjectPtr<class UWeaponAnimationData>> MovesetList;                                       // 0x30(0x50)(Edit, BlueprintVisible, UObjectWrapper, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UCharacterMovesetList* GetDefaultObj();

};

// 0x58 (0x578 - 0x520)
// Class LOTF2.CharacterNameWidget
class UCharacterNameWidget : public UHexConfirmationDialog
{
public:
	FMulticastInlineDelegateProperty_            OnCharacterNameSelected;                           // 0x520(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCharacterNameChangeCancel;                       // 0x530(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCharacterNameWidgetHidden;                       // 0x540(0x10)(ZeroConstructor, InstancedReference, BlueprintCallable, NativeAccessSpecifierPublic)
	class UEditableTextBox*                      Name_EditableText;                                 // 0x550(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2869[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCharacterNameWidget* GetDefaultObj();

	void Reset();
	void OnTextChanged(class FText& Text);
	void OnNameIsValid(bool bNameIsValid);
	void OnNameCommitted(class FText& Text, enum class ETextCommit CommitMethod);
	void OnConfirmButtonPressed();
	void InitName();
	void EnableNameWidget(bool bEnabled);
};

// 0x1E0 (0x210 - 0x30)
// Class LOTF2.CharacterSoundData
class UCharacterSoundData : public UPrimaryDataAsset
{
public:
	TMap<struct FGameplayTag, struct FAkAnathemaEvent> AkAnathemaEvents;                                  // 0x30(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, class UAkSwitchValue*> AkSwitchValues;                                    // 0x80(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, class UAkStateValue*> AkStateValues;                                     // 0xD0(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, class UAkStateValue*> AkStateValuesAutoTriggerByTagAdded;                // 0x120(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, class UAkStateValue*> AkStateValuesAutoTriggerByTagRemoved;              // 0x170(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, struct FAkAnathemaEvent> AkAnathemaEventsByTagAdded;                        // 0x1C0(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UCharacterSoundData* GetDefaultObj();

};

// 0x1B0 (0x1E0 - 0x30)
// Class LOTF2.CharacterStatsData
class UCharacterStatsData : public UPrimaryDataAsset
{
public:
	struct FCharacterStatsConfig                 StatsConfig;                                       // 0x30(0x1B0)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UCharacterStatsData* GetDefaultObj();

};

// 0x8 (0xB8 - 0xB0)
// Class LOTF2.CharacterTranslationComponent
class UCharacterTranslationComponent : public UActorComponent
{
public:
	class ACharacter*                            OwnerCharacter;                                    // 0xB0(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UCharacterTranslationComponent* GetDefaultObj();

};

// 0x110 (0x140 - 0x30)
// Class LOTF2.CharacterUIData
class UCharacterUIData : public UPrimaryDataAsset
{
public:
	class FText                                  CharacterName;                                     // 0x30(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, class FText>       UI_Texts;                                          // 0x48(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>             CharacterIcon;                                     // 0x98(0x30)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, TSoftObjectPtr<class UTexture2D>> UI_Texture2Ds;                                     // 0xC8(0x50)(Edit, BlueprintVisible, UObjectWrapper, NativeAccessSpecifierPublic)
	bool                                         bShowDeathScreen;                                  // 0x118(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_286A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 UI_Flags;                                          // 0x120(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UCharacterUIData* GetDefaultObj();

};

// 0x298 (0x550 - 0x2B8)
// Class LOTF2.CharCreationCameraWidget
class UCharCreationCameraWidget : public ULOTF2UserWidget
{
public:
	uint8                                        Pad_286B[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          CameraZoomedInTag;                                 // 0x2F8(0x8)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInputAction*                          RotateInputAction;                                 // 0x300(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ControllerZoomSpeedMultiplier;                     // 0x308(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ControllerRotationSpeedMultiplier;                 // 0x30C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MouseZoomSpeedMultiplier;                          // 0x310(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MouseRotationSpeedMultiplier;                      // 0x314(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FCustomizationCamera>          ShapeCameras;                                      // 0x318(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class ACameraActor*                          MainCamera;                                        // 0x328(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_286C[0x1B0];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	class ALOTF2Character*                       LastSelectedPreset;                                // 0x4E0(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_286D[0x68];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCharCreationCameraWidget* GetDefaultObj();

	void SetCameraMode(enum class ECharCreationCameraMode CameraMode);
	void SetCamera(enum class EBodyShapeCamera CameraToSet, bool bZoomIn);
	void Reset(bool bResetZoom, bool bResetRotation);
	void OnSelectRightPressed();
	void OnSelectLeftPressed();
	void OnControllerZoom(float Value);
	void OnControllerRotate(float Value);
	void EnableCameraControls();
	void DisableCameraControls();
};

// 0x30 (0x5D8 - 0x5A8)
// Class LOTF2.CharCreationPresetsScreenWidget
class UCharCreationPresetsScreenWidget : public UCustomizationScreenWidget
{
public:
	uint8                                        Pad_286E[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UCharCreationCameraWidget*             CameraWidget;                                      // 0x5C8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_286F[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCharCreationPresetsScreenWidget* GetDefaultObj();

	void OnRandomizeButton();
	void OnPlayerMeshChangeRequested(bool bIsBlocking);
	void OnPlayerMeshChanged();
};

// 0x60 (0x608 - 0x5A8)
// Class LOTF2.CharCreationReview
class UCharCreationReview : public UCustomizationScreenWidget
{
public:
	FMulticastInlineDelegateProperty_            OnRequestCharacterNameChange;                      // 0x5A8(0x10)(ZeroConstructor, InstancedReference, BlueprintCallable, NativeAccessSpecifierPublic)
	class UBodyShapeData*                        BodyShapeData;                                     // 0x5B8(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlayerEquipmentPanel*                 Panel_Equipment;                                   // 0x5C0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USimpleClassStatsWidget*               Panel_ClassStats;                                  // 0x5C8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonBorder*                         Container_PlayerName;                              // 0x5D0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                      Text_ClassName;                                    // 0x5D8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                      Text_ClassDescription;                             // 0x5E0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                      Text_CharName;                                     // 0x5E8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanGoBack;                                        // 0x5F0(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2871[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class APlayerCharacter*                      PlayerCharacter;                                   // 0x5F8(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2872[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCharCreationReview* GetDefaultObj();

	void PlayGame();
	void OnSaveGameFinished(const class FString& SlotName, int32 UserIndex, bool bSuccess);
	void OnPlayPressed();
	void OnNameChanged();
	void BP_ChangePlayerName();
};

// 0x28 (0x2C8 - 0x2A0)
// Class LOTF2.CharUpgradeRangedPanel
class UCharUpgradeRangedPanel : public UCommonUserWidget
{
public:
	class UInventoryItemName*                    Item_Name;                                         // 0x2A0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWeaponScalingStatRow*                 Stat_DamagePhysical;                               // 0x2A8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWeaponScalingStatRow*                 Stat_DamageFire;                                   // 0x2B0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWeaponScalingStatRow*                 Stat_DamageDark;                                   // 0x2B8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWeaponScalingStatRow*                 Stat_DamageHoly;                                   // 0x2C0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UCharUpgradeRangedPanel* GetDefaultObj();

	void UpdateStats(bool bInitialize, class UEquipableInventoryRangedWeapon* EquipableInventoryRangedWeapon, class UEquipableInventoryAmmo* InventoryWeapon, class UAbilitySystemComponent* OwnerAbilitySystemComponent);
};

// 0x0 (0x2A0 - 0x2A0)
// Class LOTF2.PlayersPosition
class APlayersPosition : public AActor
{
public:

	static class UClass* StaticClass();
	static class APlayersPosition* GetDefaultObj();

	struct FTransform GetPlayerTransform(int32 PlayerIndex);
};

// 0xF0 (0x390 - 0x2A0)
// Class LOTF2.CinematicPlayer
class ACinematicPlayer : public AActor
{
public:
	bool                                         bUseLoadingScreenAfterCinematic;                   // 0x2A0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bTeleportAndFadeOnlyClient;                        // 0x2A1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBindPlayer;                                       // 0x2A2(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EGameRealm                        CinematicGameRealm;                                // 0x2A3(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EGameRealm                        OnEndCinematicGameRealm;                           // 0x2A4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRestoreRealmOnEndCinematic;                       // 0x2A5(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2877[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class APlayersPosition*                      PlayersInitialPosition;                            // 0x2A8(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseFadeInTransition;                              // 0x2B0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseFadeOutTransition;                             // 0x2B1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2878[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ALevelSequenceActor*                   LevelSequenceActor;                                // 0x2B8(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class USkipCinematicWidget>      SkipCinematicUIWidgetClass;                        // 0x2C0(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>           GE_PlayerInCinematicClass;                         // 0x2C8(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>           GE_InvulnerabilityEffectClass;                     // 0x2D0(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialParameterCollection*          CameraOcclusionMaterialParameterCollection;        // 0x2D8(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CameraOcclusionParamName;                          // 0x2E0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCinematicEnd;                                    // 0x2E8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCinematicStartPlaying;                           // 0x2F8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<TWeakObjectPtr<class ALOTF2Character>> ExtraCharactersToTeleport;                         // 0x308(0x10)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	bool                                         bTriggeredByClient;                                // 0x318(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSkipCinematicUIAdded;                             // 0x319(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCinematicSkipped;                                 // 0x31A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCinematicSkippeable;                              // 0x31B(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCinematicPlaying;                                 // 0x31C(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2879[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FadeDuration;                                      // 0x320(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bResetsUI;                                         // 0x324(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHolsterPlayerWeaponsDuringCinematic;              // 0x325(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_287A[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          FadeInTimerHandle;                                 // 0x328(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FActiveGameplayEffectHandle>   GE_InCinematicHandles;                             // 0x330(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_287B[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USkipCinematicWidget*                  SkipCinematicWidget;                               // 0x360(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_287C[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ACinematicPlayer* GetDefaultObj();

	void TeleportCharacter(class ALOTF2Character* Character, int32 TeleportIdx);
	void StopCinematic();
	void SetCharactersPostion();
	void ResurrectCharactersPostCinematic();
	void RemoveEffectsAppliedDuringCinematics();
	void PrepareNonAuthoritativeCharactersForCinematic();
	void PrepareCharactersForExitingCinematic();
	void PrepareCharactersForCinematic();
	void PrepareCharacterForExitingCinematic(class ACharacter* Character);
	void PrepareCharacterForCinematic(class ACharacter* Character);
	void PlayCinematic();
	void OnRep_CinematicPlaying();
	void OnRagdollReady(enum class ERagdollState State);
	void OnNotifyPlayerJoinedDelayed(class APlayerCharacter* Character);
	void OnNotifyPlayerJoined(class APlayerCharacter* Character);
	void OnLoadingFinishedAfterCinematic();
	void OnFadeInFinish();
	void OnEnteredPlayMode(class APlayerCharacter* Character);
	void OnCinematicSkipped();
	void MulticastShowHUD(bool bWasTriggeredByClient);
	void MulticastResetUI(bool bWasTriggeredByClient);
	void MulticastResetCamera(bool bWasTriggeredByClient);
	void MulticastPrepareNonAuthoritativePlayers();
	void MulticastForceNaturalLightingUpdate(bool bWasTriggeredByClient);
	void MulticastCameraFadeOut(bool bWasTriggeredByClient);
	void MulticastCameraFadeIn(bool bWasTriggeredByClient);
	bool IsPlaying();
	bool IsLevelSequenceValid();
	bool HasCharacterTeleportPosition();
	struct FTransform GetCharacterTeleportPosition(int32 CharacterIdx);
	void ForceNaturalLightingUpdateInternal();
	void EndPlay(enum class EEndPlayReason EndPlayReason);
	void BlockCharacterActions();
};

// 0x70 (0x310 - 0x2A0)
// Class LOTF2.CinematicTriggerByDialoqAnswer
class ACinematicTriggerByDialoqAnswer : public AActor
{
public:
	class ASimpleCharacterSpawner*               NPCSpawner;                                        // 0x2A0(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ACinematicPlayer*                      CinematicToPlay;                                   // 0x2A8(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          DialogueStepOptionalTag;                           // 0x2B0(0x8)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EAnswerType                       AnswerType;                                        // 0x2B8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_287D[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAnathemaQuery                        CanTriggerQuery;                                   // 0x2C0(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ACinematicTriggerByDialoqAnswer* GetDefaultObj();

	void OnNPCSpawnerCharacterSpawned(class ASimpleCharacterSpawner* Spawner, class ALOTF2Character* Character);
	void OnDialogueSequenceStarted();
	void OnDialogueSequenceFinished(enum class EDialogueEndReason Reason);
	void OnDialogueAnswerSelected(enum class EAnswerType AnswerType);
};

// 0x10 (0x2B0 - 0x2A0)
// Class LOTF2.ClassNameEntryWidget
class UClassNameEntryWidget : public UCommonUserWidget
{
public:
	uint8                                        Pad_287E[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCommonTextBlock*                      Text_ClassName;                                    // 0x2A8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UClassNameEntryWidget* GetDefaultObj();

	void SetSelected(bool bSelected);
};

// 0x50 (0x318 - 0x2C8)
// Class LOTF2.ClassSelectionButtonWidget
class UClassSelectionButtonWidget : public UCustomizationUserWidget
{
public:
	FMulticastInlineDelegateProperty_            OnClassSelected;                                   // 0x2C8(0x10)(ZeroConstructor, InstancedReference, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnClassFocused;                                    // 0x2D8(0x10)(ZeroConstructor, InstancedReference, BlueprintCallable, NativeAccessSpecifierPublic)
	class FText                                  ClassName;                                         // 0x2E8(0x18)(BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class FName                                  Identifier;                                        // 0x300(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFocusableButtonWidget*                Button;                                            // 0x308(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                      Text_FeatureName;                                  // 0x310(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UClassSelectionButtonWidget* GetDefaultObj();

	void OnCharacterClassSelected();
	void OnCharacterClassFocused();
	class FText GetClassName();
	class FName GetClassId();
};

// 0x330 (0x358 - 0x28)
// Class LOTF2.CharacterClassListData
class UCharacterClassListData : public UObject
{
public:
	struct FCharacterClassData                   CharClassData;                                     // 0x28(0x330)(BlueprintVisible, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UCharacterClassListData* GetDefaultObj();

};

// 0x78 (0x620 - 0x5A8)
// Class LOTF2.ClassSelectionScreenWidget
class UClassSelectionScreenWidget : public UCustomizationScreenWidget
{
public:
	FMulticastInlineDelegateProperty_            OnNewClassSelected;                                // 0x5A8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UHexListView*                          List_CharacterClasses;                             // 0x5B8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            InitialCharacterClasses;                           // 0x5C0(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USimpleClassStatsWidget*               Panel_ClassStats;                                  // 0x5C8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlayerEquipmentPanel*                 Panel_Equipment;                                   // 0x5D0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                      Text_ClassName;                                    // 0x5D8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                      Text_ClassDescription;                             // 0x5E0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                          Container_Scroll;                                  // 0x5E8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCharCreationMovieFinished;                        // 0x5F0(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_287F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  CurrentClassName;                                  // 0x5F4(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2880[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCharacterClassListData*               CurrentSlotData;                                   // 0x600(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2881[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UClassSelectionScreenWidget* GetDefaultObj();

	void StartPlayerDissolveVFX();
	void SelectCurrentItem();
	void ResetToPreset();
	void OnPlayerMeshChangeRequested(bool bIsBlocking);
	void OnPlayerMeshChanged();
	void OnClassSelected(class UObject* ClassListItem);
	void OnCinematicEnd();
	void EndPlayerDissolveVFX();
	void BP_ShowCustomizationWarning();
	void BP_SelectClass(class UObject* ClassListItem);
	void BP_OnMeshChanged(bool bForced);
};

// 0x8 (0x280 - 0x278)
// Class LOTF2.ClientDisconnectWidget
class UClientDisconnectWidget : public UUserWidget
{
public:
	enum class EClientDisconnectReason           ClientDisconnectReason;                            // 0x278(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2883[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UClientDisconnectWidget* GetDefaultObj();

	class FText DisconnectReasonToText(enum class EClientDisconnectReason Reason);
};

// 0x28 (0x2E8 - 0x2C0)
// Class LOTF2.ClientMessageDialog
class UClientMessageDialog : public UExtensionPointEntryWidget
{
public:
	class UCommonTextBlock*                      Text_NpcName;                                      // 0x2C0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPanelWidget*                          Container_Name;                                    // 0x2C8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonRichTextBlock*                  Text_Message;                                      // 0x2D0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2884[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UClientMessageDialog* GetDefaultObj();

	void SkipMessage();
};

// 0x30 (0xE0 - 0xB0)
// Class LOTF2.ClientTetheringComponent
class UClientTetheringComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnTimerStateChanged;                               // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                        TimeToReturn;                                      // 0xC0(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        InnerRadius;                                       // 0xC4(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        OuterRadius;                                       // 0xC8(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        ReturnTime;                                        // 0xCC(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2885[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Disabled;                                          // 0xD8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2886[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UClientTetheringComponent* GetDefaultObj();

	void OnRep_ReturnTime();
	bool IsReturnToHostPending();
	float GetTimerTimeRemaining();
	void ClientTetheringEvent__DelegateSignature(class UClientTetheringComponent* SelfRef);
};

// 0x0 (0x28 - 0x28)
// Class LOTF2.CollisionMaskFiltering
class UCollisionMaskFiltering : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UCollisionMaskFiltering* GetDefaultObj();

	void SetMaskFilter(class UPrimitiveComponent* PrimitiveComponent, int32 Filter);
	uint8 GetMaskFilter(class UPrimitiveComponent* PrimitiveComponent);
};

// 0x20 (0x2F0 - 0x2D0)
// Class LOTF2.ColorBarWidget
class UColorBarWidget : public UCustomizationSliderBase
{
public:
	FMulticastInlineDelegateProperty_            OnValueChangedEvent;                               // 0x2D0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UImage*                                SliderTopImage;                                    // 0x2E0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                SliderBottomImage;                                 // 0x2E8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UColorBarWidget* GetDefaultObj();

	void UpdateTopColor(struct FLinearColor& Color);
	void UpdateBottomColor(struct FLinearColor& Color);
	void SetValue(float Value);
	void OnValueChanged(float Value);
	float GetValue();
};

// 0x40 (0x2E0 - 0x2A0)
// Class LOTF2.ShapePresetWidget
class UShapePresetWidget : public UCommonUserWidget
{
public:
	uint8                                        Pad_288A[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UImage*                                Preview_Image;                                     // 0x2A8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                      Text_PresetId;                                     // 0x2B0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FUIShapeData                          ShapeData;                                         // 0x2B8(0x28)(BlueprintVisible, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UShapePresetWidget* GetDefaultObj();

	void SetShapeData(struct FUIShapeData& ShapeData, int32 Index);
	void SetSelected(bool bSelected);
	void SetFocused(bool bSelected);
	struct FUIShapeData GetShapeData();
};

// 0x10 (0x2F0 - 0x2E0)
// Class LOTF2.ColorPresetWidget
class UColorPresetWidget : public UShapePresetWidget
{
public:
	uint8                                        Pad_288B[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UColorPresetWidget* GetDefaultObj();

	struct FLinearColor GetColor();
};

// 0x18 (0x2E0 - 0x2C8)
// Class LOTF2.ColorPreviewWidget
class UColorPreviewWidget : public UCustomizationUserWidget
{
public:
	struct FLinearColor                          PreviewColor;                                      // 0x2C8(0x10)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBorder*                               Preview;                                           // 0x2D8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UColorPreviewWidget* GetDefaultObj();

	void SetColor(struct FLinearColor& PreviewColor);
};

// 0x20 (0x360 - 0x340)
// Class LOTF2.ColorSelectorWidget
class UColorSelectorWidget : public UOptionSelectorBaseWidget
{
public:
	class UDataTable*                            ColorDefaults;                                     // 0x340(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UColorPreviewWidget>       ColorPreviewClass;                                 // 0x348(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FLinearColor>                  Colors;                                            // 0x350(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UColorSelectorWidget* GetDefaultObj();

	void AddColors(TArray<struct FLinearColor>& Colors);
};

// 0x18 (0x40 - 0x28)
// Class LOTF2.ColorListEntry
class UColorListEntry : public UObject
{
public:
	struct FLinearColor                          Color;                                             // 0x28(0x10)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Index;                                             // 0x38(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_288C[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UColorListEntry* GetDefaultObj();

};

// 0x40 (0x2E0 - 0x2A0)
// Class LOTF2.ShapeCategoryWidget
class UShapeCategoryWidget : public UCommonUserWidget
{
public:
	bool                                         bIsUnisex;                                         // 0x2A0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_288D[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UHexTileView*                          Shapes_Grid;                                       // 0x2A8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTitleShapePreviewWidget*              Title_Shape;                                       // 0x2B0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ECustomizationCategory            ShapeCategory;                                     // 0x2B8(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_288E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UShapePresetWidget>        ShapePresetClass;                                  // 0x2C0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBodyShapeData*                        BodyShapeData;                                     // 0x2C8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EBodyShapeAttributeType           AttributeType;                                     // 0x2D0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsCustomizationActive;                            // 0x2D1(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2890[0xE];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UShapeCategoryWidget* GetDefaultObj();

	void SelectAndFocus();
	void OnMeshChanged();
	void OnBodyTypeChanged(enum class ECharacterBodyType bodyType);
	void DeactivatePanel();
	void BP_PanelDeactivated();
	void BP_PanelActivated();
	void ActivatePanel();
};

// 0x8 (0x2E8 - 0x2E0)
// Class LOTF2.ColorShapeCategoryWidget
class UColorShapeCategoryWidget : public UShapeCategoryWidget
{
public:
	class UDataTable*                            SkinColorDefaults;                                 // 0x2E0(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UColorShapeCategoryWidget* GetDefaultObj();

};

// 0x28 (0x50 - 0x28)
// Class LOTF2.CombatAnimMetaData
class UCombatAnimMetaData : public UAnimMetaData
{
public:
	int32                                        Version;                                           // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DamageTriggerTime;                                 // 0x2C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ParryableTriggerTime;                              // 0x30(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2891[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               ParryableVector;                                   // 0x38(0x18)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UCombatAnimMetaData* GetDefaultObj();

};

// 0x50 (0x80 - 0x30)
// Class LOTF2.CombatAttributeSet
class UCombatAttributeSet : public UAttributeSet
{
public:
	struct FGameplayAttributeData                ManaCost;                                          // 0x30(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                ProvisionalDamageCost;                             // 0x40(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                AmmoCost;                                          // 0x50(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                DamageReceivedMultiplier;                          // 0x60(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                NoDeflectHitstopDuration;                          // 0x70(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UCombatAttributeSet* GetDefaultObj();

	void OnRep_ManaCost(struct FGameplayAttributeData& OldManaCost);
	void OnRep_AmmoCost(struct FGameplayAttributeData& OldAmmoCost);
};

// 0xB0 (0xE0 - 0x30)
// Class LOTF2.CombatReactionsAttributeSet
class UCombatReactionsAttributeSet : public UAttributeSet
{
public:
	struct FGameplayAttributeData                BlockProbability;                                  // 0x30(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                DeflectProbability;                                // 0x40(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                ParryProbability;                                  // 0x50(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                DodgeProbability;                                  // 0x60(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                SoulFlayBlockProbability;                          // 0x70(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                SoulFlayDodgeProbability;                          // 0x80(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                SoulFlayParryProbability;                          // 0x90(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                ProjectileDodgeProbabiltiy;                        // 0xA0(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                ProjectileBlockProbabiltiy;                        // 0xB0(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                MagicProjectileDodgeProbabiltiy;                   // 0xC0(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                MagicProjectileBlockProbabiltiy;                   // 0xD0(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UCombatReactionsAttributeSet* GetDefaultObj();

};

// 0x11D0 (0x1208 - 0x38)
// Class LOTF2.CombatSettings
class UCombatSettings : public UHexDeveloperSettings
{
public:
	float                                        PhysicalResistanceMidpoint;                        // 0x38(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DamageIncreaseToWeakTargets;                       // 0x3C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DamageDecreaseToResistantTargets;                  // 0x40(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2911[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCurveTableRowHandle                  DamageScalingCurveStrengthAttribute;               // 0x48(0x10)(Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  DamageScalingCurveAgilityAttribute;                // 0x58(0x10)(Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  DamageScalingCurveOrderAttribute;                  // 0x68(0x10)(Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  DamageScalingCurveChaosAttribute;                  // 0x78(0x10)(Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  SpellPowerScalingCurveOrderAttribute;              // 0x88(0x10)(Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  SpellPowerScalingCurveChaosAttribute;              // 0x98(0x10)(Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UDataTable>             GlobalDamageDefinitionTable;                       // 0xA8(0x30)(Edit, Config, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<struct FGameplayAttribute, struct FExtraStaggerByHealthDamageConfig> ExtraStaggerByHealthDamageTypes;                   // 0xD8(0x50)(Edit, Config, Protected, NativeAccessSpecifierProtected)
	float                                        DamageEffectivenessPositiveThresholdPercentage;    // 0x128(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DamageEffectivenessNegativeThresholdPercentage;    // 0x12C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DefaultDefenseForEffectivenessCalculation;         // 0x130(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2912[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          SlotAnimTrackNames;                                // 0x138(0x10)(Edit, ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  HealthAttributesScalingCurve;                      // 0x148(0x10)(Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  StaminaAttributesScalingCurve;                     // 0x158(0x10)(Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  ManaAttributesScalingCurve;                        // 0x168(0x10)(Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  EquipLoadAttributesScalingCurve;                   // 0x178(0x10)(Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  AmmoAttributesScalingCurve;                        // 0x188(0x10)(Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEnableLegacyNewGamePlusScaling;                   // 0x198(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2913[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCurveTableRowHandle                  HealthScalingCurveNewGamePlus;                     // 0x1A0(0x10)(Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  StaggerHealthScalingCurveNewGamePlus;              // 0x1B0(0x10)(Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  DamageScalingCurveNewGamePlus;                     // 0x1C0(0x10)(Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  StaminaDamageScalingCurveNewGamePlus;              // 0x1D0(0x10)(Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  DefenseScalingCurveNewGamePlus;                    // 0x1E0(0x10)(Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  ResistanceScalingCurveNewGamePlus;                 // 0x1F0(0x10)(Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  VigorScalingCurveNewGamePlus;                      // 0x200(0x10)(Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TSoftObjectPtr<class UDataTable>>     NGPlusNPCRegionScalingTables;                      // 0x210(0x10)(Edit, ZeroConstructor, Config, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  BossHealthScalingCurveNewGamePlus;                 // 0x220(0x10)(Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  BossDamageScalingCurveNewGamePlus;                 // 0x230(0x10)(Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  BossResistanceScalingCurveNewGamePlus;             // 0x240(0x10)(Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  BossVigorScalingCurveNewGamePlus;                  // 0x250(0x10)(Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UCurveFloat>            EquipLoadAttribute1ScaleCurve;                     // 0x260(0x30)(Edit, Config, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayAttribute                    EquipLoadAttribute1;                               // 0x290(0x38)(Edit, Config, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UCurveFloat>            EquipLoadAttribute2ScaleCurve;                     // 0x2C8(0x30)(Edit, Config, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayAttribute                    EquipLoadAttribute2;                               // 0x2F8(0x38)(Edit, Config, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EquipLoadBaseValue;                                // 0x330(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MediumWeightLoadThreshold;                         // 0x334(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HeavyWeightLoadThreshold;                          // 0x338(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EncumberedWeightLoadThreshold;                     // 0x33C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UDataTable>             NPCRegionScalingTable;                             // 0x340(0x30)(Edit, Config, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  DebugSimulatedRegion;                              // 0x370(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UDataTable>             TeamAttitudesTable;                                // 0x378(0x30)(Edit, Config, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UDataTable>             TeamDamagesTable;                                  // 0x3A8(0x30)(Edit, Config, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UDataTable>             TeamsToFactionsTable;                              // 0x3D8(0x30)(Edit, Config, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  VigorScalingCurve;                                 // 0x408(0x10)(Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLevelFormulaData                     LevelFormulaData;                                  // 0x418(0x4)(Edit, Config, NoDestructor, Protected, NativeAccessSpecifierProtected)
	int32                                        RequiredDamageLevel;                               // 0x41C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FStatFormulaData                      HealthFormulaData;                                 // 0x420(0xC)(Edit, Config, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FStatFormulaData                      StaminaFormulaData;                                // 0x42C(0xC)(Edit, Config, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FStatFormulaData                      ManaFormulaData;                                   // 0x438(0xC)(Edit, Config, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FStatFormulaData                      AmmoFormulaData;                                   // 0x444(0xC)(Edit, Config, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FPoiseReactionLevelSetting>    PoiseHurtReactionLevels;                           // 0x450(0x10)(Edit, ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected)
	int32                                        MaxPoiseReactionLevel;                             // 0x460(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEnableSubsteppingForHitBoxTraces;                 // 0x464(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2914[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxTimeToStripTraces;                              // 0x468(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxTimeToSubstepSamplingMontage;                   // 0x46C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HitSubsteppingSampleRate;                          // 0x470(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2915[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UTexture2D>             CanNotReactToAlertSprite;                          // 0x478(0x30)(Edit, Config, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UTexture2D>             FirstEncounterSprite;                              // 0x4A8(0x30)(Edit, Config, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UTexture2D>             FirstEncounterIgnoreSensesSprite;                  // 0x4D8(0x30)(Edit, Config, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<struct FGameplayTag, float>             AISoundRadiusByType;                               // 0x508(0x50)(Edit, Config, Protected, NativeAccessSpecifierProtected)
	float                                        ProjectileReactionTimeSeconds;                     // 0x558(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2916[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UCurveFloat>            AggroCurveByDistance;                              // 0x560(0x30)(Edit, Config, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AggroByDistanceWeight;                             // 0x590(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2917[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UCurveFloat>            AggroCurveByDamage;                                // 0x598(0x30)(Edit, Config, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AggroByDamageWeight;                               // 0x5C8(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AggroBySpecialDamageWeight;                        // 0x5CC(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FHexAIDamageAggroSettings             DamageAggroSettings;                               // 0x5D0(0xA0)(Edit, Config, Protected, NativeAccessSpecifierProtected)
	struct FHexAITargetAggroSettings             TargetAggroSettings;                               // 0x670(0x10)(Edit, Config, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        StaggerInmunityTimeAfterBeingStabbed;              // 0x680(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        StaggerHealthBaseValue;                            // 0x684(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        StaggerHealthPoiseMultiplier;                      // 0x688(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        StaggerHealthEnduranceMultiplier;                  // 0x68C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DefenseValueIncreasePerAttributePoint;             // 0x690(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DefenseValueIncreasePerExtraAttributePoint;        // 0x694(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BaseStatusEffectMaxBuildup;                        // 0x698(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxBuildupValueIncreasePerAttributePoint;          // 0x69C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<enum class EHexStatusEffectGEType, struct FHexStatusEffectBattleEffectsByAttribute> StatusEffectsClassesByType;                        // 0x6A0(0x50)(Edit, Config, Protected, NativeAccessSpecifierProtected)
	TMap<struct FGameplayAttribute, struct FGameplayTag> StatusEffectsOverloadGameplayEventsToSendToInstigator; // 0x6F0(0x50)(Edit, Config, Protected, NativeAccessSpecifierProtected)
	class FName                                  PropJointNames[0x21];                              // 0x740(0x108)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  CoopEnemyHealthScaling;                            // 0x848(0x10)(Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  CoopEnemyDamageScaling;                            // 0x858(0x10)(Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  CoopDamageDealtPlayerScalingRelativeToHost;        // 0x868(0x10)(Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  CoopDamageReceivedPlayerScalingRelativeToHost;     // 0x878(0x10)(Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  PvPDamageDealtPlayerScalingRelativeToHost;         // 0x888(0x10)(Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  PvPDamageReceivedPlayerScalingRelativeToHost;      // 0x898(0x10)(Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  PvPGlobalPlayerDealtDamageMultiplierBasedOnOriginalDamage; // 0x8A8(0x10)(Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        PowerLevelIncreasePerWeaponLevel;                  // 0x8B8(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2918[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCurveTableRowHandle                  HealingSpellPowerMultiplier;                       // 0x8C0(0x10)(Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCurveTableRowHandle                  WeaponBuffSpellPowerMultiplier;                    // 0x8D0(0x10)(Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<enum class EFEquipmentSlot, struct FGameplayTag> EquipmentSlotToAssetTagData;                       // 0x8E0(0x50)(Edit, Config, Protected, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UGameplayEffect>         PlayerImmunityEffectWhileLoading;                  // 0x930(0x30)(Edit, Config, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UGameplayEffect>         PlayerClientAppearAfterLoading;                    // 0x960(0x30)(Edit, Config, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UGameplayAbility>        SyncAnimAbilityClass;                              // 0x990(0x30)(Edit, Config, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MinNumRangedSlots;                                 // 0x9C0(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxNumRangedSlots;                                 // 0x9C4(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ExtraCompanionsAmmoWhenUpgraded;                   // 0x9C8(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bPreloadGameplayCues;                              // 0x9CC(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_291C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class UClass*, int32>                   NumObjectsToTickPerFrameByClass;                   // 0x9D0(0x50)(Edit, Config, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                 PersistentGeneralQuestTags;                        // 0xA20(0x20)(Edit, Config, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                 ClientQuestsTagsBasedOnHostProgression;            // 0xA40(0x20)(Edit, Config, Protected, NativeAccessSpecifierProtected)
	float                                        ProvisionalDamagePerAmuletEnhancedParry;           // 0xA60(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AmmoToProvisionalDamageCostConversion;             // 0xA64(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ManaToProvisionalDamageCostConversion;             // 0xA68(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EquipRequirementsNotMetDamageMultiplier;           // 0xA6C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EquipRequirementsNotMetBlockEfficiencyMultiplier;  // 0xA70(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RuneExtraItemDiscoveryBoostOnSoulFlayStab;         // 0xA74(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FAnathemaQuery                        WeaponRuneUnlockRequiredQuestQuery1;               // 0xA78(0x50)(Edit, Config, Protected, NativeAccessSpecifierProtected)
	struct FAnathemaQuery                        WeaponRuneUnlockRequiredQuestQuery2;               // 0xAC8(0x50)(Edit, Config, Protected, NativeAccessSpecifierProtected)
	struct FAnathemaQuery                        WeaponRuneUnlockRequiredQuestQuery3;               // 0xB18(0x50)(Edit, Config, Protected, NativeAccessSpecifierProtected)
	TSet<enum class EPhysicalSurface>            DefaultSurfacesToRebound;                          // 0xB68(0x50)(Edit, Config, Protected, NativeAccessSpecifierProtected)
	float                                        PvPPoiseDamageMultiplier;                          // 0xBB8(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PvPStaggerDamageMultiplier;                        // 0xBBC(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PvPStatusEffectDamageMultiplier;                   // 0xBC0(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        PowerLevelBalancingCap;                            // 0xBC4(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FHexBattleEffectIdentifier            RevengeBuffBattleEffectIdentifier;                 // 0xBC8(0x8)(Edit, Config, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TSet<struct FGameplayTag>                    AbilitiesToGiveFeedbackOnCostCheckFailed;          // 0xBD0(0x50)(Edit, Config, Protected, NativeAccessSpecifierProtected)
	struct FGameplayCueTag                       DefaultCostFailedFeedbackGameplayCueTag;           // 0xC20(0x8)(Edit, Config, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        PerItemLevelVigorSellMultiplier;                   // 0xC28(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        StaminaDamageMultiplierWhenBlockingWithFullProvisionalDamage; // 0xC2C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class AActor>                  SoulActorClass;                                    // 0xC30(0x30)(Edit, Config, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTagQuery                     QueryNeededToPassToPerformSoulReturnReaction;      // 0xC60(0x48)(Edit, Config, Protected, NativeAccessSpecifierProtected)
	float                                        DistanceToAimToWhenRanged;                         // 0xCA8(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ExtraDistanceToStartAimFrom;                       // 0xCAC(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2922[0x558];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCombatSettings* GetDefaultObj();

	class UDataTable* GetTeamAttitudesTable();
	struct FStatFormulaData GetStaminaFormulaData();
	float GetStaggerInmunityTimeAfterBeingStabbed();
	float GetRequiredDamageLevel();
	float GetProvisionalDamageOnEnhancedParry();
	float GetPhysicalResistanceMidpoint();
	class UDataTable* GetNPCRegionScalingTable();
	class UDataTable* GetNGPlusNPCRegionScalingTable(int32 NewGamePlusLevel);
	float GetMinNumRangedSlots();
	int32 GetMaxPoiseLevel();
	float GetMaxNumRangedSlots();
	float GetMaxBuildupValueIncreasePerAttributePoint();
	float GetManaToProvisionalDamageConversionAmount();
	struct FStatFormulaData GetManaFormulaData();
	struct FLevelFormulaData GetLevelFormulaData();
	int32 GetHurtReactionLevelFromTag(struct FGameplayTag& HurtReactionTag);
	float GetHeavyWeightLoadThreshold();
	struct FStatFormulaData GetHealthFormulaData();
	class UDataTable* GetGlobalDamageDefsData();
	float GetExtraCompanionsAmmoWhenUpgraded();
	float GetEquipLoadBaseValue();
	class UCurveFloat* GetEquipLoadAttribute2ScaleCurve();
	struct FGameplayAttribute GetEquipLoadAttribute2();
	class UCurveFloat* GetEquipLoadAttribute1ScaleCurve();
	struct FGameplayAttribute GetEquipLoadAttribute1();
	float GetEncumberedWeightLoadThreshold();
	float GeteMediumWeightLoadThreshold();
	struct FGameplayTag GetDynamicAssetTagFromEquipmentSlot(enum class EFEquipmentSlot SlotToGetTagFrom);
	float GetDefenseValueIncreasePerExtraAttributePoint();
	float GetDefenseValueIncreasePerAttributePoint();
	struct FGameplayTag GetDefaultHurtReactionTagFromLevel(int32 HurtReactionLevel);
	class FName GetDebugSimulatedRegion();
	float GetDamageIncreaseToWeakTargets();
	float GetDamageDecreaseToResistantTargets();
	float GetBaseStatusEffectMaxBuildup();
	TArray<class FString> GetAvailableDamageDefinitionIDs();
	float GetAmmoToProvisionalDamageConversionAmount();
	struct FStatFormulaData GetAmmoFormulaData();
	float GetAISoundRadiusByType(const struct FGameplayTag& SoundType, float DefaultValue);
	float GetAIProjectileReactionTimeSeconds();
	class UCurveFloat* GetAggroCurveByDistance();
	class UCurveFloat* GetAggroCurveByDamage();
};

// 0x8 (0x280 - 0x278)
// Class LOTF2.ConnectingToHostWidget
class UConnectingToHostWidget : public UUserWidget
{
public:
	class UCommonTextBlock*                      Text_Title;                                        // 0x278(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UConnectingToHostWidget* GetDefaultObj();

};

// 0x8 (0x38 - 0x30)
// Class LOTF2.ControllerDisconnectSubsystem
class UControllerDisconnectSubsystem : public ULocalPlayerSubsystem
{
public:
	uint8                                        Pad_2987[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UControllerDisconnectSubsystem* GetDefaultObj();

};

// 0x8 (0x280 - 0x278)
// Class LOTF2.ControllerDisconnectWidget
class UControllerDisconnectWidget : public UUserWidget
{
public:
	class UCommonTextBlock*                      Text_Title;                                        // 0x278(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UControllerDisconnectWidget* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class LOTF2.ControlMappingFunctionLibrary
class UControlMappingFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UControlMappingFunctionLibrary* GetDefaultObj();

	void RemoveAllWidgetsOfClass(class UObject* WorldContextObject, TSubclassOf<class UUserWidget> WidgetClass);
	void LOTF2SaveDefaultControlBindings();
	void LOTF2ResetAllControlBindings();
	void LOTF2RemoveAxisKeyBind(const struct FLOTF2InputAxis& ToRemove);
	void LOTF2RemoveActionKeyBind(const struct FLOTF2Input& ToRemove);
	bool LOTF2ReBindAxisKey(const struct FLOTF2InputAxis& Original, const struct FLOTF2InputAxis& NewBinding);
	bool LOTF2ReBindActionKey(const struct FLOTF2Input& Original, const struct FLOTF2Input& NewBinding);
	struct FLOTF2InputAxis LOTF2GetLOTF2InputAxis(struct FKeyEvent& KeyEvent);
	struct FLOTF2Input LOTF2GetLOTF2Input(struct FKeyEvent& KeyEvent);
	void LOTF2GetAllAxisKeyBindings(TArray<struct FLOTF2InputAxis>* Bindings);
	void LOTF2GetAllAxisAndActionMappingsForKey(const struct FKey& Key, TArray<struct FLOTF2Input>* ActionBindings, TArray<struct FLOTF2InputAxis>* AxisBindings);
	void LOTF2GetAllActionKeyBindings(TArray<struct FLOTF2Input>* Bindings);
};

// 0x0 (0x2A0 - 0x2A0)
// Class LOTF2.CreditsEntryWidget
class UCreditsEntryWidget : public UCommonUserWidget
{
public:

	static class UClass* StaticClass();
	static class UCreditsEntryWidget* GetDefaultObj();

	void SetTeam(TArray<class FString>& TeamMembers);
	void SetCategory(class FText& IcategoryName, TSoftObjectPtr<class UTexture2D>& Logo);
};

// 0x38 (0x300 - 0x2C8)
// Class LOTF2.CustomizationButton
class UCustomizationButton : public UCustomizationUserWidget
{
public:
	FMulticastInlineDelegateProperty_            OnEditAttribute;                                   // 0x2C8(0x10)(BlueprintVisible, ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	enum class ECustomizationCategory            CustomizationCategory;                             // 0x2D8(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EBodyShapeAttributeType           AttributeToEdit;                                   // 0x2D9(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEditAttribute;                                    // 0x2DA(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2991[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  FeatureName;                                       // 0x2E0(0x18)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	class UFocusableButtonWidget*                Button;                                            // 0x2F8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UCustomizationButton* GetDefaultObj();

	void OnButtonClicked();
};

// 0x400 (0x700 - 0x300)
// Class LOTF2.CustomizationCategoryButtonWidget
class UCustomizationCategoryButtonWidget : public UCustomizationButton
{
public:
	struct FButtonStyle                          ButtonStyle;                                       // 0x300(0x3F0)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	class UCustomizationFeatureLabelWidget*      Text_FeatureName;                                  // 0x6F0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2992[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCustomizationCategoryButtonWidget* GetDefaultObj();

};

// 0x20 (0x2E8 - 0x2C8)
// Class LOTF2.CustomizationFeatureLabelWidget
class UCustomizationFeatureLabelWidget : public UCustomizationUserWidget
{
public:
	class FText                                  FeatureName;                                       // 0x2C8(0x18)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	class UTextBlock*                            Text_FeatureName;                                  // 0x2E0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UCustomizationFeatureLabelWidget* GetDefaultObj();

	void SetText(class FText& Text);
};

// 0x60 (0x308 - 0x2A8)
// Class LOTF2.CustomizationLevelScript
class ACustomizationLevelScript : public ALevelScriptActor
{
public:
	class ALOTF2Character*                       MainPlayerCharacter;                               // 0x2A8(0x8)(BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class ALOTF2Character*>               PlayerPresets;                                     // 0x2B0(0x10)(BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class UMainMenuWidget*                       MainMenuWidget;                                    // 0x2C0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ACinematicPlayer*                      CinematicPlayerCharCreation;                       // 0x2C8(0x8)(BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ACinematicPlayer*                      CinematicPlayerCharCreationVideo;                  // 0x2D0(0x8)(BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bInteractionEnabled;                               // 0x2D8(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_29A5[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCharCreationCameraWidget*             CameraWidget;                                      // 0x2E0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FPlayerPresetData>             PresetCharacters;                                  // 0x2E8(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_29A6[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ACustomizationLevelScript* GetDefaultObj();

	void SetupCharacterMeshChangeRequested(bool bIsBlocking);
	void SetupCharacterFromLastSaveComplete();
	void SetPresetsVisibility(bool bVisible);
	void SetPlayerHidden(bool bPlayerHidden, bool bPresetsHidden);
	void SetMainMenuCamera();
	void RandomizePresets();
	void PlayPreCharCreationCinematic();
	void OnStartCustomization();
	bool OnSetupCharacter();
	void OnSelectedByController(enum class EUINavigation Navigation);
	void OnSelected(class ALOTF2Character* Target, bool bApplyPreset);
	void OnPresetStatusChanged(bool bShowPresets);
	void OnMainPlayerMeshChangeRequest(bool bIsBlocking);
	void OnMainPlayerMeshChanged();
	void OnEquipmentLoaded(class UEquipableInventoryItem* Item, class AActor* VisualInstance);
	class ACinematicPlayer* GetCinematicPlayerCharCreationVideo();
	class ACinematicPlayer* GetCinematicPlayerCharCreation();
	void BP_UpdateMesh();
};

// 0x608 (0x630 - 0x28)
// Class LOTF2.CustomizationSettings
class UCustomizationSettings : public UObject
{
public:
	uint8                                        Pad_2A36[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class EBodyShapeAttributeType, float> FloatAttributes;                                   // 0x40(0x50)(Edit, BlueprintVisible, SaveGame, Protected, NativeAccessSpecifierProtected)
	TMap<enum class ECustomizationCategory, struct FMorphTargetFeatureArray> MorphFeatureAttributes;                            // 0x90(0x50)(Edit, BlueprintVisible, SaveGame, Protected, NativeAccessSpecifierProtected)
	TMap<enum class EBodyShapeAttributeType, class FString> OptionAttributes;                                  // 0xE0(0x50)(Edit, BlueprintVisible, SaveGame, Protected, NativeAccessSpecifierProtected)
	TMap<enum class EBodyShapeAttributeType, struct FLinearColor> ColorAttributes;                                   // 0x130(0x50)(Edit, BlueprintVisible, SaveGame, Protected, NativeAccessSpecifierProtected)
	TMap<enum class ETattooLocation, class FString> TattooAttributes;                                  // 0x180(0x50)(Edit, BlueprintVisible, SaveGame, Protected, NativeAccessSpecifierProtected)
	TMap<enum class ECustomizationCategory, struct FCustomizationHeadArray> HeadFeatureSelected;                               // 0x1D0(0x50)(Edit, BlueprintVisible, SaveGame, Protected, NativeAccessSpecifierProtected)
	TMap<enum class EHeadPresetLocation, struct FMorphTargetFeature> HeadLocationValues;                                // 0x220(0x50)(Edit, BlueprintVisible, SaveGame, Protected, NativeAccessSpecifierProtected)
	TMap<class FString, class UTintItemData*>    TintAttributes;                                    // 0x270(0x50)(Edit, BlueprintVisible, SaveGame, Protected, NativeAccessSpecifierProtected)
	enum class ECharacterBodyType                CharacterBodyType;                                 // 0x2C0(0x1)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A37[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCharacterClassData                   CharClassData;                                     // 0x2C8(0x330)(Edit, BlueprintVisible, SaveGame, Protected, NativeAccessSpecifierProtected)
	bool                                         bCharacterClassSelected;                           // 0x5F8(0x1)(ZeroConstructor, Transient, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A38[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UCustomizableObjectInstance> CurrentSelectedPreset;                             // 0x600(0x30)(Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UCustomizationSettings* GetDefaultObj();

	void SetTintAttribute(const class FString& Identifier, class UTintItemData* Value);
	void SetOptionAttribute(enum class EBodyShapeAttributeType& bodyShapeAttribute, const class FString& Value);
	void SetMorphTargetValue(enum class ECustomizationCategory& bodyShapeAttribute, const class FString& FeatureName, float Value);
	void SetHeadValue(enum class EHeadPresetLocation Location, const class FString& HeadName, float Value);
	void SetHeadAttribute(enum class ECustomizationCategory Category, const TArray<class FString>& SelectedHeads);
	void SetFloatAttribute(enum class EBodyShapeAttributeType& bodyShapeAttribute, float Value);
	void SetCurrentPreset(TSoftObjectPtr<class UCustomizableObjectInstance> SelectedPreset);
	void SetColorAttribute(enum class EBodyShapeAttributeType& bodyShapeAttribute, const struct FLinearColor& Value);
	void SetCharacterClassData(struct FCharacterClassData& CharClassData);
	void SetBodyType(enum class ECharacterBodyType bodyType);
	void ResetSettings();
	void RemoveTattoo(enum class ETattooLocation Location);
	bool HasCharacterClassSelected();
	class UTintItemData* GetTintAttribute(const class FString& Identifier);
	TMap<enum class ETattooLocation, class FString> GetTattoos();
	TMap<enum class ECustomizationCategory, struct FCustomizationHeadArray> GetSelectedHeads();
	TMap<enum class EBodyShapeAttributeType, class FString> GetOptionAttributes();
	bool GetOptionAttribute(enum class EBodyShapeAttributeType& bodyShapeAttribute, class FString* Value);
	float GetMorphTargetValue(enum class ECustomizationCategory& bodyShapeAttribute, const class FString& FeatureName, float* Value);
	TMap<enum class ECustomizationCategory, struct FMorphTargetFeatureArray> GetMorphTargetAttributes();
	bool GetHeadLocationValue(enum class EHeadPresetLocation Location, class FString* HeadName, float* Value);
	TArray<class FString> GetHeadAttribute(enum class ECustomizationCategory Category);
	TMap<enum class EBodyShapeAttributeType, float> GetFloatAttributes();
	bool GetFloatAttribute(enum class EBodyShapeAttributeType& bodyShapeAttribute, float* Value);
	TMap<enum class EBodyShapeAttributeType, struct FLinearColor> GetColorAttributes();
	bool GetColorAttribute(enum class EBodyShapeAttributeType& bodyShapeAttribute, struct FLinearColor* Value);
	struct FCharacterClassData GetCharacterClassData();
	enum class ECharacterBodyType GetBodyType();
	void AddTattoo(enum class ETattooLocation Location, const class FString& TattooIdentifier);
};

// 0x130 (0x160 - 0x30)
// Class LOTF2.DamageAttributeSet
class UDamageAttributeSet : public UAttributeSet
{
public:
	struct FGameplayAttributeData                DamagePhysical;                                    // 0x30(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                DamageFire;                                        // 0x40(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                DamageHoly;                                        // 0x50(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                DamageDark;                                        // 0x60(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                DamageMagic;                                       // 0x70(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                DamageStamina;                                     // 0x80(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                DamagePoise;                                       // 0x90(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                DamageStagger;                                     // 0xA0(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                DamageProvisionalDamage;                           // 0xB0(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                DamageAggro;                                       // 0xC0(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                DamageThreat;                                      // 0xD0(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                DeflectionAttack;                                  // 0xE0(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                StaminaUsage;                                      // 0xF0(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                SpellPower;                                        // 0x100(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                VisceralDamageMultiplier;                          // 0x110(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                DamageBlockingPassthrough;                         // 0x120(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                Healing;                                           // 0x130(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                DamageLevel;                                       // 0x140(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                LocomotionDamageLevel;                             // 0x150(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UDamageAttributeSet* GetDefaultObj();

};

// 0xC8 (0xF0 - 0x28)
// Class LOTF2.DamageDealer
class UDamageDealer : public UObject
{
public:
	uint8                                        Pad_2A39[0xC8];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UDamageDealer* GetDefaultObj();

};

// 0x10 (0x100 - 0xF0)
// Class LOTF2.TraceBasedDamageDealer
class UTraceBasedDamageDealer : public UDamageDealer
{
public:
	uint8                                        Pad_2A3A[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTraceBasedDamageDealer* GetDefaultObj();

};

// 0x80 (0x180 - 0x100)
// Class LOTF2.HitboxBasedDamageDealer
class UHitboxBasedDamageDealer : public UTraceBasedDamageDealer
{
public:
	uint8                                        Pad_2A3B[0x80];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHitboxBasedDamageDealer* GetDefaultObj();

};

// 0x110 (0x290 - 0x180)
// Class LOTF2.ShapetraceBasedDamageDealer
class UShapetraceBasedDamageDealer : public UHitboxBasedDamageDealer
{
public:
	struct FTemporalHitboxArray                  HitBoxesBuffer;                                    // 0x180(0x10)(ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTemporalHitboxArray                  ReboundBoxesBuffer;                                // 0x190(0x10)(ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTemporalHitboxArray                  EnvironmentBoxesBuffer;                            // 0x1A0(0x10)(ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A3C[0xD8];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UHexVisLogEventRegister*               VisLogEventRegister;                               // 0x288(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UShapetraceBasedDamageDealer* GetDefaultObj();

};

// 0x240 (0x270 - 0x30)
// Class LOTF2.DamageDealtMultipliersAttributeSet
class UDamageDealtMultipliersAttributeSet : public UAttributeSet
{
public:
	struct FGameplayAttributeData                GlobalDamageDealtMultiplier;                       // 0x30(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                DamageDealtMultiplierPhysical;                     // 0x40(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                DamageDealtMultiplierFire;                         // 0x50(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                DamageDealtMultiplierHoly;                         // 0x60(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                DamageDealtMultiplierDark;                         // 0x70(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                DamageDealtMultiplierMagic;                        // 0x80(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                DamageDealtMultiplierStamina;                      // 0x90(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                DamageDealtMultiplierPoise;                        // 0xA0(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                DamageDealtMultiplierStagger;                      // 0xB0(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                DamageDealtMultiplierStatusEffect;                 // 0xC0(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                DamageDealtMultiplierStaggerWhenOpponentIsBlocking; // 0xD0(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                DamageDealtMultiplierProvisionalDamage;            // 0xE0(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                DamageDealtMultiplierAggro;                        // 0xF0(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                MetaDamageDealtMultiplier;                         // 0x100(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                HealingDealtMultiplier;                            // 0x110(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                HealingReceivedMultiplier;                         // 0x120(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                LightAttackDamageMultiplier;                       // 0x130(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                HeavyAttackDamageMultiplier;                       // 0x140(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                SoulDamageMultiplier;                              // 0x150(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                ThrowableDamageMultiplier;                         // 0x160(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                RangedDamageMultiplier;                            // 0x170(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                SpellDamageMultiplier;                             // 0x180(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                ThrowableFlaskDamageMultiplier;                    // 0x190(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                ThrowableGrenadeDamageMultiplier;                  // 0x1A0(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                RangedBowDamageMultiplier;                         // 0x1B0(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                RangedCrossbowDamageMultiplier;                    // 0x1C0(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                FullyChargedRangedDamageMultiplier;                // 0x1D0(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                ExtraStaggerMultiplierForHolyDamage;               // 0x1E0(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                ExtraStaggerDamageMultiplierForHeavyAttacks;       // 0x1F0(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                DamageMultiplierAgainstBurningTargets;             // 0x200(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                ExtraStaggerDamageAgainstBleedingTargets;          // 0x210(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                ExtraPerStatusEffectAdditionalDamageMultiplier;    // 0x220(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                KickPoiseDamageMultiplier;                         // 0x230(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                KickStaggerDamageMultiplier;                       // 0x240(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                StaggerFromBackDamageMultiplier;                   // 0x250(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                StaminaCostDualWieldAttackMultiplier;              // 0x260(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UDamageDealtMultipliersAttributeSet* GetDefaultObj();

};

// 0xF8 (0x128 - 0x30)
// Class LOTF2.DamageIntensityHitFXData
class UDamageIntensityHitFXData : public UPrimaryDataAsset
{
public:
	TMap<enum class EAnathemaHitFXDamageIntensity, class UAkSwitchValue*> DamageIntensitySwitches;                           // 0x30(0x50)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	struct FAkAnathemaEvent                      EffectivenessAkAnaEvent;                           // 0x80(0x50)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class UAkRtpc*                               EffectivenessRTPC;                                 // 0xD0(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<struct FGameplayTag, float>             AttackEffectivenessValues;                         // 0xD8(0x50)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UDamageIntensityHitFXData* GetDefaultObj();

};

// 0xD0 (0x100 - 0x30)
// Class LOTF2.DamageReceivedMultipliersAttributeSet
class UDamageReceivedMultipliersAttributeSet : public UAttributeSet
{
public:
	struct FGameplayAttributeData                GlobalDamageReceivedMultiplier;                    // 0x30(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                DamageReceivedMultiplierPhysical;                  // 0x40(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                DamageReceivedMultiplierFire;                      // 0x50(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                DamageReceivedMultiplierHoly;                      // 0x60(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                DamageReceivedMultiplierDark;                      // 0x70(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                DamageReceivedMultiplierMagic;                     // 0x80(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                DamageReceivedMultiplierStamina;                   // 0x90(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                DamageReceivedMultiplierPoise;                     // 0xA0(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                DamageReceivedMultiplierStagger;                   // 0xB0(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                DamageReceivedMultiplierProvisionalDamage;         // 0xC0(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                DamageReceivedMultiplierAggro;                     // 0xD0(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                DamageReceivedMultiplierStaggerFromBack;           // 0xE0(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                DamageReceivedMultiplierVisceral;                  // 0xF0(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UDamageReceivedMultipliersAttributeSet* GetDefaultObj();

};

// 0x20 (0xC0 - 0xA0)
// Class LOTF2.DamageWindowBase
class UDamageWindowBase : public UAnimNotifyState_BaseConditionalTag
{
public:
	struct FDataTableRowHandle                   AttackHitBoxesDefinition;                          // 0xA0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	enum class EFEquipmentSlot                   SlotToUse;                                         // 0xB0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        HitboxRank;                                        // 0xB1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        HitboxGroupID;                                     // 0xB2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A3D[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          AttackDirection;                                   // 0xB4(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A3E[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UDamageWindowBase* GetDefaultObj();

};

// 0x20 (0xE0 - 0xC0)
// Class LOTF2.DamageWindow
class UDamageWindow : public UDamageWindowBase
{
public:
	struct FDataTableRowHandle                   AttackDamageDefinition;                            // 0xC0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FDamageDefinitionIdentifier           DamageDefinitionID;                                // 0xD0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTag                          AttackDirectionOverride;                           // 0xD8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UDamageWindow* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class LOTF2.DeactivateComponentsByTagOnDeathComponent
class UDeactivateComponentsByTagOnDeathComponent : public UActorComponent
{
public:

	static class UClass* StaticClass();
	static class UDeactivateComponentsByTagOnDeathComponent* GetDefaultObj();

	void OnDeath(class AActor* InstigatorActor, struct FGameplayTagContainer& InstigatorTags, bool bDeathWasObserved);
};

// 0x0 (0x4D8 - 0x4D8)
// Class LOTF2.DeathScreenWidget
class UDeathScreenWidget : public UHexActivatableWidget
{
public:

	static class UClass* StaticClass();
	static class UDeathScreenWidget* GetDefaultObj();

	void SpawnDeathPostProcess();
	void EnableContinueButton();
	void DestroyDeathPostProcess();
};

// 0x18 (0x2B8 - 0x2A0)
// Class LOTF2.Debris
class ADebris : public AActor
{
public:
	class UStaticMeshComponent*                  DebrisMesh;                                        // 0x2A0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  FadeOutMaterialParameter;                          // 0x2A8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A40[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ADebris* GetDefaultObj();

};

// 0x80 (0xB0 - 0x30)
// Class LOTF2.DebugCharacterSyncedAnimWindow
class UDebugCharacterSyncedAnimWindow : public UAnimNotifyState
{
public:
	TSoftClassPtr<class UCharacterData>          CharacterDataClass;                                // 0x30(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimMontage>           MontageToPlay;                                     // 0x60(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LeaderAttachSocketName;                            // 0x90(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  FollowerAttachSocketName;                          // 0x98(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A41[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UDebugCharacterSyncedAnimWindow* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class LOTF2.ParryWindow
class UParryWindow : public UAnimNotifyState
{
public:
	TSubclassOf<class UGameplayEffect>           ParryGE;                                           // 0x30(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FActiveGameplayEffectHandle           ParryGEHandle;                                     // 0x38(0x8)(Edit, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UParryWindow* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class LOTF2.DebugParryWindow
class UDebugParryWindow : public UParryWindow
{
public:

	static class UClass* StaticClass();
	static class UDebugParryWindow* GetDefaultObj();

};

// 0x18 (0x2D8 - 0x2C0)
// Class LOTF2.Debug_GameVersion
class UDebug_GameVersion : public UExtensionPointEntryWidget
{
public:
	class UCommonTextBlock*                      Text_DataBranchIdVersion;                          // 0x2C0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                      Text_CodeBranchIdVersion;                          // 0x2C8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                      Text_EngineVersion;                                // 0x2D0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UDebug_GameVersion* GetDefaultObj();

};

// 0x50 (0x78 - 0x28)
// Class LOTF2.Decision
class UDecision : public UObject
{
public:
	class FString                                DecisionName;                                      // 0x28(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        Importance;                                        // 0x38(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A42[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UAIConsideration*>              M_vHardConsiderations;                             // 0x40(0x10)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UAIConsideration*>              M_vConsiderations;                                 // 0x50(0x10)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTag                          ActionType;                                        // 0x60(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        Cooldown;                                          // 0x68(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A43[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UDecision* GetDefaultObj();

	void BP_RunDecision(class ABaseAIController* AIController);
};

// 0x8 (0x80 - 0x78)
// Class LOTF2.DecisionAction
class UDecisionAction : public UDecision
{
public:
	class UCharacterAction*                      Action;                                            // 0x78(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UDecisionAction* GetDefaultObj();

};

// 0x10 (0x88 - 0x78)
// Class LOTF2.DecisionActionList
class UDecisionActionList : public UDecision
{
public:
	TArray<class UCharacterAction*>              Actions;                                           // 0x78(0x10)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UDecisionActionList* GetDefaultObj();

};

// 0x8 (0x80 - 0x78)
// Class LOTF2.DecisionBehaviorTree
class UDecisionBehaviorTree : public UDecision
{
public:
	class UBehaviorTree*                         BTAsset;                                           // 0x78(0x8)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UDecisionBehaviorTree* GetDefaultObj();

};

// 0x50 (0x78 - 0x28)
// Class LOTF2.DecisionContext
class UDecisionContext : public UObject
{
public:
	class FString                                ContextName;                                       // 0x28(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EeAIContextType                   ContextType;                                       // 0x38(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A44[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UDecision*>                     Decisions;                                         // 0x40(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A45[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSubclassOf<class UDecision>>         DecisionsClasses;                                  // 0x60(0x10)(Edit, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	bool                                         bPlayerValid;                                      // 0x70(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A46[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UDecisionContext* GetDefaultObj();

	bool IsRunOnlyOnce();
};

// 0x50 (0x78 - 0x28)
// Class LOTF2.DecisionFactory
class UDecisionFactory : public UObject
{
public:
	uint8                                        Pad_2A47[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UDecisionFactory* GetDefaultObj();

};

// 0x28 (0x98 - 0x70)
// Class LOTF2.Decorator_UtilityBlackboard
class UDecorator_UtilityBlackboard : public UBTDecoratorUtilityBase
{
public:
	struct FBlackboardKeySelector                BlackboardKey;                                     // 0x70(0x28)(Edit, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UDecorator_UtilityBlackboard* GetDefaultObj();

};

// 0xB0 (0xE0 - 0x30)
// Class LOTF2.DefenseAttributeSet
class UDefenseAttributeSet : public UAttributeSet
{
public:
	struct FGameplayAttributeData                DefensePhysical;                                   // 0x30(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                DefenseFire;                                       // 0x40(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                DefenseHoly;                                       // 0x50(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                DefenseDark;                                       // 0x60(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                DefenseMagic;                                      // 0x70(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                DefensePoise;                                      // 0x80(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                DefenseStamina;                                    // 0x90(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                DefenseStagger;                                    // 0xA0(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                DefenseProvisionalDamage;                          // 0xB0(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                DefenseAggro;                                      // 0xC0(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                DefenseThreat;                                     // 0xD0(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UDefenseAttributeSet* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class LOTF2.DeflectDamageComponent
class UDeflectDamageComponent : public UActorComponent
{
public:

	static class UClass* StaticClass();
	static class UDeflectDamageComponent* GetDefaultObj();

};

// 0x248 (0x280 - 0x38)
// Class LOTF2.DeveloperMenuSettings
class UDeveloperMenuSettings : public UHexDeveloperSettings
{
public:
	TSoftClassPtr<class UGameplayEffect>         DieGameplayEffect;                                 // 0x38(0x30)(Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UGameplayEffect>         GrantSoulFlayChargesGameplayEffect;                // 0x68(0x30)(Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UGameplayEffect>         SetMaxSoulFlayChargesGameplayEffect;               // 0x98(0x30)(Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UGameplayEffect>         SetSoulFlayChargesGameplayEffect;                  // 0xC8(0x30)(Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UItemData>               AnchorSeedItemDataClass;                           // 0xF8(0x30)(Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UItemData>               UmbralMemoryItemDataClass;                         // 0x128(0x30)(Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          UmbralForcedTranscendGameplayTag;                  // 0x158(0x8)(Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          UmbralReincarnateGameplayTag;                      // 0x160(0x8)(Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          TransitionTranscendGameplayTag;                    // 0x168(0x8)(Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          TransitionResurrectGameplayTag;                    // 0x170(0x8)(Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          TransitionFastTravelGameplayTag;                   // 0x178(0x8)(Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          ResurrectCoopPartnerGameplayTag;                   // 0x180(0x8)(Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UDataTable>             InitialCharacterClasses;                           // 0x188(0x30)(Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UUserWidget>             RunesProtoScreenClass;                             // 0x1B8(0x30)(Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AMarketingTool>          MarketingToolClass;                                // 0x1E8(0x30)(Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CureIllnessBattleEffectIdentifier;                 // 0x218(0x8)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UDataTable>             AdaptiveTriggerPropertiesTable;                    // 0x220(0x30)(Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class USubAutonomousAbilityData> KillingAreaClass;                                  // 0x250(0x30)(Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UDeveloperMenuSettings* GetDefaultObj();

};

// 0x328 (0x360 - 0x38)
// Class LOTF2.DeveloperMenuSettingsRuntime
class UDeveloperMenuSettingsRuntime : public UHexDeveloperSettings
{
public:
	bool                                         bShowFloatingWindows;                              // 0x38(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAlignMenuToLeftSide;                              // 0x39(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLoadIncompatibleSavedGames;                       // 0x3A(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bGodModeHyperArmor;                                // 0x3B(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bGodModeImmortalEnemy;                             // 0x3C(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bGodModeImmortalPlayer;                            // 0x3D(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bGodModeStamina;                                   // 0x3E(0x1)(Net, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bGodModeMana;                                      // 0x3F(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bGodModeAmmo;                                      // 0x40(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bGodModeSoulFlayCharges;                           // 0x41(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bGodModeSeeds;                                     // 0x42(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bGodModeOneHitKill;                                // 0x43(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bGodModeKillOnStabOrGrab;                          // 0x44(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bGodModeOneHitFullStaggerDamage;                   // 0x45(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bGodModeSuperSpeed;                                // 0x46(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHardcoreModeOneHitDeath;                          // 0x47(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHardcoreModeDeathOnStabOrGrab;                    // 0x48(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bActivateKillingArea;                              // 0x49(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A48[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        InstaKillTimeToReApplyDamage;                      // 0x4C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InstaKillAreaRadius;                               // 0x50(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InstaKillDamagePercentHealth;                      // 0x54(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowPlayerIdsInFriendsList;                       // 0x58(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHudVisible;                                       // 0x59(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bVersionNumberVisible;                             // 0x5A(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowSpawnerState;                                 // 0x5B(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIgnoreCinematics;                                 // 0x5C(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIgnoreCinematicsLoadingScreen;                    // 0x5D(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSkipInitialScreens;                               // 0x5E(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSpawnSeedEnabled;                                 // 0x5F(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRegionScalingDisabled;                            // 0x60(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bNGPlusLegacyScalingEnabled;                       // 0x61(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSpawnEnemiesEnabled;                              // 0x62(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSpawnFriendNPCsEnabled;                           // 0x63(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLocksmithEnabled;                                 // 0x64(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForceItemsToDrop;                                 // 0x65(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIgnoreEquipStatsRequirement;                      // 0x66(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIgnoreMagicFamilyRequirement;                     // 0x67(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForceFeedbackEnabled;                             // 0x68(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A49[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TimeDilation;                                      // 0x6C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUnlockAllVendorInteractions;                      // 0x70(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUnlockAllRemembrances;                            // 0x71(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUnlockRunes;                                      // 0x72(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowHiddenInventoryItems;                         // 0x73(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowPlayerCoordinatesEnabled;                     // 0x74(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowCheatsMessageEnabled;                         // 0x75(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowStreamingVolumes;                             // 0x76(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowStreamingLevels;                              // 0x77(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EShowStreamingLevelsSortMode      ShowStreamingLevelsSortMode;                       // 0x78(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowLevelStreamingChangesOnly;                    // 0x79(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowStaticMeshInfo;                               // 0x7A(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDebugStreamingVolumes;                            // 0x7B(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowVisibilityLevelChanges;                       // 0x7C(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowHitBoxesEnabled;                              // 0x7D(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A4A[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        VisualHitBoxesLifeTime;                            // 0x80(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowScreenMessages;                               // 0x84(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowAutonomousAbilitiesDebug;                     // 0x85(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowAutonomousAbilitiesDebugActorsInside;         // 0x86(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableAutonomousAbilitiesEnvInteraction;          // 0x87(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowAutonomousAbilitiesCollisionShapes;           // 0x88(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowAutonomousAbilitiesSpawnRaycasts;             // 0x89(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A4B[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AutonomousAbilitiesDebugDuration;                  // 0x8C(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowCombatBalancingDebug;                         // 0x90(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowDeathPositionsEnabled;                        // 0x91(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowLastPlayerPositionsEnabled;                   // 0x92(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDrawLightShapes;                                  // 0x93(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableLightShapesXRayMode;                        // 0x94(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowLightNames;                                   // 0x95(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowExpensiveLightsOnly;                          // 0x96(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowNaturalLightingPlayerParameters;              // 0x97(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowNaturalLightingEnvParameters;                 // 0x98(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableScalabilityLightManager;                    // 0x99(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowWindParameters;                               // 0x9A(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableHeadlight;                                  // 0x9B(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowUserVariables;                                // 0x9C(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowLevelGuidance;                                // 0x9D(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDebugAttributesEnabled;                           // 0x9E(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowAttackReachEnabled;                           // 0x9F(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDebugPostProcessVolumes;                          // 0xA0(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowSoftCapsulesEnabled;                          // 0xA1(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowDistanceToEnemiesEnabled;                     // 0xA2(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowDistanceToEnemiesFromCamera;                  // 0xA3(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxDistanceToEnemiesInMeters;                      // 0xA4(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowPlayerOverlappingActorsEnabled;               // 0xA8(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowAICharacterStatsEnabled;                      // 0xA9(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowAICharacterCapsuleEnabled;                    // 0xAA(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowAICharacterInfoEnabled;                       // 0xAB(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VisibilityCullingAngle;                            // 0xAC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CharacterTickBudget;                               // 0xB0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxEnabledCharacters;                              // 0xB4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxDistanceToScoreInM;                             // 0xB8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinDistanceToForceHighQualityAnimationTickingInM;  // 0xBC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPerceptionCompOpt;                                // 0xC0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLodManagerActivated;                              // 0xC1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLodManagerDebug;                                  // 0xC2(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowRelevantVolumeBoxesEnabled;                   // 0xC3(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowManagedSkeletalMeshCollisionEnabledInfo;      // 0xC4(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAIPerceptionEnabled;                              // 0xC5(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForceParryEnabled;                                // 0xC6(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPlayerAutoParryEnabled;                           // 0xC7(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bFriendlyFireEnabled;                              // 0xC8(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDefaultPresetEnabled;                             // 0xC9(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAPresetEnabled;                                   // 0xCA(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBPresetEnabled;                                   // 0xCB(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllFastTravelLocationsUnlocked;                   // 0xCC(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bWitherEnabled;                                    // 0xCD(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowWitherDebugInfo;                              // 0xCE(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSoulsLanternIgnoresHotSpots;                      // 0xCF(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseForgedAnchorsOldPlacementRules;                // 0xD0(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowForgedAnchorErrorMessage;                     // 0xD1(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A4C[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                ForgedAnchorErrorMessage;                          // 0xD8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseLightsCustomDualRealmBehaviour;                // 0xE8(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A4D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        NaturalLightingPostProcessMaximumWeight;           // 0xEC(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableFailSafeForFallingEndlessDeath;             // 0xF0(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bProvisionalDamageDeathWishApplyOnMaxHP;           // 0xF1(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDeathWishRefillHp;                                // 0xF2(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldOverrideProvisionalDamageForDeathWish;      // 0xF3(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ProvisionalDamageDeathWishPercentage;              // 0xF4(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldOverrideProvisionalDamageForFirstDeath;     // 0xF8(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A4E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ProvisionalDamageFirstDeathPercentage;             // 0xFC(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRevengeMechanicEnabled;                           // 0x100(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRevengeDebugMode;                                 // 0x101(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowRevengeDebugInfo;                             // 0x102(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldIgnoreQualifyingThreshold;                  // 0x103(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDrawFocusDirection;                               // 0x104(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDrawLastValidLocations;                           // 0x105(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDrawSelectedLastValidLocation;                    // 0x106(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSaveWorldStateDataToDebugFile;                    // 0x107(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCreateTickAggregatorSubsystem;                    // 0x108(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowChaosSceneStats;                              // 0x109(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableTickAggregatorSubsystem;                    // 0x10A(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bNoDeflectPreventsStagger;                         // 0x10B(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bApplyBlueDamageToEnemyOnPerfectDodge;             // 0x10C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableQuickSoulFlayExplosionAfterPerfectDodge;    // 0x10D(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRecoverSoulFlayChargesOnPerfectBlock;             // 0x10E(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRecoverSoulFlayChargesOnPerfectDodge;             // 0x10F(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPlayerSoulBurstOnFullBlueDamage;                  // 0x110(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisplayPlayerAISound;                             // 0x111(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseLegacyInstantStaggerFromBack;                  // 0x112(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseVFXTrajectory;                                 // 0x113(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A4F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                LastSelectedCharacterName;                         // 0x118(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSet<class FString>                          CheckedAbilities;                                  // 0x128(0x50)(Config, NativeAccessSpecifierPublic)
	TSet<class FString>                          CheckedAttributeSets;                              // 0x178(0x50)(Config, NativeAccessSpecifierPublic)
	bool                                         bShowGASAbilitiesWindow;                           // 0x1C8(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowGASAbilitiesActivity;                         // 0x1C9(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowGASGameplayEvents;                            // 0x1CA(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A50[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        TimeToShowGASAbilitiesNotifications;               // 0x1CC(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowGASGameplayEffects;                           // 0x1D0(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowGASAttributes;                                // 0x1D1(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowGASOwnedGameplayTags;                         // 0x1D2(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowInventoryGameplayTags;                        // 0x1D3(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowGASBlockedAbilitiesTags;                      // 0x1D4(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowGASInterruptibleAbility;                      // 0x1D5(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowCurrentAnimation;                             // 0x1D6(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowCombatInfo;                                   // 0x1D7(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowCharacterBlockingAttackDebug;                 // 0x1D8(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowCurves;                                       // 0x1D9(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowPathFindingPoints;                            // 0x1DA(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowPatrolPathPoints;                             // 0x1DB(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bClientReviveNoInputBugLogging;                    // 0x1DC(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bClientReviveShowClientStateWindow;                // 0x1DD(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowCameraDebuggingMenu;                          // 0x1DE(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowCurrentHitObject;                             // 0x1DF(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowLockOnDebugView;                              // 0x1E0(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForceFemaleRegularMorphTarget;                    // 0x1E1(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowSelectClosestTargetDebugView;                 // 0x1E2(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowLockOnWeights;                                // 0x1E3(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBlockChangeTargetWhileLockOn;                     // 0x1E4(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableStrengthTargettingExperimental;             // 0x1E5(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnablePrioritizeCenterLockOnExperimental;         // 0x1E6(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowLocomotionState;                              // 0x1E7(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowStances;                                      // 0x1E8(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowMovesetsStack;                                // 0x1E9(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowMontagesActivity;                             // 0x1EA(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowMontagesNotifies;                             // 0x1EB(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowAnimSequencesNotifies;                        // 0x1EC(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisplayDamageReceivedStats;                       // 0x1ED(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowInputActionEvents;                            // 0x1EE(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowAllInputEvents;                               // 0x1EF(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TimeToShowInputEvents;                             // 0x1F0(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxLinesInputEvents;                               // 0x1F4(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableDynamicPerchRadius;                         // 0x1F8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bTranscendToUmbralOnRevive;                        // 0x1F9(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseMontageInstanceId;                             // 0x1FA(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAimToFinalPointWithoutRaycast;                    // 0x1FB(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowCenterOfScreenRaycastHit;                     // 0x1FC(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowQuests;                                       // 0x1FD(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDrawPickupsDebug;                                 // 0x1FE(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDrawPickupsDebugNamesAlways;                      // 0x1FF(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        bPickupsDebugDetectionDistance;                    // 0x200(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        bPickupsDebugNameOffset;                           // 0x204(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowPlayWorldShakeFeedback;                       // 0x208(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableEnsureForInterruptibleAbilities;            // 0x209(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDrawDebugCharacterMeshInVisLog;                   // 0x20A(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDrawDebugPlayersMeshInVisLog;                     // 0x20B(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableChaosPhysicsDebugInVisLog;                  // 0x20C(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A51[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<struct FKey, class FString>             SavedPlayerCoordinates;                            // 0x210(0x50)(Config, NativeAccessSpecifierPublic)
	bool                                         bDrawDebugCharacterSpecialDamageSpots;             // 0x260(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHighlightDestructibles;                           // 0x261(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A52[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        SelectedClassIndex;                                // 0x264(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableTestCharacterClasses;                       // 0x268(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A53[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LightMaxDrawDistanceScale;                         // 0x26C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CastShadowsMaxDrawDistanceInMeters;                // 0x270(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DirectionalLightMaxTraceDistance;                  // 0x274(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHDR;                                              // 0x278(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHDRUICompositeMode;                               // 0x279(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A54[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        HDRUILevel;                                        // 0x27C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bFSR;                                              // 0x280(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A55[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        FSRQualityMode;                                    // 0x284(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FSRSharpness;                                      // 0x288(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDLSS;                                             // 0x28C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A56[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        DLSSQualityMode;                                   // 0x290(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DLSSSharpness;                                     // 0x294(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDLSSPreferNISSharpen;                             // 0x298(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bNIS;                                              // 0x299(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A57[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        NISSharpness;                                      // 0x29C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowPlatformInfo;                                 // 0x2A0(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowChunkInstallInfo;                             // 0x2A1(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPersistentShowFlags;                              // 0x2A2(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowFlagsCollision;                                // 0x2A3(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowFlagsNavigation;                               // 0x2A4(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowFlagsVisualizeHDR;                             // 0x2A5(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowFlagsLightComplexity;                          // 0x2A6(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowFlagsQuadOverdraw;                             // 0x2A7(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowFlagsVisualizeShadingModels;                   // 0x2A8(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowFlagsDynamicShadows;                           // 0x2A9(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowFlagsContactShadows;                           // 0x2AA(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowFlagsCapsuleShadows;                           // 0x2AB(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowFlagsVolumetricFog;                            // 0x2AC(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowFlagsLumenGlobalIllumination;                  // 0x2AD(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowFlagsLumenReflections;                         // 0x2AE(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowFlagsStaticMeshes;                             // 0x2AF(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowFlagsInstancedStaticMeshes;                    // 0x2B0(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowFlagsNaniteMeshes;                             // 0x2B1(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowFlagsInstancedFoliage;                         // 0x2B2(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowFlagsInstancedGrass;                           // 0x2B3(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowFlagsSkeletalMeshes;                           // 0x2B4(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowFlagsParticles;                                // 0x2B5(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowFlagsDecals;                                   // 0x2B6(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowFlagsLandscape;                                // 0x2B7(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowFlagsSkyLighting;                              // 0x2B8(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowFlagsDirectionalLights;                        // 0x2B9(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowFlagsPointLights;                              // 0x2BA(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowFlagsSpotLights;                               // 0x2BB(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowFlagsRectLights;                               // 0x2BC(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowFlagsVisualizeGlobalDistanceField;             // 0x2BD(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowFlagsVisualizeMeshDistanceFields;              // 0x2BE(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowFlagsVisualizeLumen;                           // 0x2BF(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        VisualizeLumenMode;                                // 0x2C0(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowFlagsPostProcessing;                           // 0x2C4(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowFlagsPostProcessMaterial;                      // 0x2C5(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowFlagsBloom;                                    // 0x2C6(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowFlagsDepthOfField;                             // 0x2C7(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowFlagsMotionBlur;                               // 0x2C8(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowFlagsVignette;                                 // 0x2C9(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowFlagsGrain;                                    // 0x2CA(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowFlagsSceneColorFringe;                         // 0x2CB(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShowFlagsLensFlares;                               // 0x2CC(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPersistentStats;                                  // 0x2CD(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Stat_fps;                                          // 0x2CE(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Stat_unit;                                         // 0x2CF(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Stat_unitgraph;                                    // 0x2D0(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Stat_game;                                         // 0x2D1(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Stat_gpu;                                          // 0x2D2(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Stat_rhi;                                          // 0x2D3(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Stat_quick;                                        // 0x2D4(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Stat_uobjects;                                     // 0x2D5(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Stat_memoryplatform;                               // 0x2D6(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Stat_memory;                                       // 0x2D7(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Stat_memorystaticmesh;                             // 0x2D8(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Stat_slatememory;                                  // 0x2D9(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Stat_streaming;                                    // 0x2DA(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Stat_mapbuilddata;                                 // 0x2DB(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Stat_initviews;                                    // 0x2DC(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Stat_scenerendering;                               // 0x2DD(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Stat_lightrendering;                               // 0x2DE(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Stat_shadowrendering;                              // 0x2DF(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Stat_net;                                          // 0x2E0(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Stat_niagara;                                      // 0x2E1(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Stat_niagaraoverview;                              // 0x2E2(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Stat_niagarasystems;                               // 0x2E3(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Stat_slate;                                        // 0x2E4(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Stat_anim;                                         // 0x2E5(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Stat_chaos;                                        // 0x2E6(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisplayAutoSaveCooldownDebug;                     // 0x2E7(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAutoSaveEnabled;                                  // 0x2E8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowPersistentDataDebugDisplay;                   // 0x2E9(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowAggroDebugDisplay;                            // 0x2EA(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowAggroLines;                                   // 0x2EB(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowTargetChangeLocks;                            // 0x2EC(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowAggroNumbers;                                 // 0x2ED(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowAggroDetails;                                 // 0x2EE(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAutoLockOnTarget;                                 // 0x2EF(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAutoTarget;                                       // 0x2F0(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisplayBlood;                                     // 0x2F1(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInvertYAxis;                                      // 0x2F2(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInvertXAxis;                                      // 0x2F3(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSubtitles;                                        // 0x2F4(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLoadGameOnWorldReset;                             // 0x2F5(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowLoadingScreenWidget;                          // 0x2F6(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForceHUDInputIconVisibilty;                       // 0x2F7(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHUDInputIconsVisible;                             // 0x2F8(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUnlockGalleryEntries;                             // 0x2F9(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A58[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class EDLCName, bool>              DlcCheatUnlocks;                                   // 0x300(0x50)(Config, NativeAccessSpecifierPublic)
	float                                        DebugSphereTraceRadiusMeters;                      // 0x350(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A59[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	double                                       LastTraceTime;                                     // 0x358(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UDeveloperMenuSettingsRuntime* GetDefaultObj();

};

// 0x178 (0x1A8 - 0x30)
// Class LOTF2.DeveloperMenuSubsystem
class UDeveloperMenuSubsystem : public UEngineSubsystem
{
public:
	class AMarketingTool*                        MarketingToolActor;                                // 0x30(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGameplayEffect*                       DieGameplayEffect;                                 // 0x38(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGameplayEffect*                       GrantSoulFlayChargesGameplayEffect;                // 0x40(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>           SetMaxSoulFlayChargesGameplayEffect;               // 0x48(0x8)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>           SetSoulFlayChargesGameplayEffect;                  // 0x50(0x8)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UItemData*                             AnchorSeedItemData;                                // 0x58(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UItemData*                             UmbralMemoryItemData;                              // 0x60(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHexGameUserSettings*                  UserSettings;                                      // 0x68(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnForgedAnchorVolumeVisualsChanged;                // 0x70(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class FString                                LastReboundActorName;                              // 0x80(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            InitialCharacterClasses;                           // 0x90(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDataTable*                            AdaptiveTriggerPropertiesTable;                    // 0x98(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class USubAutonomousAbilityData> KillingAreaClass;                                  // 0xA0(0x8)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDeveloperMenuSettingsRuntime*         DevSettings;                                       // 0xA8(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class APostProcessVolume*                    DebugPostProcessVolume;                            // 0xB0(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2A63[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class APlayerCharacter*                      DelayedLoopPC;                                     // 0xC0(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2A64[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                AAActor_Killer;                                    // 0xF8(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2A65[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UCharacterData*>                AllCharacterData;                                  // 0x140(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2A66[0x58];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UDeveloperMenuSubsystem* GetDefaultObj();

	void SetTimeDilation(float TimeDilation);
	void RemoveUserVariable(const class FString& Category, const class FString& VariableName);
	void RemoveUserCheckbox(const class FString& CategoryName, const class FString& buttonName);
	void RemoveUserCategory(const class FString& CategoryName);
	void RemoveUserButton(const class FString& CategoryName, const class FString& buttonName);
	void RemoveAllUserCategories();
	void PushUserVariableValue(const class FString& CategoryName, const class FString& VariableName, float NewValue);
	void OnForgedAnchorVolumeVisualsChanged__DelegateSignature(bool bIsVisualsEnabled);
	void ObtainAllWeapons(class APlayerCharacter* PlayerCharacter);
	void ObtainAllUsables(class APlayerCharacter* PlayerCharacter);
	void ObtainAllUpgradeMaterials(class APlayerCharacter* PlayerCharacter);
	void ObtainAllTutorials(class APlayerCharacter* PlayerCharacter);
	void ObtainAllTints(class APlayerCharacter* PlayerCharacter);
	void ObtainAllRunes(class APlayerCharacter* PlayerCharacter);
	void ObtainAllQuestItems(class APlayerCharacter* PlayerCharacter);
	void ObtainAllMagicSpells(class APlayerCharacter* PlayerCharacter);
	void ObtainAllKeys(class APlayerCharacter* PlayerCharacter);
	void ObtainAllJournalItems(class APlayerCharacter* PlayerCharacter);
	void ObtainAllItems(class APlayerCharacter* PlayerCharacter);
	void ObtainAllGestures(class APlayerCharacter* PlayerCharacter);
	void ObtainAllArmorPieces(class APlayerCharacter* PlayerCharacter);
	void ObtainAllAmmos(class APlayerCharacter* PlayerCharacter);
	float GetFloatDelegate__DelegateSignature();
	bool GetDeveloperMenuRuntimeSettingsValueByName(class FName PropertyName);
	void AddUserVariableByPushing(const class FString& CategoryName, const class FString& VariableName, int32 SampleCount, float PlotMinValue, float PlotMaxValue);
	void AddUserVariableByPolling(const class FString& Category, const class FString& VariableName, FDelegateProperty_& GetValueDelegate, int32 SampleCount, float SampleFrequencyInSeconds, float PlotMinValue, float PlotMaxValue);
	void AddUserCheckbox(const class FString& CategoryName, const class FString& buttonName, bool InitialValue, FDelegateProperty_& ActionDelegate);
	void AddUserButton(const class FString& CategoryName, const class FString& buttonName, FDelegateProperty_& ActionDelegate);
	void ActionDelegate__DelegateSignature();
};

// 0x38 (0xE8 - 0xB0)
// Class LOTF2.DialogueComponent
class UDialogueComponent : public UActorComponent
{
public:
	TSubclassOf<class ADialogueSequenceActor>    AssociatedDialogueSequence;                        // 0xB0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnDialogueFinished;                                // 0xB8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class ADialogueSequenceActor*                CurrentDialogueSequence;                           // 0xC8(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A69[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnDialogueStarted;                                 // 0xD8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UDialogueComponent* GetDefaultObj();

	bool StartDialogueSequence(class APlayerController* InstigatingPlayer, class AActor* SpeakingActor, TSubclassOf<class ADialogueSequenceActor> DialogueSequence);
	bool StartAssociatedDialogueSequence(class APlayerController* InstigatingPlayer, class AActor* SpeakingActor);
	bool IsCurrentlyInDialogueSequence();
	void HandleDialogueSequenceFinished(class ADialogueSequenceActor* DialogueSequenceActor);
};

// 0x28 (0x2E0 - 0x2B8)
// Class LOTF2.DialogueQuestionButton
class UDialogueQuestionButton : public UHexFocusableWidget
{
public:
	uint8                                        Pad_2A6A[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFocusableButtonWidget*                Button;                                            // 0x2C8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonRichTextBlock*                  Text_Question;                                     // 0x2D0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A6B[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UDialogueQuestionButton* GetDefaultObj();

	void OnButtonClick();
};

// 0x20 (0x2C0 - 0x2A0)
// Class LOTF2.DialogueSequenceActor
class ADialogueSequenceActor : public AActor
{
public:
	FMulticastInlineDelegateProperty_            OnDialogueSequenceFinished;                        // 0x2A0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>               SubtitleWidgetClass;                               // 0x2B0(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                           SubtitleWidgetObject;                              // 0x2B8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ADialogueSequenceActor* GetDefaultObj();

	void StartDialogueSequence(class APlayerController* InitiatingPlayer, class AActor* SpeakingActor);
	void SetUpSubtitleWidget(class APlayerController* OwningPlayer);
	void PerformDialogueSequence(class AActor* SpeakingActor);
	void CleanUpDialogueSequence();
};

// 0x80 (0xB0 - 0x30)
// Class LOTF2.DlcSubsystem
class UDlcSubsystem : public UGameInstanceSubsystem
{
public:
	uint8                                        Pad_2A6C[0x80];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UDlcSubsystem* GetDefaultObj();

};

// 0xC8 (0x178 - 0xB0)
// Class LOTF2.DoDamageComponent
class UDoDamageComponent : public UActorComponent
{
public:
	struct FTraceSettings                        DefaultTraceSettings;                              // 0xB0(0x10)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        MaxNoReboundDifference;                            // 0xC0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A70[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class FName, class UDamageDealer*>      ActiveDamageDealers;                               // 0xC8(0x50)(Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2A71[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bDisabledByGameplayTags;                           // 0x168(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2A72[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UDoDamageComponent* GetDefaultObj();

	void OnMontageFinished(class UAnimMontage* Montage, bool bInterrupted);
	void OnDamageDealerDisabledGameplayTagCountChanged(const struct FGameplayTag& Tag, int32 Count);
};

// 0x8 (0x30 - 0x28)
// Class LOTF2.DodgeActionPayloadFactory
class UDodgeActionPayloadFactory : public UInputActionPayloadFactory
{
public:
	class UInputAction*                          InputMovementAction;                               // 0x28(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UDodgeActionPayloadFactory* GetDefaultObj();

};

// 0x18 (0x40 - 0x28)
// Class LOTF2.MockDodgeActionPayloadFactory
class UMockDodgeActionPayloadFactory : public UInputActionPayloadFactory
{
public:
	struct FVector                               RelativeDirection;                                 // 0x28(0x18)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UMockDodgeActionPayloadFactory* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class LOTF2.DrawDebugGameplaySubsystem
class UDrawDebugGameplaySubsystem : public UTickableWorldSubsystem
{
public:

	static class UClass* StaticClass();
	static class UDrawDebugGameplaySubsystem* GetDefaultObj();

};

// 0x110 (0x468 - 0x358)
// Class LOTF2.DualRealmAnchorActor
class ADualRealmAnchorActor : public AAnathemaSyncedInteractable
{
public:
	FMulticastInlineDelegateProperty_            OnStateChanged;                                    // 0x358(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnForgeStateChanged;                               // 0x368(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UDualRealmBehaviourComponent*          DualRealmBehaviourComponent;                       // 0x378(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USpawnAreaComponent*                   SpawnAreaComponent;                                // 0x380(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                       WorldCollisionRoot;                                // 0x388(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                       InteractionCollisionRoot;                          // 0x390(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                       EnemyPreventUsageAreasRoot;                        // 0x398(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEnemyDetectionComponent*              EnemyDetectionComponent;                           // 0x3A0(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RequiredTimeToForge;                               // 0x3A8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A8B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UNiagaraComponent*                     ForgingEffectComponent;                            // 0x3B0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoulsLanternHotSpotComponent*         SoulsLanternHotSpotComponent;                      // 0x3B8(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCapsuleComponent*                     PlacementCollisionCapsuleComponent;                // 0x3C0(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                  InactiveInteractionText;                           // 0x3C8(0x18)(Edit, Protected, NativeAccessSpecifierProtected)
	class FText                                  ActiveInteractionText;                             // 0x3E0(0x18)(Edit, Protected, NativeAccessSpecifierProtected)
	class FText                                  OccupiedBecauseOfEnemiesNearText;                  // 0x3F8(0x18)(Edit, Protected, NativeAccessSpecifierProtected)
	bool                                         bAllowsFastTravel;                                 // 0x410(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bKeepOnNewGamePlus;                                // 0x411(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A8D[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UDualRealmAnchorActorSaveObject*       SaveObject;                                        // 0x418(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EDualRealmAnchorState             State;                                             // 0x420(0x1)(Net, ZeroConstructor, SaveGame, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EForgedAnchorState                ForgingState;                                      // 0x421(0x1)(Edit, Net, ZeroConstructor, SaveGame, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2A91[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USceneComponent*                       RootVisualsComponent;                              // 0x428(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2A92[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class APlayerCharacter*                      CharacterPlacingAnchor;                            // 0x438(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2A93[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          AnchorTranscendGameplayEventTag;                   // 0x458(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          AnchorResurrectGameplayEventTag;                   // 0x460(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ADualRealmAnchorActor* GetDefaultObj();

	void UpdateOccupiedByEnemiesNear(enum class ERealmDetectionState RealmDetectionState);
	void SetState(enum class EDualRealmAnchorState NewState);
	void OnSoulUnbind();
	void OnSoulBind();
	void OnRep_State();
	void OnRep_ForgingState();
	void OnRealmChange(enum class EGameRealm OldRealm, enum class EGameRealm NewRealm);
	void OnPlacingStateUpdated_BP();
	void OnOldForgingAnchorDestroyed_BP();
	void OnDestroyedState_BP(bool bSkipTransitionAnimation);
	void OnDeactivated();
	void OnActivate();
	bool IsSafeToForge();
	bool IsResurrectCoopPartnerButtonEnabled(class APawn* ResurrectSourcePawn);
	bool IsOnValidNavMesh();
	bool IsInForbiddenArea();
	bool IsHubAnchor();
	bool IsCollidingWithWorld();
	class FText GetTeleportName();
	class FName GetTeleportID();
	enum class EDualRealmAnchorState GetState();
	enum class EForgedAnchorState GetForgedState();
	void ExecuteTranscend(class APawn* TargetPawn);
	void ExecuteResurrectCoopPartner(class APawn* ResurrectSourcePawn);
	void ExecuteResurrect(class APawn* TargetPawn);
	void ExecuteFastTravel(class APawn* TargetPawn, class ALOTF2PlayerStartTeleport* TargetTeleportPoint);
	void EndAnchorForge();
	bool AllowsFastTravel();
	void Activate();
};

// 0x8 (0x30 - 0x28)
// Class LOTF2.LOTF2SaveObject
class ULOTF2SaveObject : public UObject
{
public:
	uint32                                       CurrentVersionNumber;                              // 0x28(0x4)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2A9C[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ULOTF2SaveObject* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class LOTF2.DualRealmAnchorActorSaveObject
class UDualRealmAnchorActorSaveObject : public ULOTF2SaveObject
{
public:
	struct FDataTableRowHandle                   TeleportInfoDefinitionRow;                         // 0x30(0x10)(Edit, SaveGame, NoDestructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UDualRealmAnchorActorSaveObject* GetDefaultObj();

};

// 0x8 (0xB8 - 0xB0)
// Class LOTF2.DualRealmComponent
class UDualRealmComponent : public UActorComponent
{
public:
	uint8                                        Pad_2AA2[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UDualRealmComponent* GetDefaultObj();

	void UpdateRealmLogic(enum class EGameRealm CurrentRealm, enum class EGameRealm PrevRealm);
	void SetRealmVisuals(enum class EGameRealm Realm);
};

// 0x1C0 (0x278 - 0xB8)
// Class LOTF2.DualRealmBehaviourComponent
class UDualRealmBehaviourComponent : public UDualRealmComponent
{
public:
	FMulticastInlineDelegateProperty_            OnUpdateRealmLogicDelegate;                        // 0xB8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnUpdateRealmVisuals;                              // 0xC8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B78[0x60];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class FName, struct FMaterialsToSwitch> UmbralVisibilityMaterials;                         // 0x138(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPrivate)
	TMap<class FName, struct FMaterialsToSwitch> LimboVisibilityMaterials;                          // 0x188(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPrivate)
	TMap<class FName, struct FMaterialsToSwitch> AxiomOriginalMaterials;                            // 0x1D8(0x50)(Transient, NativeAccessSpecifierPrivate)
	TMap<class FName, struct FMaterialsToSwitch> AxiomOriginalMaterialsForEditor;                   // 0x228(0x50)(Edit, DisableEditOnTemplate, EditConst, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UDualRealmBehaviourComponent* GetDefaultObj();

	void UpdateRealmVisibility();
	void SetUmbralVisibilityMaterialsForTag(class FName& TagName, struct FMaterialsToSwitch& MaterialsToSwitch);
	void SetUmbralVisibilityMaterials(TMap<class FName, struct FMaterialsToSwitch>& UmbralVisibilityMaterials);
	void SetLimboVisibilityMaterials(TMap<class FName, struct FMaterialsToSwitch>& LimboVisibilityMaterials);
	TMap<class FName, struct FMaterialsToSwitch> GetUmbralVisibilityMaterials();
	void GetNewVisibleComponents(class USceneComponent* SceneComponent, enum class EGameRealm OldRealm, enum class EGameRealm NewRealm, bool bParentVisible, TArray<class USceneComponent*>* Result);
	TMap<class FName, struct FMaterialsToSwitch> GetLimboVisibilityMaterials();
};

// 0x8 (0xC0 - 0xB8)
// Class LOTF2.DualRealmConfigurableComponent
class UDualRealmConfigurableComponent : public UDualRealmComponent
{
public:
	enum class EDualRealmState                   ComponentActiveInRealmState;                       // 0xB8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B7A[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UDualRealmConfigurableComponent* GetDefaultObj();

};

// 0x1D0 (0x208 - 0x38)
// Class LOTF2.DualRealmDirectorSettings
class UDualRealmDirectorSettings : public UHexDeveloperSettings
{
public:
	TSoftClassPtr<class UGameplayEffect>         RespawnToAxiomGameplayEffect;                      // 0x38(0x30)(Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UGameplayEffect>         RespawnToUmbralGameplayEffect;                     // 0x68(0x30)(Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, enum class EActivateRealmReason> TagsToReasonsMap;                                  // 0x98(0x50)(Edit, Config, NativeAccessSpecifierPublic)
	struct FGameplayTag                          UmbrieMaterializedTag;                             // 0xE8(0x8)(Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<enum class EGameRealm, struct FGameplayEffectsWithParamsContainer> RealmsGEs;                                         // 0xF0(0x50)(Edit, Config, NativeAccessSpecifierPublic)
	struct FGameplayTag                          FastTravelGameplayEventTag;                        // 0x140(0x8)(Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          FastTravelWithVigorDropGameplayEventTag;           // 0x148(0x8)(Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          SoulsLanternContextAbilitiesTag;                   // 0x150(0x8)(Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UDataTable>             AnchorTeleportInfoDataTable;                       // 0x158(0x30)(Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                   HubAnchorTeleportInfoRow;                          // 0x188(0x10)(Edit, Config, NoDestructor, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                   ForgedAnchorTeleportInfoRow;                       // 0x198(0x10)(Edit, Config, NoDestructor, NativeAccessSpecifierPublic)
	int32                                        MaxHealthPotionsAllowedInUmbral;                   // 0x1A8(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCorpseRunEnabled;                                 // 0x1AC(0x1)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B94[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DistanceToForgedAnchor;                            // 0x1B0(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HeightDistanceToForgedAnchor;                      // 0x1B4(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LightsDefaultIntensityFadeSpeed;                   // 0x1B8(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LightsMinFadeSeconds;                              // 0x1BC(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LightsMaxFadeSeconds;                              // 0x1C0(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B95[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UAkRtpc>                UmbralVisivbilityGlobalRTPC;                       // 0x1C8(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UmbralVisivbilityGlobalRTPC_InUmbralValue;         // 0x1F8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UmbralVisivbilityGlobalRTPC_InAxiomValue;          // 0x1FC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        UmbralVisivbilityGlobalRTPC_interpolationTimeMs;   // 0x200(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B96[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UDualRealmDirectorSettings* GetDefaultObj();

	class UDualRealmDirectorSettings* Get();
};

// 0x1D8 (0x208 - 0x30)
// Class LOTF2.DualRealmDirector
class UDualRealmDirector : public UWorldSubsystem
{
public:
	FMulticastInlineDelegateProperty_            OnStartTranscendRealm;                             // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnEndTranscendRealm;                               // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnAnchorRegistered;                                // 0x50(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnWhisperRegistered;                               // 0x60(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRequestComponentVisuals;                         // 0x70(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnForgedAnchorPlanted;                             // 0x80(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BB9[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USerializableActorHandle*              BoundAnchor;                                       // 0x98(0x8)(ZeroConstructor, SaveGame, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USerializableActorHandle*              BoundAncientAnchor;                                // 0xA0(0x8)(ZeroConstructor, SaveGame, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  BoundAncientAnchorTeleportName;                    // 0xA8(0x8)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USerializableActorHandle*              CurrentForgedAnchor;                               // 0xB0(0x8)(ZeroConstructor, SaveGame, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USerializableActorHandle*              CurrentForgedAnchorTeleportPoint;                  // 0xB8(0x8)(ZeroConstructor, SaveGame, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FTransform>                    BoundAnchorSpawnPoints;                            // 0xC0(0x10)(ZeroConstructor, SaveGame, NativeAccessSpecifierPrivate)
	TArray<struct FTransform>                    BoundAncientAnchorSpawnPoints;                     // 0xD0(0x10)(ZeroConstructor, SaveGame, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2BBA[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USerializableActorHandle*              DroppedHostSoulsLanternPickup;                     // 0xF0(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USerializableActorHandle*              DroppedClientSoulsLanternPickup;                   // 0xF8(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USerializableActorHandle*              DroppedSoulsLanternIntoEnemyInstance;              // 0x100(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USerializableActorHandle*              EffigyOfReincarnationPickup;                       // 0x108(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USerializableActorHandle*              EffigyOfReincarnationIntoEnemyInstance;            // 0x110(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                EnemySpawnerThatHasLanternLight;                   // 0x118(0x10)(ZeroConstructor, SaveGame, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        EnemyLanternLightVigorAmount;                      // 0x128(0x4)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2BBC[0x24];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class FName, class ALOTF2PlayerStartTeleport*> AncientAnchorTeleportPointActorsMap;               // 0x150(0x50)(Transient, NativeAccessSpecifierPrivate)
	TMap<class FName, bool>                      AnchorTeleportPointActivationMap;                  // 0x1A0(0x50)(SaveGame, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2BBD[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  LastUsedTeleportPoint;                             // 0x1FC(0x8)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2BBE[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UDualRealmDirector* GetDefaultObj();

	void TranscendRealm(enum class EActivateRealmReason Reason, enum class EGameRealm TargetRealm);
	bool TeleportToHubAnchor(class APlayerCharacter* Player, bool bDropSouls);
	bool TeleportToBoundAnchor(class APlayerCharacter* Player, bool bDropSouls);
	bool TeleportToAnchor(class APlayerCharacter* Player, class ALOTF2PlayerStartTeleport* AnchorTeleportPoint, bool bDropSouls);
	void SetUmbralVisivbilityGlobalRTPC(enum class EGameRealm Realm);
	void SetSoulsLanternPickupInfoForSaving(class ABaseAICharacter* Character, int32 VigorAmount);
	void SetHostSoulsLanternPickupInstance(class ALanternLightDropPickup* Instance);
	void SetEffigyOfReincarnationPickupInstanceOnEnemy(class ABaseAICharacter* Character);
	void SetEffigyOfReincarnationPickupInstance(class AEffigyOfReincarnationPickup* Instance);
	void SetDualRealmComponentsActiveVisuals(enum class EGameRealm Realm);
	void SetClientSoulsLanternPickupInstance(class ALanternLightDropPickup* Instance);
	void OnRealmChanged(enum class EGameRealm CurrentRealm, enum class EGameRealm PrevRealm);
	void OnFastTravelToTeleportPoint(class FName& TeleportID);
	void OnDelayedUpdateOfBoundAnchorSpawnPoints();
	bool IsValidAnchorTeleportID(class FName& TeleportID);
	bool IsForgedAnchorAvailable();
	bool IsAnchorTeleportPointActivated(class FName& TeleportID);
	struct FGameplayTag GetSoulsLanternContextAbilitiesTag();
	class FName GetLastUsedTeleportPoint();
	class ALOTF2PlayerStartTeleport* GetHubAnchorTeleportPoint();
	class FName GetHubAnchorTeleportID();
	class FName GetForgedAnchorTeleportID();
	enum class EGameRealm GetCurrentGameRealm();
	class ALOTF2PlayerStartTeleport* GetCurrentForgedAnchorTeleportPoint();
	class FName GetBoundAncientAnchorTeleportID();
	class ALOTF2PlayerStartTeleport* GetBoundAnchorTeleportPoint();
	class ALOTF2PlayerStartTeleport* GetAnchorTeleportPoint(class FName& TeleportID);
	struct FAnchorTeleportInfo GetAnchorTeleportInfo(class FName& TeleportID);
	TArray<class FName> GetAllAnchorTeleportIDs();
	class ADualRealmAnchorActor* FindAnchorWithTeleportNameIfLoaded(class FName& TeleportID);
	void EndTranscendRealm(enum class EGameRealm OldRealm, enum class EGameRealm NewRealm, enum class EActivateRealmReason Reason);
	void DestroyHostSoulsLanternPickup();
	void DestroyEffigyOfReincarnationPickup();
	void DestroyClientSoulsLanternPickup();
	bool CanFastTravelFromTeleportPoint(class FName& TeleportID);
	void BindAnchor(class ADualRealmAnchorActor* Anchor);
};

// 0x18 (0xC8 - 0xB0)
// Class LOTF2.DualRealmStateComponent
class UDualRealmStateComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnRealmChanged;                                    // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	enum class EGameRealm                        ActiveRealm;                                       // 0xC0(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2BC4[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UDualRealmStateComponent* GetDefaultObj();

	void SetDualRealm(enum class EGameRealm Realm);
	void OnRep_ActiveRealm(enum class EGameRealm PreviousActiveRealm);
	bool HasSameRealm(class AActor* Actor);
	enum class EGameRealm GetDualRealm();
};

// 0x0 (0xC8 - 0xC8)
// Class LOTF2.DualRealmPlayerStateComponent
class UDualRealmPlayerStateComponent : public UDualRealmStateComponent
{
public:

	static class UClass* StaticClass();
	static class UDualRealmPlayerStateComponent* GetDefaultObj();

	void HandleCurrentRealmChanged(enum class EGameRealm CurrentRealm, enum class EGameRealm PrevRealm);
};

// 0x20 (0x438 - 0x418)
// Class LOTF2.DualRealmSeal
class ADualRealmSeal : public ADestructible
{
public:
	class UDualRealmBehaviourComponent*          DualRealmBehaviourComponent;                       // 0x418(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                       SealAreasRoot;                                     // 0x420(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                       AxiomVisualsRoot;                                  // 0x428(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                       UmbralVisualsRoot;                                 // 0x430(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ADualRealmSeal* GetDefaultObj();

};

// 0x78 (0x318 - 0x2A0)
// Class LOTF2.DualRealmWhisper
class ADualRealmWhisper : public AActor
{
public:
	class USceneComponent*                       UmbralVisualsRoot;                                 // 0x2A0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                       VisualsRoot;                                       // 0x2A8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDualRealmWhisperComponent*            WhisperComponent;                                  // 0x2B0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FDataTableRowHandle                   LootTable;                                         // 0x2B8(0x10)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class UHitSphereComponent*                   LanternCollision;                                  // 0x2C8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNiagaraComponent*                     WhisperChargeEffect;                               // 0x2D0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTargetComponent*                      TargetComponent;                                   // 0x2D8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULOTF2SerializationComponent*          LOTF2SerializationComponent;                       // 0x2E0(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDualRealmStateComponent*              DualRealmStateComponent;                           // 0x2E8(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnathemaAbilitySystemComponent*       AbilitySystemComponent;                            // 0x2F0(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHexSoulFlayComponent*                 SoulflayComp;                                      // 0x2F8(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2BC5[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ADualRealmWhisper* GetDefaultObj();

	void UpdateStateVisibility(enum class EDualRealmWhisperState NewState);
	void StartPlayingWhisper(class APlayerCharacter* InstigatorPlayerCharacter);
	void RewardWhisperLoot();
	void OnWhisperPlay();
	void OnSoulflayPullStarted(class AActor* InstigatorActor, const struct FVector& PullDirectionWS);
	void OnPlay();
	void OnFinished();
};

// 0x88 (0x138 - 0xB0)
// Class LOTF2.DualRealmWhisperComponent
class UDualRealmWhisperComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnWhisperStateChanged;                             // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BC7[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ALevelSequenceActor*                   WhisperSequence;                                   // 0xD0(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          WhisperID;                                         // 0xD8(0x8)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FAnathemaQuery                        ActivationQuery;                                   // 0xE0(0x50)(Edit, Protected, NativeAccessSpecifierProtected)
	enum class EDualRealmWhisperState            CurrentState;                                      // 0x130(0x1)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2BC8[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UDualRealmWhisperComponent* GetDefaultObj();

	void StartPlayingWhisper();
	void OnWhisperEnd();
	void OnCinematicPlayingStarted();
	bool CanActivate();
};

// 0x158 (0x1A0 - 0x48)
// Class LOTF2.EffectStackCountConsideration
class UEffectStackCountConsideration : public UAIConsideration
{
public:
	struct FGameplayEffectQuery                  EffectQuery;                                       // 0x48(0x150)(Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)
	int32                                        CountNeededToPass;                                 // 0x198(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Scoring;                                           // 0x19C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UEffectStackCountConsideration* GetDefaultObj();

};

// 0x50 (0x78 - 0x28)
// Class LOTF2.InventoryItem
class UInventoryItem : public UObject
{
public:
	class UItemData*                             ItemData;                                          // 0x28(0x8)(Edit, Net, ZeroConstructor, SaveGame, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UItemData>                 ItemDataClass;                                     // 0x30(0x8)(Net, ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        Stock;                                             // 0x38(0x4)(BlueprintVisible, Net, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        UsableStock;                                       // 0x3C(0x4)(Net, ZeroConstructor, SaveGame, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2BE4[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ItemLevel;                                         // 0x48(0x4)(BlueprintVisible, Net, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2BE5[0x24];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bItemIsNew;                                        // 0x70(0x1)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2BE6[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UInventoryItem* GetDefaultObj();

	bool TryRemoveStock(int32 StockToRemove, bool bRemoveEmptyItemsFirst);
	bool TryConsume(int32 Amount);
	bool TryAddStock(int32 StockToAdd);
	bool ShouldRemoveOnNewGamePlus();
	bool ShouldPlayQuestItemSoundOnReward();
	bool ShouldAlwaysLoot();
	void SetStock(int32 Value);
	void SetItemVisited();
	void SetItemLevel(int32 Value);
	void SetItemDataClass(TSubclassOf<class UItemData> ItemDataClass);
	void SetItemData(class UItemData* ItemData);
	void Refill();
	void OnRep_UsableStock();
	bool IsUsableInUmbral();
	bool IsUsableAutoEquipOnPickup();
	bool IsUsable();
	bool IsUnstackable();
	bool IsUnique();
	bool IsRefillable();
	bool IsQuestItem();
	bool IsItemNew();
	bool IsHidden();
	bool IsBossItem();
	bool IsAccountUnique();
	int32 GetUsableStock();
	int32 GetMaxItemLevel();
	float GetMass();
	TSoftClassPtr<class AActor> GetItemVisual();
	class UAnimMontage* GetItemUseAnimation();
	class FText GetItemShortDescription();
	struct FItemPrice GetItemPrice();
	class FText GetItemNameIncludingLevel();
	class FText GetItemName();
	int32 GetItemLevel();
	class UTexture2D* GetItemIcon();
	class FText GetItemDescription();
	class UItemData* GetItemData();
	struct FGameplayTag GetItemCategory();
	enum class EInventoryItemType GetInventoryItemType();
	TSoftObjectPtr<class UTexture2D> GetHDIcon();
	int32 GetFullStock();
	bool CheckPropertyFlag(enum class EItemProperties Flag);
	bool CanBeSold();
	bool CanBeDropped();
	bool AllowUseMultipleInstances();
};

// 0x0 (0x78 - 0x78)
// Class LOTF2.EffigyOfReincarnationInventoryItem
class UEffigyOfReincarnationInventoryItem : public UInventoryItem
{
public:

	static class UClass* StaticClass();
	static class UEffigyOfReincarnationInventoryItem* GetDefaultObj();

};

// 0x178 (0x418 - 0x2A0)
// Class LOTF2.Pickup
class APickup : public AActor
{
public:
	uint8                                        MultiplayerVisibilityMask;                         // 0x2A0(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2BED[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UInventoryItem>            InventoryItemDef;                                  // 0x2A8(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        Stack;                                             // 0x2B0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2BEE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDataTableRowHandle                   LootTable;                                         // 0x2B8(0x10)(Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class USphereComponent*                      InteractionTrigger;                                // 0x2C8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInteractionComponent*                 InteractionComponent;                              // 0x2D0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAutoAddItemToInventory;                           // 0x2D8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAutoDestoyOnPickup;                               // 0x2D9(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShouldSpawnPickupCopyForAlly;                     // 0x2DA(0x1)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2BEF[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USceneComponent*                       UIRoot;                                            // 0x2E0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                  ItemVisual;                                        // 0x2E8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInventoryItem*                        InventoryItemDefinition;                           // 0x2F0(0x8)(Edit, ZeroConstructor, EditConst, SaveGame, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ULOTF2SerializationComponent*          LOTF2SerializationComponent;                       // 0x2F8(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FAkAnathemaEvent                      SoundToPlayOnPickup;                               // 0x300(0x50)(Edit, NativeAccessSpecifierPrivate)
	struct FAnathemaQuery                        SpawnQuery;                                        // 0x350(0x50)(Edit, NativeAccessSpecifierPrivate)
	bool                                         bRegisterToSpawnQueryResultChangedToReactToIt;     // 0x3A0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2BF0[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAnathemaQuery                        InteractionQuery;                                  // 0x3A8(0x50)(Edit, NativeAccessSpecifierPrivate)
	bool                                         bRegisterToInteractionQueryResultChangedToReactToIt; // 0x3F8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2BF1[0x1F];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APickup* GetDefaultObj();

	bool TakePickup(class AActor* Interactor);
	void PickupSetupFinished();
	void OnSpawnQuerySystemsTagContainerAdded(struct FGameplayTagContainer& NewTags);
	void OnRep_MultiplayerVisibilityMask();
	void OnPlayerStateReplicated(class APlayerState* PlayerState);
	void OnInteractionQuerySystemsTagContainerAdded(struct FGameplayTagContainer& NewTags);
	class USceneComponent* GetUIRoot();
	uint8 GetMultiplayerVisibilityMask();
	class UStaticMeshComponent* GetItemVisual();
	class UInventoryItem* GetInventoryItem();
};

// 0x28 (0x440 - 0x418)
// Class LOTF2.EffigyOfReincarnationPickup
class AEffigyOfReincarnationPickup : public APickup
{
public:
	struct FVector_NetQuantize                   TargetFallLocation;                                // 0x418(0x18)(BlueprintVisible, Net, SaveGame, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bSkipFallSequence;                                 // 0x430(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2BF4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TotalFallTime;                                     // 0x434(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        RemainingFallTime;                                 // 0x438(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2BF5[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AEffigyOfReincarnationPickup* GetDefaultObj();

	void UpdateFallMovement_BP(float DeltaSeconds);
	void StartFallMovement_BP();
	void SetupFallSequence(struct FVector_NetQuantize& TargetFallLocation);
	void SetTargetFallLocation(struct FVector_NetQuantize& Location);
	void InitFallMovement_BP();
	float GetTotalFallTime();
	struct FVector_NetQuantize GetTargetFallLocation();
	bool GetSkipFallSequence();
	float GetRemainingFallTime();
	void EndFallMovement_BP();
};

// 0xC8 (0x178 - 0xB0)
// Class LOTF2.EnemyDetectionComponent
class UEnemyDetectionComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnEnemyDetectionChanged;                           // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	enum class ERealmDetectionState              RealmDetectionState;                               // 0xC0(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2BF9[0xA7];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USceneComponent*                       EnemyDetectionAreasRoot;                           // 0x168(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDualRealmBehaviourComponent*          DualRealmBehaviourComponent;                       // 0x170(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UEnemyDetectionComponent* GetDefaultObj();

	void UpdateDetectionState();
	void SetEnemiesDetectedUmbral(bool bValue);
	void SetEnemiesDetectedAxiom(bool bValue);
	void OnRep_RealmDetectionState();
	void OnRealmChange(enum class EGameRealm OldRealm, enum class EGameRealm NewRealm);
	void OnExitCollisionArea(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnEnterCollisionArea(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void OnEnemyDeath(class AActor* InstigatorActor, struct FGameplayTagContainer& InstigatorTags, bool bDeathWasObserved, class ALOTF2Character* AICharacter);
	enum class ERealmDetectionState GetEnemyDetectionState();
	int32 GetEnemyCountUmbral();
	int32 GetEnemyCountAxiom();
};

// 0x1A0 (0x470 - 0x2D0)
// Class LOTF2.EnemyStatusWidget
class UEnemyStatusWidget : public UActorWidget
{
public:
	TMap<class FString, class UTexture2D*>       PlatformLogos;                                     // 0x2D0(0x50)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                        HighlightDelay;                                    // 0x320(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxDistance;                                       // 0x324(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ScaleValue;                                        // 0x328(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinScaleValue;                                     // 0x32C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxScaleValue;                                     // 0x330(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinimumHealthThresholdPercent;                     // 0x334(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOverlay*                              Overlay_Scale;                                     // 0x338(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProgressBar*                          ProgressBar_Health;                                // 0x340(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Image_Logo;                                        // 0x348(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProgressBar*                          ProgressBar_HealthProvisionalDamage;               // 0x350(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Image_Revenge;                                     // 0x358(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TimeVisible;                                       // 0x360(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2C01[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          FadeOutTimer;                                      // 0x368(0x8)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2C02[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bHasBeenFadedIn;                                   // 0x371(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bDamageTaken;                                      // 0x372(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2C03[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DamageTakenAmount;                                 // 0x374(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                      Text_RevengedPlayerName;                           // 0x378(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHealthComponent*                      OwnerHealthComp;                                   // 0x380(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAbilitySystemComponent*               AbilitySystemComponent;                            // 0x388(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UTargetComponent*>              OwnerTargetComponents;                             // 0x390(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2C04[0xD0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UEnemyStatusWidget* GetDefaultObj();

	void SetupPlayerName();
	void SetInvaderName(class ALOTF2PlayerState* PlayerState);
	void PlayDamageTextAnimation(float Damage, const struct FSlateColor& Color, int32 FontSize);
	void OnSetTarget(class UTargetComponent* InTargetComponent);
	void OnRevengedPlayerNameChanged(class FText& RevengedPlayerName);
	void OnOwnerChanged(class AActor* NewOwner);
	void OnNotInFocus(bool bStatus);
	void OnHUDVisibilityChange(bool bVisible);
	void OnHealthProvisionalDamageChange(float FOldHealth, float FNewHealth);
	void OnHealthChange(float FOldHealth, float FNewHealth);
	void OnFadeOut();
	void OnFadeIn();
	void OnEnemyUntargeted(class UTargetComponent* Target, class AActor* Targeter);
	void OnEnemyTargeted(class UTargetComponent* Target, class AActor* Targeter);
	void OnEnemyOutOfVisibility(class UTargetComponent* Target, bool bLoosed, class AActor* Targeter);
	void OnEnemyDeath(class AActor* InstigatorActor, struct FGameplayTagContainer& InstigatorTags, bool bDeathWasObserved);
	void OnDamageTaken(class AActor* DamagedActor, float Damage, const struct FGameplayTagContainer& AllAssetTags, class AActor* InstigatedBy, class AActor* DamageCauser, enum class EHexAttackTypeEffectivenes AttackTypeEffectiveness);
	void MoveProvisionalDamageBar(float CurrentHealth, float ProvisionalDamage);
	void BP_OnDamageTaken();
};

// 0x188 (0x238 - 0xB0)
// Class LOTF2.EnergyComponent
class UEnergyComponent : public UActorComponent
{
public:
	float                                        StaminaBaseRegenRate;                              // 0xB0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ERegenEnergyState                 CurrentRegenEnergyState;                           // 0xB4(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ERegenEnergyState                 OldRegenEnergyState;                               // 0xB5(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2C50[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bStaminaInfinite : 1;                              // Mask: 0x1, PropSize: 0x10xB8(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bStaminaAlwaysExhaustedDev : 1;                    // Mask: 0x2, PropSize: 0x10xB8(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bStaminaRefillOnExhaustedDev : 1;                  // Mask: 0x4, PropSize: 0x10xB8(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_23C : 5;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_2C51[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        StaminaStunInitialDuration;                        // 0xBC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StaminaStunResetDuration;                          // 0xC0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C52[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnBeginTired;                                      // 0xC8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnEndTired;                                        // 0xD8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnBeginExhausted;                                  // 0xE8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnEndExhausted;                                    // 0xF8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnEnterStun;                                       // 0x108(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnExitStun;                                        // 0x118(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnStaminaDepleted;                                 // 0x128(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C53[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnCurrentStaminaChanged;                           // 0x148(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnMaxStaminaChanged;                               // 0x158(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                        MagicRegenDelay;                                   // 0x168(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bMagicInfinite;                                    // 0x16C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C54[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnCurrentMagicChanged;                             // 0x170(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnMaxMagicChanged;                                 // 0x180(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCurrentAmmoChanged;                              // 0x190(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnMaxAmmoChanged;                                  // 0x1A0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnMagicDepleted;                                   // 0x1B0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bStaminaRegenEnabled;                              // 0x1C0(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2C55[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        StaminaStunTimer;                                  // 0x1C4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LastTiredEndTime;                                  // 0x1C8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LastExhaustedEndTime;                              // 0x1CC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LastStunEndTime;                                   // 0x1D0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bMagicRegenEnabled;                                // 0x1D4(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2C56[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MagicRegenTimer;                                   // 0x1D8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        bClearEnergyChangeRules;                           // 0x1DC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2C57[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CurrentMagicRegenRate;                             // 0x220(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2C58[0x14];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UEnergyComponent* GetDefaultObj();

	void UpdateStamina(float Stamina);
	void UpdateMana(float Mana);
	float TryUseEnergy(enum class EEnergyType EnergyType, float Energy, enum class EEnergyUseRule Rule);
	void SetPendingEnergy(enum class EEnergyType EnergyType, float Energy, enum class EEnergyUseRule UseRule);
	bool IsTired();
	bool IsStunned();
	bool IsExhausted();
	float GetMaxStamina();
	float GetMaxMagic();
	float GetMaxAmmo();
	float GetMagicRegenRate();
	float GetLastTiredEndTime();
	float GetLastTiredEndSeconds();
	float GetLastStunEndTime();
	float GetLastStunEndSeconds();
	float GetLastExhaustedEndTime();
	float GetLastExhaustedEndSeconds();
	float GetCurrentStaminaPercentage();
	float GetCurrentStamina();
	float GetCurrentMagic();
	float GetCurrentAmmo();
	float GetAvailableProvisionalDamage();
	float GainEnergy(enum class EEnergyType EnergyType, float Energy);
	void ConsumePendingEnergy();
	void ClearRegenRateModifiersForOwner(class UObject* Owner);
	void ClearRegenRateModifiers();
	void ClearChangeRulesForOwner(class UObject* Owner);
	void ClearChangeRules(bool bClearImmediate);
	float CanUseEnergy(enum class EEnergyType EnergyType, float Energy, enum class EEnergyUseRule Rule);
	void AddRegenRateModifier(const struct FEnergyRegenRateChangeRule& NewModifier);
	void AddChangeRule(const struct FEnergyChangeRule& ChangeRule);
};

// 0x320 (0x350 - 0x30)
// Class LOTF2.EnvironmentHitFXData
class UEnvironmentHitFXData : public UPrimaryDataAsset
{
public:
	struct FAkAnathemaEvent                      EnvHitAkEvent;                                     // 0x30(0x50)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	TMap<class UPhysicalMaterial*, class UAkSwitchValue*> EnvHitAkSwitches;                                  // 0x80(0x50)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	TMap<class UFXData*, class UAkSwitchValue*>  EnvHitWeaponAkSwitches;                            // 0xD0(0x50)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	TMap<class UPhysicalMaterial*, class UNiagaraSystem*> EnvHitNiagaraFXs;                                  // 0x120(0x50)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	TMap<class UPhysicalMaterial*, class UNiagaraSystem*> EnvHitNiagaraFXsLow;                               // 0x170(0x50)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	TMap<class UPhysicalMaterial*, class UNiagaraSystem*> EnvHitNiagaraFXsMid;                               // 0x1C0(0x50)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	TMap<class UPhysicalMaterial*, class UNiagaraSystem*> EnvHitNiagaraFXsHigh;                              // 0x210(0x50)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	struct FAkAnathemaEvent                      DefaultEnvHitAkEventByMaterial;                    // 0x260(0x50)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	struct FLandingFxData                        LandingFXDefault;                                  // 0x2B0(0x50)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	TMap<TSubclassOf<class ALOTF2Character>, struct FLandingFxData> LandingFXByCharacter;                              // 0x300(0x50)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UEnvironmentHitFXData* GetDefaultObj();

	class UNiagaraSystem* GetLandingFX(TSubclassOf<class ALOTF2Character> CharacterClass, class UPhysicalMaterial* PhysicalMaterial, enum class ELandingFxType LandingType);
	class UAkSwitchValue* FindWeaponAkSwitch(class UFXData* FXData, class UAkSwitchValue* DefaultSwitch);
	class UNiagaraSystem* FindNiagaraFX(class UPhysicalMaterial* PhysicalMaterial, enum class EAnathemaEnvironemntHitFXIntensity Intensity, class UNiagaraSystem* DefaultNiagaraSystem);
	class UAkSwitchValue* FindAkSwitch(class UPhysicalMaterial* PhysicalMaterial, class UAkSwitchValue* DefaultSwitch);
};

// 0x8 (0x200 - 0x1F8)
// Class LOTF2.EnvQueryTest_Random_Lords
class UEnvQueryTest_Random_Lords : public UEnvQueryTest
{
public:
	float                                        MinScore;                                          // 0x1F8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxScore;                                          // 0x1FC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UEnvQueryTest_Random_Lords* GetDefaultObj();

};

// 0x118 (0x190 - 0x78)
// Class LOTF2.EquipableInventoryItem
class UEquipableInventoryItem : public UInventoryItem
{
public:
	uint8                                        Pad_2CB1[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnItemVisualLoaded;                                // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CB2[0x60];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bHiddenInGame;                                     // 0x120(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2CB3[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                SpawnedActorInstance;                              // 0x128(0x8)(Net, ZeroConstructor, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                SecondarySpawnedActorInstance;                     // 0x130(0x8)(Net, ZeroConstructor, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2CB4[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FHexRuneEquipmentSlot>         RuntimeRuneSlots;                                  // 0x148(0x10)(Net, ZeroConstructor, SaveGame, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2CB5[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UHolsterableItemHelper*                PrimaryHolsterableItem;                            // 0x178(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHolsterableItemHelper*                SecondaryHolsterableItem;                          // 0x180(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2CB6[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UEquipableInventoryItem* GetDefaultObj();

	void SetIsHolstered(bool bHolstered);
	void SetHiddenInGame(bool bIsHiddenInGame);
	void RemoveHolsteredVisualOverride(class FName ID, bool bChecked);
	void RemoveHolsteredLogicOverride(class FName ID, bool bChecked);
	void OnRep_SpawnedActorInstance(class AActor* OldSpawnedActorInstance);
	void OnRep_SecondarySpawnedActorInstance(class AActor* OldSecondarySpawnedActorInstance);
	void OnOwnerCharacterDestroyed(class AActor* DestroyedActor);
	void OnOwnerCharacterActorHiddenInGameChanged(bool bHidden);
	bool IsHolsteredVisual();
	bool IsHolsteredLogic();
	bool IsHiddenInGame();
	int32 GetTotalMaxRuneSlots();
	class AActor* GetSpawnedActorInstance();
	class UHexRuneInventoryItem* GetSlottedRune(int32 SlotIndex);
	TArray<enum class EHexRuneShape> GetRuneSlots();
	enum class EHexRuneEquipmentApplication GetRuneApplicationTypeForSlot(int32 SlotIndex);
	enum class EFEquipmentSlot GetEquipmentSlot();
	int32 GetCurrentMaxRuneSlots();
	bool ContainsHolsteredVisualOverride(class FName ID);
	bool ContainsHolsteredLogicOverride(class FName ID);
	bool CheckActorStatsRequirements(class AActor* Actor);
	void BP_AssignRuneToSlot(class ALOTF2Character* LOTF2Character, int32 SlotIndex, class UHexRuneInventoryItem* RuneToAssign);
	void AddHolsteredVisualOverride(bool bHolstered, class FName ID, int32 Priority);
	void AddHolsteredLogicOverride(bool bHolstered, class FName ID, int32 Priority);
};

// 0x18 (0x1A8 - 0x190)
// Class LOTF2.EquipableInventoryAmmo
class UEquipableInventoryAmmo : public UEquipableInventoryItem
{
public:
	uint8                                        Pad_2CB7[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UEquipableInventoryAmmo* GetDefaultObj();

	void UpdateMeshVisibilityWithParams(float OldAmmo, float NewAmmo);
};

// 0x0 (0x190 - 0x190)
// Class LOTF2.EquipableInventoryArmor
class UEquipableInventoryArmor : public UEquipableInventoryItem
{
public:

	static class UClass* StaticClass();
	static class UEquipableInventoryArmor* GetDefaultObj();

};

// 0x18 (0x1A8 - 0x190)
// Class LOTF2.EquipableInventoryMagic
class UEquipableInventoryMagic : public UEquipableInventoryItem
{
public:
	bool                                         bIsBeingCasted;                                    // 0x190(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2CB8[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FActiveGameplayEffectHandle>   ActiveGameplayEffectHandles;                       // 0x198(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UEquipableInventoryMagic* GetDefaultObj();

	void SetIsBeingCasted(bool bNewIsBeingCasted);
	void SetActiveGameplayEffectHandles(const TArray<struct FActiveGameplayEffectHandle>& ActiveGameplayEffectHandles);
	class UMagicItemData* GetMagicItemData();
	bool GetIsBeingCasted();
	TArray<struct FActiveGameplayEffectHandle> GetActiveGameplayEffectHandles();
	void CleanActiveGameplayEffectHandles();
	void AddActiveGameplayEffectHandle(const struct FActiveGameplayEffectHandle& ActiveGameplayEffectHandle);
};

// 0x18 (0x1A8 - 0x190)
// Class LOTF2.EquipableInventoryWeapon
class UEquipableInventoryWeapon : public UEquipableInventoryItem
{
public:
	uint8                                        Pad_2CBB[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UEquipableInventoryWeapon* GetDefaultObj();

	void PlayHitFX(class ALOTF2Character* TargetCharacter, struct FPlayHitFXParameters& Params);
	void PlayEnvironmentHitFX(class ALOTF2Character* TargetCharacter, float RadiusSphereTrace, struct FRotator& Orientation, bool EnableSound, bool EnableVFX);
};

// 0x20 (0x1C8 - 0x1A8)
// Class LOTF2.EquipableInventoryRangedWeapon
class UEquipableInventoryRangedWeapon : public UEquipableInventoryWeapon
{
public:
	class AActor*                                SpawnedQuiverInstance;                             // 0x1A8(0x8)(Net, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsLoaded;                                         // 0x1B0(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2CBC[0x17];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UEquipableInventoryRangedWeapon* GetDefaultObj();

	void SetIsLoaded(bool bNewIsLoaded);
	class AActor* GetSpawnedQuiverInstance();
	int32 GetNumberOfAmmoAvailable();
	bool GetIsLoaded();
};

// 0x0 (0x1A8 - 0x1A8)
// Class LOTF2.EquipableInventoryShield
class UEquipableInventoryShield : public UEquipableInventoryWeapon
{
public:

	static class UClass* StaticClass();
	static class UEquipableInventoryShield* GetDefaultObj();

};

// 0x0 (0x190 - 0x190)
// Class LOTF2.EquipableInventorySoulsLantern
class UEquipableInventorySoulsLantern : public UEquipableInventoryItem
{
public:

	static class UClass* StaticClass();
	static class UEquipableInventorySoulsLantern* GetDefaultObj();

	class ASoulsLanternActor* GetSpawnedSoulsLanternActor();
};

// 0x8 (0x1B0 - 0x1A8)
// Class LOTF2.EquipableInventoryThrowable
class UEquipableInventoryThrowable : public UEquipableInventoryAmmo
{
public:
	uint8                                        Pad_2CBD[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UEquipableInventoryThrowable* GetDefaultObj();

};

// 0x0 (0x190 - 0x190)
// Class LOTF2.EquipableInventoryTumor
class UEquipableInventoryTumor : public UEquipableInventoryItem
{
public:

	static class UClass* StaticClass();
	static class UEquipableInventoryTumor* GetDefaultObj();

};

// 0x30 (0x60 - 0x30)
// Class LOTF2.EquipableItemAttributeSet
class UEquipableItemAttributeSet : public UAttributeSet
{
public:
	struct FGameplayAttributeData                Weight;                                            // 0x30(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                Durability;                                        // 0x40(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                MaxDurability;                                     // 0x50(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UEquipableItemAttributeSet* GetDefaultObj();

};

// 0x20 (0x50 - 0x30)
// Class LOTF2.EquipmentAttributeSet
class UEquipmentAttributeSet : public UAttributeSet
{
public:
	struct FGameplayAttributeData                EquipLoad;                                         // 0x30(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                MaxEquipLoad;                                      // 0x40(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UEquipmentAttributeSet* GetDefaultObj();

};

// 0xB0 (0x368 - 0x2B8)
// Class LOTF2.EquipmentCategoryRow
class UEquipmentCategoryRow : public ULOTF2UserWidget
{
public:
	TSoftObjectPtr<class UTexture2D>             CategoryTexture;                                   // 0x2B8(0x30)(Edit, DisableEditOnTemplate, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FGameplayTag>                  RowTags;                                           // 0x2E8(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	TArray<enum class EFEquipmentSlot>           EquipmentSlots;                                    // 0x2F8(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	bool                                         bUseDecoratorImages;                               // 0x308(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2CC0[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSoftObjectPtr<class UTexture2D>>     DecoratorImages;                                   // 0x310(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	bool                                         bShowControllerIcons;                              // 0x320(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2CC1[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGameplayTag>                  ControllerButtonsInOrder;                          // 0x328(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	TArray<class UInputAction*>                  InputActionsInOrder;                               // 0x338(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTag                          RowCategory;                                       // 0x348(0x8)(Edit, DisableEditOnTemplate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        RowItemsCount;                                     // 0x350(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShowStockAmount;                                  // 0x354(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2CC2[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPanelWidget*                          Equipment_Container;                               // 0x358(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonLazyImage*                      Image_CategoryIcon;                                // 0x360(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UEquipmentCategoryRow* GetDefaultObj();

};

// 0x58 (0x310 - 0x2B8)
// Class LOTF2.InventoryGridPanelBase
class UInventoryGridPanelBase : public ULOTF2UserWidget
{
public:
	uint8                                        Pad_2CC3[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bShowCategories;                                   // 0x2F8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAddEmptyRows;                                     // 0x2F9(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2CC4[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        GridColumns;                                       // 0x2FC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        GridRows;                                          // 0x300(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ItemWidth;                                         // 0x304(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ItemHeight;                                        // 0x308(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2CC6[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UInventoryGridPanelBase* GetDefaultObj();

	void OnItemInteracted(class UObject* InteractedItem);
	bool IsEmpty();
	class UWidget* GetFocusTarget();
};

// 0xF0 (0x400 - 0x310)
// Class LOTF2.ItemGridPanel
class UItemGridPanel : public UInventoryGridPanelBase
{
public:
	struct FGameplayTag                          Tag_KeyboardInteract;                              // 0x310(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHexTileView*                          Grid;                                              // 0x318(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryItem*                        EquippedItem;                                      // 0x320(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UInventoryInteractionPanel> InventoryInteractionClass;                         // 0x328(0x30)(Edit, DisableEditOnTemplate, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          CurrentEquippedItemsTag;                           // 0x358(0x8)(Edit, DisableEditOnTemplate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          SoulsLanternItemCategory;                          // 0x360(0x8)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UInventoryGridItem>        InventoryGridItemClass;                            // 0x368(0x8)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2CC7[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UInventoryCategoryIcon>    ItemCategoryClass;                                 // 0x380(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UCommonUserWidget>         CategorySeparatorClass;                            // 0x388(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHorizontalBox*                        Panel_Categories;                                  // 0x390(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UScrollBox*                            Categories_Scroll;                                 // 0x398(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                      Text_Category;                                     // 0x3A0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPanelWidget*                          Categories_Container;                              // 0x3A8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UInventoryCategoryIcon*>        ItemCategories;                                    // 0x3B0(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2CC9[0x40];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UItemGridPanel* GetDefaultObj();

	void OnItemFocusedKeyboard(class UObject* EntryItem);
	void OnItemFocused(class UObject* InteractedItem);
	void OnInventoryItemChanged(class UInventoryItem* InventoryItem);
	void OnInteractionCompleted(class UInventoryItem* InventoryItem);
	void OnContentChangedOnClient();
	void OnCategorySelected(const struct FGameplayTag& CategoryTag);
	void BP_SelectItem(class UInventoryItem* ItemToSelect);
	struct FVector2D BP_GetParentSize();
};

// 0x0 (0x400 - 0x400)
// Class LOTF2.InventoryGridPanel
class UInventoryGridPanel : public UItemGridPanel
{
public:

	static class UClass* StaticClass();
	static class UInventoryGridPanel* GetDefaultObj();

};

// 0x20 (0x420 - 0x400)
// Class LOTF2.EquipmentGrid
class UEquipmentGrid : public UInventoryGridPanel
{
public:
	float                                        PopupDuration;                                     // 0x400(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          UsableItemsTag;                                    // 0x404(0x8)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2CCB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UExtensionPointEntryWidget> CantEquipItemPopupClass;                           // 0x410(0x8)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2CCC[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UEquipmentGrid* GetDefaultObj();

	void ServerEquipItemToSlot(class UInventoryItem* InventoryItem);
	void FocusSelectedWidget(class UInventoryGridItem* InventoryGridItem);
	void BP_OnUnequipItem();
	void BP_OnEquipItem();
};

// 0x58 (0x2F8 - 0x2A0)
// Class LOTF2.EquipmentGridPanel
class UEquipmentGridPanel : public UCommonUserWidget
{
public:
	uint8                                        Pad_2CCE[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UInventoryItemName*                    ItemName_Container;                                // 0x2C0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEquipmentGrid*                        Container_Grid;                                    // 0x2C8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FInventoryCategoryElement>     InventoryCategories;                               // 0x2D0(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2CCF[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UInventoryItem*                        FocusedItem;                                       // 0x2E8(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInventoryItem*                        EquippedItem;                                      // 0x2F0(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UEquipmentGridPanel* GetDefaultObj();

	void OnItemInteracted(class UObject* InventoryItem);
	void OnItemFocused(class UObject* InventoryItem);
	class UWidget* GetDesiredFocusTarget();
};

// 0x70 (0x310 - 0x2A0)
// Class LOTF2.ItemPanelContainer
class UItemPanelContainer : public UCommonUserWidget
{
public:
	class UWidgetSwitcher*                       Panels_Container;                                  // 0x2A0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<struct FGameplayTag, class UInventoryItemPanel*> ItemTypePanels;                                    // 0x2A8(0x50)(ExportObject, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UInventoryItem*                        InventoryItem;                                     // 0x2F8(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FInventoryCategoryElement>     InventoryCategories;                               // 0x300(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UItemPanelContainer* GetDefaultObj();

};

// 0x28 (0x338 - 0x310)
// Class LOTF2.EquipmentItemPanel
class UEquipmentItemPanel : public UItemPanelContainer
{
public:
	bool                                         bIsEquipped;                                       // 0x310(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2CD2[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UInventoryItemName*                    Item_Name;                                         // 0x318(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                      Stat_ItemFamily;                                   // 0x320(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            ItemFamilyDefinition;                              // 0x328(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryItem*                        ItemToCompare;                                     // 0x330(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UEquipmentItemPanel* GetDefaultObj();

	class FText GetItemFamily(const struct FGameplayTag& ItemCategory);
	void BP_UpdateEquipStatus();
};

// 0x150 (0x200 - 0xB0)
// Class LOTF2.EquipmentManagerComponent
class UEquipmentManagerComponent : public UActorComponent
{
public:
	uint8                                        Pad_2CEE[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnAnyEquipmentChange;                              // 0xF0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnAnyEquipmentVisualLoaded;                        // 0x100(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CEF[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnAmmoRangedSlotChanged;                           // 0x120(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CF0[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnLeftHandEquippedChanged;                         // 0x160(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRightHandEquippedChanged;                        // 0x170(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CF1[0x80];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UEquipmentManagerComponent* GetDefaultObj();

	void UnequipSlot(enum class EFEquipmentSlot Slot, bool bSlotWillBeEmpty, bool bUnequipEverything);
	void StopUsingRangedOption();
	void StartUsingRangedOption(enum class EFEquipmentSlot NewEquipmentSlot, enum class EStanceType NewStanceType);
	void SetupInventoryComponentFromActorBegunPlay();
	void SetupInventoryComponent();
	void SetEquippedGear(enum class EFEquipmentSlot Slot, class UEquipableInventoryItem* Gear);
	void ServerUnequipSlot(enum class EFEquipmentSlot Slot, bool bSlotWillBeEmpty);
	void ServerSetEquippedGear(enum class EFEquipmentSlot Slot, class UEquipableInventoryItem* Gear);
	void SelectThrowableAmmoEquipmentSlot(enum class EFEquipmentSlot Slot);
	void SelectRangedAmmoEquipmentSlot(enum class EFEquipmentSlot Slot);
	void OnStanceTypeChanged(enum class EStanceType OldStance, enum class EStanceType NewStance);
	void OnSecondaryWeaponHolsterStateChanged(bool bHolstered);
	void OnPrimaryWeaponHolsterStateChanged(bool bHolstered);
	void OnCombatStateRangedWeaponHoldRangedWeapon(const struct FGameplayTag& InTag, int32 NewCount);
	void OnCharacterUnPossessed(class ALOTF2Character* PCharacter);
	bool IsSlotFull(enum class EFEquipmentSlot EquipmentSlot);
	bool IsRightHandEquipped();
	bool IsReady();
	bool IsLeftHandEquipped();
	class UEquipableInventoryTumor* GetTumorEquipment(enum class EFEquipmentSlot Slot);
	class UEquipableInventorySoulsLantern* GetSoulsLanternEquipment();
	class UEquipableInventoryWeapon* GetSecondaryWeaponEquipment();
	class UEquipableInventoryRangedWeapon* GetRangedWeaponEquipment();
	class UEquipableInventoryItem* GetRangedAmmoItem();
	enum class EFEquipmentSlot GetRangedAmmoEquipmentSlot();
	class UEquipableInventoryAmmo* GetRangedAmmoEquipment(enum class EFEquipmentSlot Slot);
	class UEquipableInventoryWeapon* GetPrimaryWeaponEquipment();
	class UEquipableInventoryMagic* GetMagicEquipment(enum class EFEquipmentSlot Slot);
	class UEquipableInventoryItem* GetEquippedGear(enum class EFEquipmentSlot Slot);
	enum class EHexEquipmentLoadTier GetCurrentEquipmentLoadWeightTier();
	class AActor* GetBlockingWeaponEquipmentSpawnedActorInstance();
	class UEquipableInventoryWeapon* GetBlockingWeaponEquipment();
	class UEquipableInventoryArmor* GetArmorEquipment(enum class EFEquipmentSlot Slot);
	void DebugSetIgnoreStatsRequirementsForEquipping(bool Ignore);
	bool DebugGetIgnoreStatsRequirementsForEquipping();
	void DEBUG_ServerAddDebugWeapon(TSubclassOf<class UWeaponsData> WeaponsDataClass, uint32 DesiredLevel, uint8 Slot);
	void DEBUG_ServerAddDebugArmorPiece(TSubclassOf<class UArmorPieceData> ArmorPieceData, uint32 DesiredLevel);
	void ChangeUsedRangedOption(enum class EFEquipmentSlot NewEquipmentSlot, enum class EStanceType NewStanceType);
	bool CanBuffSecondaryWeapon();
	bool CanBuffPrimaryWeapon();
	void BP_EquipWeaponOnSlot(enum class EFEquipmentSlot Slot, class UWeaponsData* EquipmentData);
	void BP_EquipWeaponClassOnSlot(enum class EFEquipmentSlot Slot, TSubclassOf<class UWeaponsData> EquipmentDataClass);
	bool AreInitialGearEquipped();
};

// 0x70 (0x380 - 0x310)
// Class LOTF2.EquipmentPanel
class UEquipmentPanel : public UInventoryGridPanelBase
{
public:
	uint8                                        Pad_2CF2[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          Bow_IdentifierTag;                                 // 0x320(0x8)(Edit, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          Crossbow_IdentifierTag;                            // 0x328(0x8)(Edit, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          Throwable_IdentifierTag;                           // 0x330(0x8)(Edit, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          CatalystWeaponIdentifierTag;                       // 0x338(0x8)(Edit, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPlayerEquipmentPanel*                 EquipmentPanel_Rows;                               // 0x340(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonAnimatedSwitcher*               Equipment_Switcher;                                // 0x348(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UEquipmentGrid*                        Grid_Panel;                                        // 0x350(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2CF3[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UInventoryGridItem*>            InventoryGridItems;                                // 0x360(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class UInventoryGridItem*                    FocusedItem;                                       // 0x370(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2CF4[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UEquipmentPanel* GetDefaultObj();

	void OnUnequipSelectedItem();
	void OnGridItemInteracted(class UObject* InventoryItem);
	void OnGridItemFocusedCategory(class UObject* InventoryItem, const struct FGameplayTag& ItemCategory);
	void OnGridItemFocused(class UObject* InventoryItem);
	void OnCycleHoldProgress(float Progress);
	void Client_OnEquippedItemChangeHandle(class UInventoryItem* EquippedItem);
	void Client_OnAnyEquipmentChangeHandle();
};

// 0xE8 (0x5D8 - 0x4F0)
// Class LOTF2.EquipmentScreenWidget
class UEquipmentScreenWidget : public UInGameMenuPanel
{
public:
	TSoftClassPtr<class UItemData>               AnchorSeedClass;                                   // 0x4F0(0x30)(Edit, BlueprintVisible, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryGridItem*                    Item_AnchorSeed;                                   // 0x520(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UItemData>               LanternClass;                                      // 0x528(0x30)(Edit, BlueprintVisible, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryGridItem*                    Item_Lantern;                                      // 0x558(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlayerEquipmentPanel*                 Equipment_Panel;                                   // 0x560(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                          Container_Comparison;                              // 0x568(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryGridItem*                    FocusedItem;                                       // 0x570(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEquipmentGridPanel*                   Item_Grid_Panel;                                   // 0x578(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonAnimatedSwitcher*               Panel_Switcher;                                    // 0x580(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEquipmentItemPanel*                   Item_Equipped;                                     // 0x588(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEquipmentItemPanel*                   Item_Comparison;                                   // 0x590(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2CF7[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UProgressBar*                          Progressbar_Weight;                                // 0x5A0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryCharacterStatusPanel*        SmallStats_Panel;                                  // 0x5A8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                      Text_Weight;                                       // 0x5B0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UItemPanelContainer*                   Item_Info_Panel;                                   // 0x5B8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2CF8[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UEquipmentScreenWidget* GetDefaultObj();

	void OnUnequipSelectedItem();
	void OnItemEquipped(class UInventoryItem* EquippedItem, int32 ItemSlot);
	void OnInventoryDirtied();
	void OnInventoryCategorySelected(const struct FGameplayTag& CategoryTag);
	void OnGridItemInteracted(class UObject* Item);
	void OnGridItemFocused(class UInventoryItem* InventoryItem);
	void OnEquipmentUneditableChanged(const struct FGameplayTag& GameplayTag, int32 Count);
	void OnCycleVisualization();
	void OnCategoryItemInteracted(class UObject* InventoryItem);
	void OnCategoryItemFocused(class UObject* InventoryItem, const struct FGameplayTag& ItemCategory);
	void OnAnyEquipmentChangeHandle();
	void BP_UpdateWeight(float Percent, float MediumThreshold, float HeavyThreshold, float EncumberedThreshold, struct FLinearColor& WeightColor);
	void BP_SelectItem(class UInventoryGridItem* Item);
	void BP_SelectGrid();
	void BP_OnUnequipItem();
	void BP_EnableGrid(bool bEnabled, bool bItemEquipped);
};

// 0x60 (0x90 - 0x30)
// Class LOTF2.EquipmentSlotMultipliersAttributeSet
class UEquipmentSlotMultipliersAttributeSet : public UAttributeSet
{
public:
	struct FGameplayAttributeData                PrimaryWeaponDamageMultiplier;                     // 0x30(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                SecondaryWeaponDamageMultiplier;                   // 0x40(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                TwoHandingDamageMultiplier;                        // 0x50(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                DualWieldingDamageMultiplier;                      // 0x60(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                ThrowablesDamageMultiplier;                        // 0x70(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                ChargedAttacksDamageMultiplier;                    // 0x80(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UEquipmentSlotMultipliersAttributeSet* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class LOTF2.EquipmentVisualInterface
class IEquipmentVisualInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IEquipmentVisualInterface* GetDefaultObj();

};

// 0x78 (0xB8 - 0x40)
// Class LOTF2.EventManager
class UEventManager : public UTickableWorldSubsystem
{
public:
	uint8                                        Pad_2CF9[0x78];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UEventManager* GetDefaultObj();

};

// 0x20 (0x50 - 0x30)
// Class LOTF2.EventNameBasedControllerIcons
class UEventNameBasedControllerIcons : public UPrimaryDataAsset
{
public:
	TArray<struct FEventNameBasedTextures>       EventNameBasedControllerTextures;                  // 0x30(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2CFA[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UEventNameBasedControllerIcons* GetDefaultObj();

};

// 0x20 (0x50 - 0x30)
// Class LOTF2.InputKeyBasedControllerIcons
class UInputKeyBasedControllerIcons : public UPrimaryDataAsset
{
public:
	TArray<struct FInputKeyBasedTextures>        InputKeyBasedControllerTextures;                   // 0x30(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FCompositeInputKeyBasedTextures> CompositeInputKeyBasedControllerTextures;          // 0x40(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UInputKeyBasedControllerIcons* GetDefaultObj();

};

// 0x118 (0x140 - 0x28)
// Class LOTF2.HexDamageExecutionResult
class UHexDamageExecutionResult : public UObject
{
public:
	float                                        TotalDamageToHealthDealt;                          // 0x28(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CFB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<struct FGameplayAttribute, float>       DamageToHealthDealtByType;                         // 0x30(0x50)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TMap<struct FGameplayAttribute, float>       ExtraDamagesDealtByType;                           // 0x80(0x50)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TMap<struct FGameplayAttribute, float>       StatusBuildupGeneratedByType;                      // 0xD0(0x50)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                         bHasBeenBlocked;                                   // 0x120(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasBeenParried;                                   // 0x121(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bStaggerReactionExecuted;                          // 0x122(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CFC[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class AActor>                 Instigator;                                        // 0x124(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AActor>                 TargetActor;                                       // 0x12C(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AActor>                 EffectCauserActor;                                 // 0x134(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2CFD[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexDamageExecutionResult* GetDefaultObj();

};

// 0x50 (0x90 - 0x40)
// Class LOTF2.ExecutionCalculation_Damage
class UExecutionCalculation_Damage : public UGameplayEffectExecutionCalculation
{
public:
	uint8                                        Pad_2CFE[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UExecutionCalculation_Damage* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class LOTF2.ExecutionCalculation_WeaponStats
class UExecutionCalculation_WeaponStats : public UGameplayEffectExecutionCalculation
{
public:

	static class UClass* StaticClass();
	static class UExecutionCalculation_WeaponStats* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class LOTF2.Execution_BlockInvasions
class UExecution_BlockInvasions : public UGameplayEffectExecutionCalculation
{
public:

	static class UClass* StaticClass();
	static class UExecution_BlockInvasions* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class LOTF2.Execution_InvasionItemUsed
class UExecution_InvasionItemUsed : public UGameplayEffectExecutionCalculation
{
public:

	static class UClass* StaticClass();
	static class UExecution_InvasionItemUsed* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class LOTF2.Execution_PerformForcedReaction
class UExecution_PerformForcedReaction : public UGameplayEffectExecutionCalculation
{
public:

	static class UClass* StaticClass();
	static class UExecution_PerformForcedReaction* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class LOTF2.Execution_RevengeCooldownReduction
class UExecution_RevengeCooldownReduction : public UGameplayEffectExecutionCalculation
{
public:

	static class UClass* StaticClass();
	static class UExecution_RevengeCooldownReduction* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class LOTF2.Execution_SendGameplayEvent
class UExecution_SendGameplayEvent : public UGameplayEffectExecutionCalculation
{
public:

	static class UClass* StaticClass();
	static class UExecution_SendGameplayEvent* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class LOTF2.Execution_SoulFlayApplication
class UExecution_SoulFlayApplication : public UGameplayEffectExecutionCalculation
{
public:

	static class UClass* StaticClass();
	static class UExecution_SoulFlayApplication* GetDefaultObj();

};

// 0x8 (0x48 - 0x40)
// Class LOTF2.Execution_TeleportToLastAnchor
class UExecution_TeleportToLastAnchor : public UGameplayEffectExecutionCalculation
{
public:
	uint8                                        Pad_2CFF[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UExecution_TeleportToLastAnchor* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class LOTF2.Execution_TeleportToLastAnchorWithVigorDrop
class UExecution_TeleportToLastAnchorWithVigorDrop : public UExecution_TeleportToLastAnchor
{
public:

	static class UClass* StaticClass();
	static class UExecution_TeleportToLastAnchorWithVigorDrop* GetDefaultObj();

};

// 0x18 (0x250 - 0x238)
// Class LOTF2.ExtensionPointWidget
class UExtensionPointWidget : public UDynamicEntryBox
{
public:
	struct FGameplayTag                          ExtensionPointTag;                                 // 0x238(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2D01[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UExtensionPointWidget* GetDefaultObj();

	void OnEntryHidden(class UExtensionPointEntryWidget* EntryWidget);
	class UExtensionPointEntryWidget* EnqueueEntry(TSubclassOf<class UExtensionPointEntryWidget>& UserWidget, float Duration);
};

// 0x390 (0x630 - 0x2A0)
// Class LOTF2.RevengeActivationPoint
class ARevengeActivationPoint : public AActor
{
public:
	class ARevengeCharacter*                     RevengeCharacterInstance;                          // 0x2A0(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULOTF2SerializationComponent*          SerializationComponent;                            // 0x2A8(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FRevengeActivationPointConfiguration  RevengeActivationPointConfiguration;               // 0x2B0(0x300)(Edit, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class ARevengeCharacter>       RevengeCharacterClass;                             // 0x5B0(0x30)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                  StaticMeshComponent;                               // 0x5E0(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USceneComponent*                       InteractionCollisionRoot;                          // 0x5E8(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USplineComponent*                      BackupPathSpline;                                  // 0x5F0(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USceneComponent*                       RevengedPlayerPosition;                            // 0x5F8(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2D02[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ARevengeActivationPoint* GetDefaultObj();

	void OnRevengePointStartDestroy();
	void OnPlayerClassLoaded();
	void MulticastRewardForRevengeCompletion(const struct FRevengeData& RevengeData);
	class ARevengeCharacter* GetRevengeCharacterInstance();
};

// 0x50 (0x680 - 0x630)
// Class LOTF2.FakeRevengeActivationPoint
class AFakeRevengeActivationPoint : public ARevengeActivationPoint
{
public:
	TWeakObjectPtr<class ATutorialMessage_Area>  RevengeTutorialMessageArea;                        // 0x630(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class ASimpleCharacterSpawner> RevengeEnemySpawner;                               // 0x638(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                RevengeName;                                       // 0x640(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDataTableRowHandle                   CompletedRevengeReward;                            // 0x650(0x10)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2D04[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFakeRevengeActivationPoint* GetDefaultObj();

	void OnSoulPullStarted(class AActor* Actor, const struct FVector& PullDirectionWS);
	void OnRevengeEnemySpawned(class ASimpleCharacterSpawner* Spawner, class ALOTF2Character* Character);
	void OnRevengeEnemyDeath(class AActor* InstigatorActor, struct FGameplayTagContainer& InstigatorTags, bool bDeathWasObserved);
};

// 0x160 (0x418 - 0x2B8)
// Class LOTF2.HoldButton
class UHoldButton : public ULOTF2UserWidget
{
public:
	FMulticastInlineDelegateProperty_            OnHoldActionComplete;                              // 0x2B8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnHoldProgressChanged;                             // 0x2C8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UFocusableButtonWidget*                Root_Button;                                       // 0x2D8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bInteractable;                                     // 0x2E0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShowButtonOnAnyKeyPress;                          // 0x2E1(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bStartHidden;                                      // 0x2E2(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2D05[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DelayTime;                                         // 0x2E4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HideDelayTime;                                     // 0x2E8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          Action;                                            // 0x2EC(0x8)(Edit, BlueprintVisible, DisableEditOnTemplate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2D06[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  TextDescription;                                   // 0x2F8(0x18)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	class UProgressBar*                          Hold_ProgressBar;                                  // 0x310(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                         ProgressSound;                                     // 0x318(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                         FinishedSound;                                     // 0x320(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                         DefaultProgressSound;                              // 0x328(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                         DefaultFinishedSound;                              // 0x330(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2D07[0xE0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHoldButton* GetDefaultObj();

	void ShowButton();
	void SetCanBeInteracted(bool bCanBeInteracted);
	void OnHoldProgress(float Progress);
	void OnHoldActionFinishes(bool bFinished);
	void OnHoldActionFinished();
	void OnButtonRelease();
	void OnButtonPress();
	bool IsPressingButton();
	void BP_OnHoldActionFinished();
};

// 0x28 (0x440 - 0x418)
// Class LOTF2.FastTravelButtonWidget
class UFastTravelButtonWidget : public UHoldButton
{
public:
	FMulticastInlineDelegateProperty_            OnFastTravelButtonPressed;                         // 0x418(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnFastTravelButtonFocused;                         // 0x428(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D08[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFastTravelButtonWidget* GetDefaultObj();

	void SetLocationImage(class UTexture2D* LocationImage, class FText& AnchorName, class FText& LocationName);
	void OnButtonFocused();
	void OnButtonClicked();
};

// 0x90 (0x580 - 0x4F0)
// Class LOTF2.FastTravelScreenWidget
class UFastTravelScreenWidget : public UInGameMenuPanel
{
public:
	uint8                                        Pad_2D0A[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFastTravelButtonWidget*               Teleport_Hub;                                      // 0x500(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFastTravelButtonWidget*               Teleport_ForgedAnchor;                             // 0x508(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFastTravelButtonWidget*               Teleport_Last;                                     // 0x510(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonUserWidget*                     Title_Latest;                                      // 0x518(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonUserWidget*                     Title_Vestiges;                                    // 0x520(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGridPanel*                            Grid_Vestiges;                                     // 0x528(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UFastTravelButtonWidget>   FastTravelButtonClass;                             // 0x530(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ADualRealmAnchorActor*                 AnchorActorRef;                                    // 0x538(0x8)(BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UFastTravelButtonWidget*>       AnchorLocationButtons;                             // 0x540(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UImage*                                Image_Location;                                    // 0x550(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                      Text_Location_Name;                                // 0x558(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                      Text_TeleportLocation;                             // 0x560(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                      Text_Location_Description;                         // 0x568(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFastTravelButtonWidget*               LastSelectedButton;                                // 0x570(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2D0B[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFastTravelScreenWidget* GetDefaultObj();

	void SetAnchorRef(class ADualRealmAnchorActor* DualRealmAnchorActor);
	void PerformFastTravel();
	class UWidget* OnWrapNavigation(enum class EUINavigation UiNavigation);
	void OnTeleportPointSelected(class UFastTravelButtonWidget* buttonWidget, class FName TeleportPoint);
	class UWidget* GetFocusTarget();
	void BP_ShowAvailableTeleportPoints(bool bShowPoints);
	void BP_SetShortcutsVisibility(bool bShortcutsAvailable);
};

// 0x120 (0x1D0 - 0xB0)
// Class LOTF2.FeedbackComponent
class UFeedbackComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnDamageTakenDelegate;                             // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D11[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UDataTable*                            FeedbackDataTable;                                 // 0xD8(0x8)(Edit, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEnvironmentHitFXData*                 EnvironmentHitFXData;                              // 0xE0(0x8)(Edit, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDamageIntensityHitFXData*             DamageIntensityHitFXData;                          // 0xE8(0x8)(Edit, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCharacterHitFXData*                   CharacterHitFXData;                                // 0xF0(0x8)(Edit, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCharacterHitFXData*                   SoulflayCharacterHitFXData;                        // 0xF8(0x8)(Edit, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               DeterministicBloodOffset;                          // 0x100(0x18)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DeterministicBloodLerpToImpact;                    // 0x118(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HealthThresholdPercentage;                         // 0x11C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FAkAnathemaEvent                      LowHealthAkEvent;                                  // 0x120(0x50)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FAkAnathemaEvent                      EnemyDeadAkEvent;                                  // 0x170(0x50)(Edit, Protected, NativeAccessSpecifierProtected)
	bool                                         bEnableDeadFeedback;                               // 0x1C0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2D12[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFeedbackComponent* GetDefaultObj();

	void SpawnBloodPool();
	void OnRagdollStateChanged(enum class ERagdollState State);
	void OnCharacterHasBegunPlay();
	void HandleHealthChanged(float OldHealth, float NewHealth);
	void HandleDeath(class AActor* InstigatorActor, struct FGameplayTagContainer& InstigatorTags, bool bDeathWasObserved);
	class UCharacterHitFXData* GetSoulflayCharacterHitFXData();
	class UEnvironmentHitFXData* GetEnvironmentHitFXData();
	class UDamageIntensityHitFXData* GetDamageIntensityHitFXData();
	class UCharacterHitFXData* GetCharacterHitFXData();
	bool GameplayCueCombatBlock(struct FGameplayCueParameters& Parameters);
	bool GameplayCueCombatAttackTakeDamage(struct FGameplayCueParameters& Parameters);
};

// 0x0 (0x2B0 - 0x2B0)
// Class LOTF2.FirstEncounterTriggerDebugComp
class UFirstEncounterTriggerDebugComp : public USceneComponent
{
public:

	static class UClass* StaticClass();
	static class UFirstEncounterTriggerDebugComp* GetDefaultObj();

};

// 0x40 (0x130 - 0xF0)
// Class LOTF2.FlinchComponent
class UFlinchComponent : public UPhysicalAnimationComponent
{
public:
	class UCurveFloat*                           FlinchPhysicsBlendCurve;                           // 0xF0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlinchDuration;                                    // 0xF8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPhysicalAnimationData                PhysicalAnimationData;                             // 0xFC(0x24)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	float                                        FlinchStrength;                                    // 0x120(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D13[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFlinchComponent* GetDefaultObj();

	void StopFlinch();
	void ProcessFlinch(const struct FRotator& RelativeShotRotation);
};

// 0x10 (0x2B0 - 0x2A0)
// Class LOTF2.FloatingPlatform
class AFloatingPlatform : public AActor
{
public:
	class UInteractionComponent*                 InteractionComponent;                              // 0x2A0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanOpen;                                          // 0x2A8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanClose;                                         // 0x2A9(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsOpen;                                           // 0x2AA(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2D15[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AFloatingPlatform* GetDefaultObj();

	bool Open(class AController* OpenInstigator);
	bool IsActivated();
	void HandleOpen();
	void HandleClose();
	void ForceOpen();
	void Close();
	bool CanInteract();
};

// 0x40 (0x2F8 - 0x2B8)
// Class LOTF2.FlowTitleWidget
class UFlowTitleWidget : public ULOTF2UserWidget
{
public:
	class FText                                  CharCustomizationText;                             // 0x2B8(0x18)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	class FText                                  CharCustomizationStep;                             // 0x2D0(0x18)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                      TitleLabel;                                        // 0x2E8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBreadcrumbsWidget*                    Breadcrumbs;                                       // 0x2F0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFlowTitleWidget* GetDefaultObj();

	void SetStepName(class FText& NewStep);
	void SetActiveStep(enum class ECharCreationMode ActiveIndex);
	void ClearBreadcrumbs();
	void AddBreadcrumb(enum class ECharCreationMode ID, class FText& Text);
};

// 0x4F8 (0x7B0 - 0x2B8)
// Class LOTF2.FocusableButtonWidget
class UFocusableButtonWidget : public UHexFocusableWidget
{
public:
	FMulticastInlineDelegateProperty_            OnButtonClick;                                     // 0x2B8(0x10)(ZeroConstructor, InstancedReference, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnButtonPress;                                     // 0x2C8(0x10)(ZeroConstructor, InstancedReference, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnButtonRelease;                                   // 0x2D8(0x10)(ZeroConstructor, InstancedReference, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnButtonClickGroup;                                // 0x2E8(0x10)(ZeroConstructor, InstancedReference, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnFocusIn;                                         // 0x2F8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnFocusOut;                                        // 0x308(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	class UButton*                               Button_Background;                                 // 0x318(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsSelected;                                       // 0x320(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsCheckable;                                      // 0x321(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsChecked;                                        // 0x322(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsCheckedStateLocked;                             // 0x323(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2D17[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FButtonStyle                          ButtonStyle;                                       // 0x330(0x3F0)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                         ClickSound;                                        // 0x720(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                         HoverSound;                                        // 0x728(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsHostOnly;                                       // 0x730(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseCompositeQuery;                                // 0x731(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2D18[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAnathemaQuery                        VisibilityQuery;                                   // 0x738(0x50)(Edit, Protected, NativeAccessSpecifierProtected)
	TArray<struct FAnathemaQuery>                CompositeQueries;                                  // 0x788(0x10)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bForceCheckable;                                   // 0x798(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsInteractable;                                   // 0x799(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2D19[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAkAudioEvent*                         DefaultHoverSound;                                 // 0x7A0(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                         DefaultClickSound;                                 // 0x7A8(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UFocusableButtonWidget* GetDefaultObj();

	void SetStyle(const struct FButtonStyle& ButtonStyle);
	void SetInteractable(bool Interactable);
	void SetCheckedStateLocked(bool Locked);
	void SetChecked(bool Checked);
	void SetCheckable(bool Checkable);
	void Select(bool Select, bool PlaySoundAndFeedback);
	void OnButtonReleased();
	void OnButtonPressed();
	void OnButtonClicked();
	bool IsCheckedStateLocked();
	bool IsChecked();
	bool IsCheckable();
};

// 0x0 (0x2A0 - 0x2A0)
// Class LOTF2.FogGate
class AFogGate : public AActor
{
public:

	static class UClass* StaticClass();
	static class AFogGate* GetDefaultObj();

	void Materialize();
	void DeMaterialize();
};

// 0x118 (0x148 - 0x30)
// Class LOTF2.FootstepEventData
class UFootstepEventData : public UDataAsset
{
public:
	TMap<class UPhysicalMaterial*, class UAkSwitchValue*> FootwareAkSwitches;                                // 0x30(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TMap<class UPhysicalMaterial*, class UAkSwitchValue*> FloorAkSwitches;                                   // 0x80(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TMap<class UPhysicalMaterial*, class UNiagaraSystem*> FloorNiagaraFXs;                                   // 0xD0(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<class UPhysicalMaterial*>             WaterMaterials;                                    // 0x120(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class UPhysicalMaterial*                     DeepWaterMaterial;                                 // 0x130(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UNiagaraSystem*                        DeepWaterNiagaraFX;                                // 0x138(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DeepWaterMinimumDepth;                             // 0x140(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D1A[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFootstepEventData* GetDefaultObj();

};

// 0xD8 (0x108 - 0x30)
// Class LOTF2.FXData
class UFXData : public UPrimaryDataAsset
{
public:
	struct FHitFxData                            HitFxData;                                         // 0x30(0xD8)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFXData* GetDefaultObj();

};

// 0x50 (0x80 - 0x30)
// Class LOTF2.GalleryData
class UGalleryData : public UDataAsset
{
public:
	TMap<enum class EHexAITeams, struct FGalleryEntryMapWrapper> GalleryEntries;                                    // 0x30(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGalleryData* GetDefaultObj();

};

// 0xE0 (0x380 - 0x2A0)
// Class LOTF2.GalleryController
class AGalleryController : public AActor
{
public:
	FMulticastInlineDelegateProperty_            OnEntryPreSpawn;                                   // 0x2A0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnEntryPostSpawn;                                  // 0x2B0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnLevelScaled;                                     // 0x2C0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UGalleryData*                          GalleryData;                                       // 0x2D0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpawnDelay;                                        // 0x2D8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2D1D[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ABaseAICharacter*                      Character;                                         // 0x2F8(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2D1E[0x80];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGalleryController* GetDefaultObj();

	void SetGalleryFogValues(class UExponentialHeightFogComponent* ExponentialHeightFogComponent, float ExtinctionScale, float StartDistance, float NearFadeInDistance);
	void SetGalleryEntry(enum class EHexAITeams Team, struct FGameplayTag& EntryTag);
	void ScaleGalleryActors(float Scale);
	void OnEntryLoaded();
	void OnCharacterRegistered(class ABaseAICharacter* BaseAICharacter);
	class UGalleryData* GetGalleryData();
	class ABaseAICharacter* GetCharacter();
};

// 0x230 (0x708 - 0x4D8)
// Class LOTF2.InGameMenuContainer
class UInGameMenuContainer : public UHexActivatableWidget
{
public:
	bool                                         bCreatePanels;                                     // 0x4D8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2D21[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UDataTable*                            TopBarButtonsDefinition;                           // 0x4E0(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<struct FGameplayTag, TSubclassOf<class UInGameMenuPanel>> Sections;                                          // 0x4E8(0x50)(Edit, BlueprintVisible, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TMap<struct FGameplayTag, TSubclassOf<class UInGameMenuPanel>> SpectatorSections;                                 // 0x538(0x50)(Edit, BlueprintVisible, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	struct FGameplayTag                          DefaultSection;                                    // 0x588(0x8)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHideHud;                                          // 0x590(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanExitScreen;                                    // 0x591(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bTopBarVisible;                                    // 0x592(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShowTopBarButtons;                                // 0x593(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShowTopBarNavigation;                             // 0x594(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShowTopBarTitle;                                  // 0x595(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2D22[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  TopBarTitle;                                       // 0x598(0x18)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	TMap<struct FGameplayTag, class FText>       CustomBottomBarActions;                            // 0x5B0(0x50)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	bool                                         bCustomBackActionEnabled;                          // 0x600(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2D23[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCommonAnimatedSwitcher*               Content_Switcher;                                  // 0x608(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInGameTopBarPanel*                    Panel_TopBar;                                      // 0x610(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInGameBottomBarPanel*                 Panel_BottomBar;                                   // 0x618(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        NavigationOptions;                                 // 0x620(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2D24[0xF];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<struct FGameplayTag, class UInGameMenuPanel*> MenuSections;                                      // 0x630(0x50)(ExportObject, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TMap<struct FGameplayTag, TSubclassOf<class UInGameMenuPanel>> CurrentMenuSections;                               // 0x680(0x50)(Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2D25[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UInGameMenuContainer* GetDefaultObj();

	void SwitchPanel(const struct FGameplayTag& PanelID);
	void RefreshFocusInternal();
	void QuitGame();
	void OnSwitchComplete(class UWidget* Widget, int32 Index);
	void OnQuitGameRequested();
	void OnNavigationSwitchPercent(enum class ENavigationBoxOptions NavOption, float SwitchPercent);
	class UInGameMenuPanel* GetPanel(const struct FGameplayTag& Section);
	class UInGameMenuPanel* GetCurrentPanel();
	void BP_QuitGame();
};

// 0x20 (0x728 - 0x708)
// Class LOTF2.GalleryMenuContainer
class UGalleryMenuContainer : public UInGameMenuContainer
{
public:
	FMulticastInlineDelegateProperty_            OnMenuStateChanged;                                // 0x708(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FGameplayTag                          SelectionSection;                                  // 0x718(0x8)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          EmptySection;                                      // 0x720(0x8)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGalleryMenuContainer* GetDefaultObj();

};

// 0x58 (0x80 - 0x28)
// Class LOTF2.GalleryItem
class UGalleryItem : public UObject
{
public:
	class FString                                EntryName;                                         // 0x28(0x10)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          EntryTag;                                          // 0x38(0x8)(BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EHexAITeams                       AITeam;                                            // 0x40(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D26[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UTexture2D>             IconTexture;                                       // 0x48(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsUnlocked;                                       // 0x78(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsViewed;                                         // 0x79(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D27[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGalleryItem* GetDefaultObj();

};

// 0xA0 (0x590 - 0x4F0)
// Class LOTF2.GalleryPanel
class UGalleryPanel : public UInGameMenuPanel
{
public:
	class UHexTileView*                          GalleryTileView;                                   // 0x4F0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFocusableButtonWidget*                Button_Native;                                     // 0x4F8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFocusableButtonWidget*                Button_Rhogar;                                     // 0x500(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFocusableButtonWidget*                Button_Radiant;                                    // 0x508(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFocusableButtonWidget*                Button_Umbral;                                     // 0x510(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFocusableButtonWidget*                Button_Bosses;                                     // 0x518(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFocusableButtonWidget*                Button_NPCs;                                       // 0x520(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            Text_CharacterName;                                // 0x528(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOverlay*                              Overlay;                                           // 0x530(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          MenuToggleTag;                                     // 0x538(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                               CurrentlyFocusedWidget;                            // 0x540(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_            BP_OnModelClicked;                                 // 0x548(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	uint16                                       DefaultAITeam;                                     // 0x558(0x2)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint16                                       NativeAITeam;                                      // 0x55A(0x2)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint16                                       RhogarAITeam;                                      // 0x55C(0x2)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint16                                       RadiantAITeam;                                     // 0x55E(0x2)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint16                                       UmbralAITeam;                                      // 0x560(0x2)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint16                                       BossesAITeam;                                      // 0x562(0x2)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint16                                       NPCsAITeam;                                        // 0x564(0x2)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint16                                       AITeam;                                            // 0x566(0x2)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ULegendaryEditionManager*              LegendaryEditionManager;                           // 0x568(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2D2A[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                LoadOptions;                                       // 0x578(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGalleryMenuContainer*                 GalleryMenuContainer;                              // 0x588(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGalleryPanel* GetDefaultObj();

	void SetCharacterDisplayName(class ABaseAICharacter* Character);
	void SetAITeam(uint16 AiTeams);
	void OnSelectModel();
	void OnQuitGallery();
	void OnMenuToggle();
	void OnGalleryItemClicked(class UObject* Item);
	void OnButtonUmbral();
	void OnButtonRhogar();
	void OnButtonRadiant();
	void OnButtonNPC();
	void OnButtonNative();
	void OnButtonBosses();
	bool IsEntryViewed(struct FGameplayTag& EntryTag);
	bool IsEntryUnlocked(struct FGameplayTag& EntryTag);
};

// 0xD8 (0x390 - 0x2B8)
// Class LOTF2.GalleryWidget
class UGalleryWidget : public ULOTF2UserWidget
{
public:
	class UInputAction*                          PanInputAction;                                    // 0x2B8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInputAction*                          RotateZoomInputAction;                             // 0x2C0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DeadZone;                                          // 0x2C8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PanDistance;                                       // 0x2CC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PanSpeedMultiplier;                                // 0x2D0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ControllerZoomSpeedMultiplier;                     // 0x2D4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ControllerRotationSpeedMultiplier;                 // 0x2D8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MouseZoomSpeedMultiplier;                          // 0x2DC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MouseRotationSpeedMultiplier;                      // 0x2E0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2D2E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AGalleryController*                    GalleryController;                                 // 0x2E8(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ACameraActor*                          MainCamera;                                        // 0x2F0(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ACameraActor*                          BackCamera;                                        // 0x2F8(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ACameraActor*                          FrontCamera;                                       // 0x300(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bMouseButtonDown;                                  // 0x308(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2D30[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ZoomLevel;                                         // 0x30C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         IsSelectionWidgetEnabled;                          // 0x310(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2D31[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PanOffset;                                         // 0x314(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        ScaleOffset;                                       // 0x318(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2D32[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               MainCameraPosition;                                // 0x320(0x18)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FRotator                              InitialCharacterRotation;                          // 0x338(0x18)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	struct FRotator                              CurrentCharacterRotation;                          // 0x350(0x18)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	struct FVector                               InitialCharacterPosition;                          // 0x368(0x18)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bCameraInitialized;                                // 0x380(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2D33[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint32                                       RotateZoomInputHandle;                             // 0x384(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint32                                       PanInputHandle;                                    // 0x388(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2D34[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGalleryWidget* GetDefaultObj();

	void SetSelectionWidgetEnabled(bool bEnabled);
	void SetCamera(class ACameraActor* Camera, bool bZoomIn);
	void Reset();
	void OnLevelScaled(float Scale);
	void OnControllerZoom(float Value);
	void OnControllerRotate(float Value);
	void EnableCameraControls();
	void DisableCameraControls();
};

// 0x0 (0x40 - 0x40)
// Class LOTF2.GameDamageType
class UGameDamageType : public UDamageType
{
public:

	static class UClass* StaticClass();
	static class UGameDamageType* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class LOTF2.DefaultDamageType
class UDefaultDamageType : public UGameDamageType
{
public:

	static class UClass* StaticClass();
	static class UDefaultDamageType* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class LOTF2.MagicDamageType
class UMagicDamageType : public UGameDamageType
{
public:

	static class UClass* StaticClass();
	static class UMagicDamageType* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class LOTF2.PoisonDamageType
class UPoisonDamageType : public UGameDamageType
{
public:

	static class UClass* StaticClass();
	static class UPoisonDamageType* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class LOTF2.FireDamageType
class UFireDamageType : public UGameDamageType
{
public:

	static class UClass* StaticClass();
	static class UFireDamageType* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class LOTF2.ShoutDamage
class UShoutDamage : public UGameDamageType
{
public:

	static class UClass* StaticClass();
	static class UShoutDamage* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class LOTF2.BlockDamage
class UBlockDamage : public UGameDamageType
{
public:

	static class UClass* StaticClass();
	static class UBlockDamage* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class LOTF2.KnockBackDamage
class UKnockBackDamage : public UGameDamageType
{
public:

	static class UClass* StaticClass();
	static class UKnockBackDamage* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class LOTF2.BlockBreakDamage
class UBlockBreakDamage : public UGameDamageType
{
public:

	static class UClass* StaticClass();
	static class UBlockBreakDamage* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class LOTF2.DismembermentBleedDamage
class UDismembermentBleedDamage : public UGameDamageType
{
public:

	static class UClass* StaticClass();
	static class UDismembermentBleedDamage* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class LOTF2.FlinchDamage
class UFlinchDamage : public UGameDamageType
{
public:

	static class UClass* StaticClass();
	static class UFlinchDamage* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class LOTF2.LightDamage
class ULightDamage : public UGameDamageType
{
public:

	static class UClass* StaticClass();
	static class ULightDamage* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class LOTF2.MediumDamage
class UMediumDamage : public UGameDamageType
{
public:

	static class UClass* StaticClass();
	static class UMediumDamage* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class LOTF2.HeavyDamage
class UHeavyDamage : public UGameDamageType
{
public:

	static class UClass* StaticClass();
	static class UHeavyDamage* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class LOTF2.KnockDownDamage
class UKnockDownDamage : public UGameDamageType
{
public:

	static class UClass* StaticClass();
	static class UKnockDownDamage* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class LOTF2.ProjectIntoAirDamage
class UProjectIntoAirDamage : public UGameDamageType
{
public:

	static class UClass* StaticClass();
	static class UProjectIntoAirDamage* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class LOTF2.FirstDeathDamage
class UFirstDeathDamage : public UGameDamageType
{
public:

	static class UClass* StaticClass();
	static class UFirstDeathDamage* GetDefaultObj();

};

// 0x1B8 (0x1E0 - 0x28)
// Class LOTF2.UsedActors
class UUsedActors : public UObject
{
public:
	TSet<class AActor*>                          UsedActors;                                        // 0x28(0x50)(NativeAccessSpecifierPublic)
	TMap<TWeakObjectPtr<class AActor>, struct FTimerHandle> TemporalImmuneActors;                              // 0x78(0x50)(NativeAccessSpecifierPublic)
	uint32                                       RefCount;                                          // 0xC8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D39[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class AActor*, struct FActiveAreaEffectsList> EffectsAppliedToActorsInside;                      // 0xD0(0x50)(NativeAccessSpecifierPublic)
	TMap<class AActor*, int32>                   ActorInsideRefCount;                               // 0x120(0x50)(NativeAccessSpecifierPublic)
	TMap<class AActor*, struct FTimerHandle>     TimersToReApplyEffectsToActorsInside;              // 0x170(0x50)(NativeAccessSpecifierPublic)
	TArray<class UGameplayEffectsApplierComponent*> GameplayEffectsApplierComponents;                  // 0x1C0(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FGameplayTag                          GameplayTagToGroupDamages;                         // 0x1D0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USubAutonomousAbilityData*             SubAutonomousAbilityDataToGroupDamages;            // 0x1D8(0x8)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UUsedActors* GetDefaultObj();

};

// 0x518 (0x5C8 - 0xB0)
// Class LOTF2.GameplayEffectsApplierComponent
class UGameplayEffectsApplierComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnAreaTimedOutDelegate;                            // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnAreaOverlapValidActorDelegate;                   // 0xC0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnAreaOverlapEffectsAppliedDelegate;               // 0xD0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnAreaEndOverlapValidActorDelegate;                // 0xE0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnAreaHitCollisionDelegate;                        // 0xF0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnAreaDestroyedDelegate;                           // 0x100(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FGameplayEffectsWithParamsContainer   GameplayEffectsWhenInside;                         // 0x110(0x10)(Edit, NativeAccessSpecifierPublic)
	struct FHexBattleEffectIdentifierContainer   BattleEffectsWhenInside;                           // 0x120(0x10)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FGameplayEffectsWithParamsContainer   GameplayEffects;                                   // 0x130(0x10)(Edit, NativeAccessSpecifierPublic)
	struct FHexBattleEffectIdentifierContainer   BattleEffects;                                     // 0x140(0x10)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	float                                        TimeToReApplyDamagePerActor;                       // 0x150(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ImmuneTimePerActorAfterDamage;                     // 0x154(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOnlyOverlapOncePerActor;                          // 0x158(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOnlyOverlapOneActor;                              // 0x159(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDestroyOnApplication;                             // 0x15A(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDestroyOnValidOverlap;                            // 0x15B(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDestroyOnPhysicalCollision;                       // 0x15C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldIgnorePreviousAppliedActor;                 // 0x15D(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETargetToApply                    TargetToApply;                                     // 0x15E(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D45[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UUsedActors*                           SharedOverlapActors;                               // 0x160(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIgnoreGroupingDamage;                             // 0x168(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D47[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class AActor>                 PreviousActorToIgnoreDamage;                       // 0x16C(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D48[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class AActor*, struct FActiveAreaEffectsList> EffectsAppliedToActorsInside;                      // 0x178(0x50)(NativeAccessSpecifierPrivate)
	TMap<class AActor*, struct FTimerHandle>     TimersToReApplyEffectsToActorsInside;              // 0x1C8(0x50)(NativeAccessSpecifierPrivate)
	TSet<class AActor*>                          PotentialAlreadyOverlappedActors;                  // 0x218(0x50)(NativeAccessSpecifierPrivate)
	TMap<class AActor*, int32>                   ActorsInsideRefCount;                              // 0x268(0x50)(NativeAccessSpecifierPrivate)
	TSet<class AActor*>                          AlreadyOverlappedActors;                           // 0x2B8(0x50)(NativeAccessSpecifierPrivate)
	TMap<TWeakObjectPtr<class AActor>, int64>    FrameTimeAtWhichActorWasOverlapped;                // 0x308(0x50)(NativeAccessSpecifierPrivate)
	TSet<class AActor*>                          ActorsInsideArea;                                  // 0x358(0x50)(NativeAccessSpecifierPrivate)
	TMap<TWeakObjectPtr<class AActor>, struct FTimerHandle> TemporalImmuneActors;                              // 0x3A8(0x50)(NativeAccessSpecifierPrivate)
	uint8                                        Pad_2D49[0x98];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FHitResult                            CurrentHitResult;                                  // 0x490(0xE8)(IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FGameplayTagQuery                     QueryNeededToApplyDamage;                          // 0x578(0x48)(Edit, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2D4A[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGameplayEffectsApplierComponent* GetDefaultObj();

	void OverrideEffectAreaPrimitives(TArray<class UPrimitiveComponent*>& PrimitiveComponentsToDuplicate, class USceneComponent* OptionalParentForNewPrimitives);
	void OnComponentCollisionOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void OnAreaTimedOut();
	void OnAreaHitCollison(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, struct FHitResult& Hit);
	void OnAreaDestroyed(class AActor* Actor, enum class EEndPlayReason EndPlayReason);
	void NotifyActorEndOverlap(class AActor* OverlappedActor, class AActor* OtherActor);
	void NotifyActorBeginOverlap(class AActor* OverlappedActor, class AActor* OtherActor);
	bool IsValidOverlap(class AActor* OtherActor);
};

// 0x80 (0x350 - 0x2D0)
// Class LOTF2.GameplayEffectsAreaActor
class AGameplayEffectsAreaActor : public AAbilitySystemActor
{
public:
	struct FGameplayEffectsWithParamsContainer   GameplayEffectsWithParamsContainer;                // 0x2D0(0x10)(Edit, Protected, NativeAccessSpecifierProtected)
	bool                                         bOnlyOverlapOncePerActor;                          // 0x2E0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ETargetToApply                    TargetToApply;                                     // 0x2E1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2D4F[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class AActor*, struct FActiveEffectsList> EffectsAppliedToActors;                            // 0x2E8(0x50)(Transient, Protected, NativeAccessSpecifierProtected)
	bool                                         bOnlyTriggerWithTaggedComponents;                  // 0x338(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2D50[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  TriggerComponentTag;                               // 0x33C(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2D51[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UHexBaseNavModifierComponent*          NavModifierComponent;                              // 0x348(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AGameplayEffectsAreaActor* GetDefaultObj();

	void OnTriggerAreaEndOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnTriggerAreaBeginOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
};

// 0x10 (0x2C0 - 0x2B0)
// Class LOTF2.GameplayEffectsAreaComponent
class UGameplayEffectsAreaComponent : public USceneComponent
{
public:
	struct FGameplayEffectsWithParamsContainer   GameplayEffectsWithParamsContainer;                // 0x2B0(0x10)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGameplayEffectsAreaComponent* GetDefaultObj();

	void OnComponentEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnComponentBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
};

// 0x18 (0x40 - 0x28)
// Class LOTF2.GameplayEffectUIData_BuffIcon
class UGameplayEffectUIData_BuffIcon : public UGameplayEffectUIData
{
public:
	TArray<TSoftObjectPtr<class UTexture2D>>     StatusEffectIcon;                                  // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	bool                                         bIsPermanent;                                      // 0x38(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D56[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGameplayEffectUIData_BuffIcon* GetDefaultObj();

};

// 0x20 (0x48 - 0x28)
// Class LOTF2.GameplayEffectUIData_IconAndText
class UGameplayEffectUIData_IconAndText : public UGameplayEffectUIData
{
public:
	class FText                                  Description;                                       // 0x28(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UTexture2D*                            IconTexture;                                       // 0x40(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGameplayEffectUIData_IconAndText* GetDefaultObj();

};

// 0xA0 (0xE0 - 0x40)
// Class LOTF2.GameplayEffectUIData_StatusEffect
class UGameplayEffectUIData_StatusEffect : public UGameplayEffectUIData_BuffIcon
{
public:
	struct FLinearColor                          BuildUpColor;                                      // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          FullColor;                                         // 0x50(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          UITag;                                             // 0x60(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayAttribute                    StatusEffectAttribute;                             // 0x68(0x38)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayAttribute                    MaxStatusEffectAttribute;                          // 0xA0(0x38)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseInverseFillLogic;                              // 0xD8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D58[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGameplayEffectUIData_StatusEffect* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class LOTF2.GameplayEffectsWithParamsContainerBlueprintFunctionLibrary
class UGameplayEffectsWithParamsContainerBlueprintFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UGameplayEffectsWithParamsContainerBlueprintFunctionLibrary* GetDefaultObj();

	bool RemoveActiveGameplayEffectContainerBySourceEffectFromActor(struct FGameplayEffectsWithParamsContainer& GameplayEffectsWithParamsContainerRef, class AActor* InstigatorActor, class AActor* TargetActor, int32 StacksToRemove);
	bool RemoveActiveGameplayEffectContainerBySourceEffect(struct FGameplayEffectsWithParamsContainer& GameplayEffectsWithParamsContainerRef, class UAbilitySystemComponent* InstigatorAbilitySystemComponent, class UAbilitySystemComponent* TargetAbilitySystemComponent, int32 StacksToRemove);
	TArray<struct FActiveGameplayEffectHandle> ApplyGameplayEffectsContainerToTargetActor(struct FGameplayEffectsWithParamsContainer& GameplayEffectsWithParamsContainerRef, class AActor* ApplierActor, class AActor* TargetActor, const struct FGameplayEffectContextHandle& EffectContext);
	TArray<struct FActiveGameplayEffectHandle> ApplyGameplayEffectsContainerToTarget(struct FGameplayEffectsWithParamsContainer& GameplayEffectsWithParamsContainerRef, class UAbilitySystemComponent* ApplierAbilitySystemComponent, class UAbilitySystemComponent* TargetAbilitySystemComponent, const struct FGameplayEffectContextHandle& EffectContext);
	TArray<struct FActiveGameplayEffectHandle> ApplyGameplayEffectsContainerToSelfActor(struct FGameplayEffectsWithParamsContainer& GameplayEffectsWithParamsContainerRef, class AActor* ApplierActor, const struct FGameplayEffectContextHandle& EffectContext);
	TArray<struct FActiveGameplayEffectHandle> ApplyGameplayEffectsContainerToSelf(struct FGameplayEffectsWithParamsContainer& GameplayEffectsWithParamsContainerRef, class UAbilitySystemComponent* ApplierAbilitySystemComponent, const struct FGameplayEffectContextHandle& EffectContext);
};

// 0x18 (0x60 - 0x48)
// Class LOTF2.GameplayTagConsideration
class UGameplayTagConsideration : public UAIConsideration
{
public:
	struct FGameplayTag                          TagToCheck;                                        // 0x48(0x8)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EeAIActionTargetType              CharacterToCheckTagFrom;                           // 0x50(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCheckIfTagNotPresent;                             // 0x51(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCheckCountGreaterThan;                            // 0x52(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D69[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CountNeededToPass;                                 // 0x54(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Scoring;                                           // 0x58(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D6A[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGameplayTagConsideration* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class LOTF2.ItemActivationPrecondition
class UItemActivationPrecondition : public UObject
{
public:

	static class UClass* StaticClass();
	static class UItemActivationPrecondition* GetDefaultObj();

	bool CanBeUsedBy_BP(class APlayerCharacter* PlayerCharacter);
};

// 0x50 (0x78 - 0x28)
// Class LOTF2.GameplayTagsPrecondition
class UGameplayTagsPrecondition : public UItemActivationPrecondition
{
public:
	struct FAnathemaQuery                        Query;                                             // 0x28(0x50)(Edit, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGameplayTagsPrecondition* GetDefaultObj();

};

// 0x20 (0x88 - 0x68)
// Class LOTF2.GameplayTask_HexWaitCurrentMontageFullWeighted
class UGameplayTask_HexWaitCurrentMontageFullWeighted : public UGameplayTask
{
public:
	FMulticastInlineDelegateProperty_            CurrentMontageFullWeightedDone;                    // 0x68(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_            TaskFailed;                                        // 0x78(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGameplayTask_HexWaitCurrentMontageFullWeighted* GetDefaultObj();

	class UGameplayTask_HexWaitCurrentMontageFullWeighted* WaitCurrentMontageFullWeighted(class AActor* TargetActor);
};

// 0x28 (0x90 - 0x68)
// Class LOTF2.GameplayTask_HexWaitGameplayTags
class UGameplayTask_HexWaitGameplayTags : public UGameplayTask
{
public:
	uint8                                        Pad_2D70[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGameplayTask_HexWaitGameplayTags* GetDefaultObj();

	void GameplayTagCallback(const struct FGameplayTag& Tag, int32 NewCount);
};

// 0x10 (0xA0 - 0x90)
// Class LOTF2.GameplayTask_HexWaitGameplayTagsAdded
class UGameplayTask_HexWaitGameplayTagsAdded : public UGameplayTask_HexWaitGameplayTags
{
public:
	FMulticastInlineDelegateProperty_            Added;                                             // 0x90(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGameplayTask_HexWaitGameplayTagsAdded* GetDefaultObj();

	class UGameplayTask_HexWaitGameplayTagsAdded* WaitGameplayTagsAdd(class AActor* TargetActor, const struct FGameplayTagContainer& Tags, bool bOnlyTriggerOnce);
};

// 0x18 (0xA8 - 0x90)
// Class LOTF2.GameplayTask_HexWaitGameplayTagsRemoved
class UGameplayTask_HexWaitGameplayTagsRemoved : public UGameplayTask_HexWaitGameplayTags
{
public:
	FMulticastInlineDelegateProperty_            Removed;                                           // 0x90(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2D73[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGameplayTask_HexWaitGameplayTagsRemoved* GetDefaultObj();

	class UGameplayTask_HexWaitGameplayTagsRemoved* WaitGameplayTagsRemove(class AActor* TargetActor, const struct FGameplayTagContainer& Tags, bool bOnlyTriggerOnce, bool bSendRemovedEventForNotPresentTagsOnActivated);
};

// 0x80 (0x570 - 0x4F0)
// Class LOTF2.GameSettingScreenBase
class UGameSettingScreenBase : public UInGameMenuPanel
{
public:
	class UGameSettingRegistry*                  Registry;                                          // 0x4F0(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2D7A[0x70];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGameSettingPanel*                     Settings_Panel;                                    // 0x568(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGameSettingScreenBase* GetDefaultObj();

	void OnSettingsDirtyStateChanged(bool bSettingsDirty);
	void NavigateToSettings(TArray<class FName>& SettingDevNames);
	void NavigateToSetting(class FName SettingDevName);
	bool HaveSettingsBeenChanged();
	class UGameSettingCollection* GetSettingCollection(class FName SettingDevName, bool* bHasAnySettings);
	void CancelChanges();
	bool AttemptToPopNavigation();
	void ApplyChanges();
};

// 0x0 (0x160 - 0x160)
// Class LOTF2.GameSettingSubCollection
class UGameSettingSubCollection : public UGameSettingCollection
{
public:

	static class UClass* StaticClass();
	static class UGameSettingSubCollection* GetDefaultObj();

};

// 0x60 (0x1B0 - 0x150)
// Class LOTF2.GameSettingValueKeyBinding
class UGameSettingValueKeyBinding : public UGameSettingValue
{
public:
	uint8                                        Pad_2D7E[0x60];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGameSettingValueKeyBinding* GetDefaultObj();

};

// 0x40 (0x190 - 0x150)
// Class LOTF2.GameSettingValueText
class UGameSettingValueText : public UGameSettingValue
{
public:
	uint8                                        Pad_2D80[0x40];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGameSettingValueText* GetDefaultObj();

};

// 0x10 (0x4E8 - 0x4D8)
// Class LOTF2.GamesListWidget
class UGamesListWidget : public UHexActivatableWidget
{
public:
	class UScrollBox*                            GamesList;                                         // 0x4D8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFocusableButtonWidget*                Button_GoBack;                                     // 0x4E0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGamesListWidget* GetDefaultObj();

	void UpdateResults(TArray<class FString>& NewResults);
	void OnBackButtonPressed();
};

// 0x8 (0x3C0 - 0x3B8)
// Class LOTF2.GA_AIBlock
class UGA_AIBlock : public UGameplayAbility
{
public:
	uint8                                        Pad_2D83[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGA_AIBlock* GetDefaultObj();

};

// 0x98 (0x4E0 - 0x448)
// Class LOTF2.GA_BaseDualRealmTransition
class UGA_BaseDualRealmTransition : public UAnathemaGameplayAbility
{
public:
	struct FGameplayTag                          ResurrectAbilityTriggerTag;                        // 0x448(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          ForcedTranscendAbilityTriggerTag;                  // 0x450(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2D8A[0x78];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FHexBattleEffectIdentifier>    PostTransitionBattleEffects;                       // 0x4D0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGA_BaseDualRealmTransition* GetDefaultObj();

	void OverrideRespawnPoint(struct FTransform& NextRespawnTransform);
	void HandleSoulsLanternLight(bool bClearLastDroppedLanternLight, bool bDropSoulsLanternLight, class ABaseAICharacter* TargetAICharacterToAbsorbLanternLight);
	void HandleEffigyOfReincarnation(bool bClearLastEffigy, bool bDropEffigy, class ABaseAICharacter* TargetAICharacterToAbsorbEffigy);
	void DoTranscendTransition(enum class EGameRealm TargetRealm, bool bResetCurrentVigor, TSubclassOf<class UGameplayEffect> PostTransitionGameplayEffect, bool bEndAbilityOnFinish);
	void DoRespawnTransition(enum class EGameRealm TargetRealm, bool bWorldReset, bool bRespawnAtAnchor, bool bResetCurrentVigor, TSubclassOf<class UGameplayEffect> PostTransitionGameplayEffect, bool bEndAbilityOnFinish, enum class EWorldResetReason WorldResetReason);
};

// 0x10 (0x4F0 - 0x4E0)
// Class LOTF2.GA_AnchorFastTravelTransition
class UGA_AnchorFastTravelTransition : public UGA_BaseDualRealmTransition
{
public:
	bool                                         bDropSoulsLanternLight;                            // 0x4E0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2D8B[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGA_AnchorFastTravelTransition* GetDefaultObj();

};

// 0xC0 (0x508 - 0x448)
// Class LOTF2.GA_AnchorInteraction
class UGA_AnchorInteraction : public UAnathemaGameplayAbility
{
public:
	uint8                                        Pad_2D8D[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnchorMenuWidget*                     AnchorMenu;                                        // 0x450(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UHexActivatableWidget>   AnchorMenuClass;                                   // 0x458(0x30)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UNewAreaMessageWidget>     NewAnchorActivatedClass;                           // 0x488(0x8)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FAnimationSource                      MontageToPlayOnFirstActivationInteraction;         // 0x490(0x10)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FAnimationSource                      MontageToPlayOnStartInteraction;                   // 0x4A0(0x10)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FAnimationSource                      MontageToPlayOnEndInteraction;                     // 0x4B0(0x10)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class FName                                  TriggerAnchorInteraction;                          // 0x4C0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  TriggerFirstTimeAnchorActivationVFX;               // 0x4C8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  TriggerAnchorActivation;                           // 0x4D0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ADualRealmAnchorActor*                 InteractionAnchor;                                 // 0x4D8(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2D8E[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGA_AnchorInteraction* GetDefaultObj();

	void TriggerEndAbility();
	void OnTriggerFirstTimeAnchorActivationVFX_BP();
	void OnTriggerAnchorActivation_BP();
	void OnTagAdded(const struct FGameplayTag& Tag, int32 NewCount);
	void OnExit();
	void OnEndingMontageDone(enum class EOnMontageDoneReason DoneReason);
	void OnAnchorMenuActivated();
	void HandleOnInteractionOverlapChanged(bool bOverlapping, class AActor* OverlappingActor);
	void HandleAnchorInteractAnimationNotify(class FName NotifyName, struct FBranchingPointNotifyPayload& BranchingPointPayload);
	class ADualRealmAnchorActor* GetInteractionAnchor();
	void EndMontageNetEvent();
	void DoInteraction();
};

// 0x0 (0x4E0 - 0x4E0)
// Class LOTF2.GA_AnchorResurrectTransition
class UGA_AnchorResurrectTransition : public UGA_BaseDualRealmTransition
{
public:

	static class UClass* StaticClass();
	static class UGA_AnchorResurrectTransition* GetDefaultObj();

};

// 0x10 (0x4F0 - 0x4E0)
// Class LOTF2.GA_AnchorTranscendTransition
class UGA_AnchorTranscendTransition : public UGA_BaseDualRealmTransition
{
public:
	bool                                         bResetWorldAndRespawn;                             // 0x4E0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bDropSoulsLanternLight;                            // 0x4E1(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2D8F[0xE];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGA_AnchorTranscendTransition* GetDefaultObj();

};

// 0xB0 (0x4F8 - 0x448)
// Class LOTF2.GA_AttackAbility
class UGA_AttackAbility : public UAnathemaGameplayAbility
{
public:
	class UDataTable*                            ComboAttacksDescriptionTable;                      // 0x448(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        AttackVerticalAngleAjudstmentMaxDeviation;         // 0x450(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        ThresholdVerticalAngleToStartCorrection;           // 0x454(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        AngleFacingOffset;                                 // 0x458(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2D90[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 TagsThatCanInterruptMe;                            // 0x460(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	float                                        TimeSinceActivationWhileICanBeInterrupted;         // 0x480(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2D91[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAttackDescriptionRow                 CurrentAttackDescription;                          // 0x488(0x40)(Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2D92[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGA_AttackAbility* GetDefaultObj();

	void StartPlayMontageTask(struct FComboAnimData& AnimData);
	void OnTagsThatCanInterruptMeDelayCompleted();
	void OnLightInputPressed(const struct FGameplayEventData& EventPayload);
	void OnHeavyReleaseWindowTagRemoved();
	void OnHeavyReleaseWindowTagAdded();
	void OnHeavyInputReleased(const struct FGameplayEventData& EventPayload);
	void OnHeavyInputPressed(const struct FGameplayEventData& EventPayload);
	void OnComboTargetDataReceived(struct FGameplayAbilityTargetDataHandle& TargetData);
	void OnComboAttackEvent(const struct FGameplayEventData& EventPayload);
	void OnAttackMontageCompleted(enum class EOnMontageDoneReason DoneReason);
	void EarlyEndHeavyAttack();
};

// 0x118 (0x560 - 0x448)
// Class LOTF2.GA_BaseRespawn
class UGA_BaseRespawn : public UAnathemaGameplayAbility
{
public:
	enum class EGameRealm                        NewRealm;                                          // 0x448(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2D93[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAkAnathemaEvent                      AxiomToUmbraSoundEvent;                            // 0x450(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FAkAnathemaEvent                      UmbralToAxiomSoundEvent;                           // 0x4A0(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FAkAnathemaEvent                      IniStateSoundEvent;                                // 0x4F0(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	float                                        DelayTimeBeforeRunCameraFades;                     // 0x540(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        TimeAfterCameraFadeBeforeFinishAbility;            // 0x544(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        CameraFadeDuration;                                // 0x548(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                          FadeColor;                                         // 0x54C(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2D94[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGA_BaseRespawn* GetDefaultObj();

	void SetRealmLook(enum class EGameRealm NewRealm);
	void RunCameraFade(enum class EGameRealm NewRealm);
	void OnDelayBeforeCameraFade();
	void OnDelayBeforeAbilityEnd();
};

// 0x8 (0x450 - 0x448)
// Class LOTF2.GA_BaseTranscend
class UGA_BaseTranscend : public UAnathemaGameplayAbility
{
public:
	enum class EGameRealm                        OriginalRealm;                                     // 0x448(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EGameRealm                        RealmToGo;                                         // 0x449(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2D95[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGA_BaseTranscend* GetDefaultObj();

	void TriggerTranscendCue(enum class EActivateRealmReason Reason);
	void OnTranscendCueEnd();
};

// 0xD0 (0x518 - 0x448)
// Class LOTF2.GA_BlockAbility
class UGA_BlockAbility : public UAnathemaGameplayAbility
{
public:
	uint8                                        Pad_2D96[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSubclassOf<class UGameplayEffect>>   GameplayEffectsWhileActive;                        // 0x458(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                        Pad_2D97[0xB0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGA_BlockAbility* GetDefaultObj();

	void OnStaminaDepleted(const struct FGameplayEventData& Payload);
	void OnBlockInputReleased(const struct FGameplayEventData& Payload);
	void OnAttackBlocked(const struct FGameplayEventData& Payload);
};

// 0x88 (0x4D0 - 0x448)
// Class LOTF2.GA_CastMagic
class UGA_CastMagic : public UAnathemaGameplayAbility
{
public:
	uint8                                        Pad_2DA3[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ALOTF2Character*                       CachedOwningPlayerCharacter;                       // 0x450(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2DA4[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UGameplayEffect>           MeleeCastingGameplayEffect;                        // 0x470(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMagicItemData*                        CurrentMagicData;                                  // 0x478(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UEquipableInventoryMagic*              CurrentEquipableInventoryMagic;                    // 0x480(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2DA5[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        SpawnedAutonomousAbilitiesActors;                  // 0x4A0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2DA6[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGA_CastMagic* GetDefaultObj();

	void StartComboNetEvent();
	void StaminaOrManaAttributeChanged(bool bMatchedComparisonLastAttributeChange, float CurrentValue);
	void OnStartComboEvent(const struct FGameplayEventData& Payload);
	void OnSingleCastEvent(const struct FGameplayEventData& Payload);
	void OnMagicComboReceived(struct FGameplayAbilityTargetDataHandle& TargetDataHandle);
	void OnEndCastingEvent(const struct FGameplayEventData& Payload);
	void OnContinuousCastStopEvent(const struct FGameplayEventData& Payload);
	void OnContinuousCastStartEvent(const struct FGameplayEventData& Payload);
	void OnCastCueEvent(const struct FGameplayEventData& Payload);
	void HandleStartLoopMontageDone(enum class EOnMontageDoneReason DoneReason);
	void HandleOnCurrentMontageDone(enum class EOnMontageDoneReason DoneReason);
	void EndCastingNetEvent();
};

// 0x8 (0x450 - 0x448)
// Class LOTF2.GA_ChangeEquipment
class UGA_ChangeEquipment : public UAnathemaGameplayAbility
{
public:
	uint8                                        Pad_2DA8[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGA_ChangeEquipment* GetDefaultObj();

	void HandleOnRightEquipAnimationTypeChanged(const struct FHandAnimInfo& OldEquipAnimation, const struct FHandAnimInfo& NewEquipAnimation);
	void HandleOnLeftEquipAnimationTypeChanged(const struct FHandAnimInfo& OldEquipAnimation, const struct FHandAnimInfo& NewEquipAnimation);
};

// 0x0 (0x448 - 0x448)
// Class LOTF2.GA_ChangeRangedOption
class UGA_ChangeRangedOption : public UAnathemaGameplayAbility
{
public:

	static class UClass* StaticClass();
	static class UGA_ChangeRangedOption* GetDefaultObj();

};

// 0x60 (0x4A8 - 0x448)
// Class LOTF2.GA_ClimbLadder
class UGA_ClimbLadder : public UAnathemaGameplayAbility
{
public:
	class UInputAction*                          MovementAction;                                    // 0x448(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AInteractableLadder*                   InteractableLadder;                                // 0x450(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInteractionContext*                   InteractionContext;                                // 0x458(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bExitingFromTop;                                   // 0x460(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ELadderDirection                  CurrentDesiredLadderDirection;                     // 0x461(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCurrentDesiredSprinting;                          // 0x462(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2DB0[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CurrentDesiredRung;                                // 0x464(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAbilityTask_WaitInputAction*          WaitInputActionTask;                               // 0x468(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UAbilityTask_WaitGameplayEvent*> WaitSprintGameplayEventTasks;                      // 0x470(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class UHexAbilityTask_WaitSimpleTargetData*  WaitLadderMovementTargetDataTask;                  // 0x480(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAbilityTask_ApplyRootMotionMoveToForce* ApplyRootMotionMoveToForceTask;                    // 0x488(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2DB1[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UActionsContext>           AbilityInputContext;                               // 0x498(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHexPoiseReactionMapper*               LadderPoiseReactionMapping;                        // 0x4A0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGA_ClimbLadder* GetDefaultObj();

	void TriggerGetOffLadderSequence_BP();
	void TriggerClimbOntoLadderSequence_BP();
	void OnRootMotionFinished();
	void OnMovementInput(struct FInputActionInstance& InputActionInstance);
	void OnLadderMovementTargetDataReceived(struct FGameplayAbilityTargetDataHandle& TargetData);
	void OnInteractableLadderEndPlay(class AActor* Actor, enum class EEndPlayReason EndPlayReason);
	void OnGetOffLadderSequenceEnded();
	void OnGameplayEventInputReceived(const struct FGameplayEventData& Payload);
	void OnClimbOntoLadderSequenceEnded();
	float GetRungFromCapsulePosition_BP();
	struct FVector GetCapsulePositionForRung_BP(int32 RungIndex);
};

// 0x0 (0x3B8 - 0x3B8)
// Class LOTF2.GA_CombatStateManger
class UGA_CombatStateManger : public UGameplayAbility
{
public:

	static class UClass* StaticClass();
	static class UGA_CombatStateManger* GetDefaultObj();

	void OnDamaged(const struct FGameplayEventData& Payload);
};

// 0x90 (0x570 - 0x4E0)
// Class LOTF2.GA_DeathTransition
class UGA_DeathTransition : public UGA_BaseDualRealmTransition
{
public:
	float                                        SpectatorModeTransitionDelay;                      // 0x4E0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EGameRealm                        TrueDeathRespawnRealm;                             // 0x4E4(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2DB2[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAkAnathemaEvent                      TrueDeathSoundEvent;                               // 0x4E8(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	float                                        TrueDeathDeathTransitionDelay;                     // 0x538(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2DB3[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UGameplayEffect>           GEToUseAfterTrueDeath;                             // 0x540(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          UIResurrectedEventTag;                             // 0x548(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bTrueDeathDropLanternLightWithVigor;               // 0x550(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2DB4[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AResurrectionShrineActor>  ResurrectionShrineClass;                           // 0x558(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2DB5[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class APlayerController*                     PlayerController;                                  // 0x568(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGA_DeathTransition* GetDefaultObj();

	void OnUISignalToStartResurrect(const struct FGameplayEventData& Payload);
	void OnTrueDeathDelayDone();
	void OnGoToSpectatorModeDelayDone();
	void OnDeathEvent(const struct FGameplayEventData& Payload);
	bool CanAIAbsorbPlayerVigor();
};

// 0x70 (0x550 - 0x4E0)
// Class LOTF2.GA_DeathWishTransition
class UGA_DeathWishTransition : public UGA_BaseDualRealmTransition
{
public:
	bool                                         bDropSoulsLanternLight;                            // 0x4E0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bDropEffigyOfReincarnation;                        // 0x4E1(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2DB6[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          DeathWishCanceledTag;                              // 0x4E4(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FAnimationSource                      MontageToPlayWhenActivated;                        // 0x4EC(0x10)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	struct FAnimationSource                      MontageToPlayWhenCanceled;                         // 0x4FC(0x10)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2DB7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 AbilitiesToCancelWhenRunningTransition;            // 0x510(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TSubclassOf<class UGameplayEffect>           GEToApplyAfterTransition;                          // 0x530(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2DB8[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  TeleportToValidUmbralLocationNotify;               // 0x548(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGA_DeathWishTransition* GetDefaultObj();

	void RunTransitionFlow();
	void OnTranscendInterrupted();
	void OnTranscendBegin();
	void OnMontageCompleted();
	void OnDeathWishCanceled(const struct FGameplayEventData& Payload);
	void HandleAnimationNotify(class FName NotifyName, struct FBranchingPointNotifyPayload& BranchingPointPayload);
};

// 0x20 (0x468 - 0x448)
// Class LOTF2.GA_InteractWithInventoryItem
class UGA_InteractWithInventoryItem : public UAnathemaGameplayAbility
{
public:
	uint8                                        Pad_2DB9[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UInventoryItem*                        InventoryItem;                                     // 0x450(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2DBA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class APlayerCharacter>       PlayerCharacter;                                   // 0x45C(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2DBB[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGA_InteractWithInventoryItem* GetDefaultObj();

};

// 0x0 (0x468 - 0x468)
// Class LOTF2.GA_DiscardInventoryItem
class UGA_DiscardInventoryItem : public UGA_InteractWithInventoryItem
{
public:

	static class UClass* StaticClass();
	static class UGA_DiscardInventoryItem* GetDefaultObj();

};

// 0xB0 (0x4F8 - 0x448)
// Class LOTF2.GA_DodgeAbility
class UGA_DodgeAbility : public UAnathemaGameplayAbility
{
public:
	TMap<enum class EHexEquipmentLoadTier, struct FDirectionalAnimationData> DodgeAnimationByEquipmentLoadTier;                 // 0x448(0x50)(Edit, Protected, NativeAccessSpecifierProtected)
	TMap<enum class EHexEquipmentLoadTier, struct FDodgeRollAnimationData> DodgeRollAnimationByEquipmentLoadTier;             // 0x498(0x50)(Edit, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2DBE[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGA_DodgeAbility* GetDefaultObj();

	void OnMontageCompleted(enum class EOnMontageDoneReason DoneReason);
	void OnDodgeRollTargetDataReceived(struct FGameplayAbilityTargetDataHandle& TargetData);
	void OnDodgeRollInputEvent(const struct FGameplayEventData& EventPayload);
};

// 0xF0 (0x538 - 0x448)
// Class LOTF2.GA_Dying
class UGA_Dying : public UAnathemaGameplayAbility
{
public:
	class UAbilityTask_WaitGameplayTagRemoved*   WaitDelayDeathTagRemovedTask;                      // 0x448(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                Instigator;                                        // 0x450(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2DC7[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          DeathMontageBeingPlayed;                           // 0x468(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2DC8[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          DefaultDeathAnimationTag;                          // 0x47C(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2DC9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<struct FGameplayTag, struct FGameplayTag> DeathReasonToAnimationTagMap;                      // 0x488(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TMap<struct FGameplayTag, struct FGameplayTag> DelayDeathToAnimationTagMap;                       // 0x4D8(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class UHexDamageExecutionResult*             ExecutionResult;                                   // 0x528(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bCanAttachToMovingSurfaces;                        // 0x530(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2DCA[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGA_Dying* GetDefaultObj();

	void StartRagdollState();
	void SendDeathGameplayEvent();
	void RemoveCollisionsWithPawn();
	void OnRagdollStateChanged(enum class ERagdollState State);
	void OnMontageNotifyBegin(class FName NotifyName);
	void OnMontageDone(enum class EOnMontageDoneReason DoneReason);
	void OnFellIntoTheVoid();
	void OnEventTriggerDeath(const struct FGameplayEventData& Payload);
	void OnDelayDeathTagRemoved();
	void OnDeathMontageStartsPlaying();
	void HandleOnNotifyBegin(class FName NotifyName, struct FBranchingPointNotifyPayload& BranchingPointPayload);
	struct FGameplayTag GetDelayDeathAnimationTagFromCombatDelayDeathTag(struct FGameplayTag& DelayDeathTag);
	struct FGameplayTag GetDeathReasonAnimationTagFromCombatDeathReasonTag(struct FGameplayTag& DeathReasonTag);
	void DyingWithoutAnimMontage();
};

// 0x10 (0x458 - 0x448)
// Class LOTF2.GA_Falling
class UGA_Falling : public UAnathemaGameplayAbility
{
public:
	class UAbilityTask_Tick*                     TickTask;                                          // 0x448(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RotationRateWhileFalling;                          // 0x450(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2DCB[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGA_Falling* GetDefaultObj();

	void OnTick(float DeltaTime);
};

// 0xB0 (0x590 - 0x4E0)
// Class LOTF2.GA_FirstDeathUmbralRevive
class UGA_FirstDeathUmbralRevive : public UGA_BaseDualRealmTransition
{
public:
	struct FAnimationSource                      ReviveMontage;                                     // 0x4E0(0x10)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	TSubclassOf<class UGameplayEffect>           TotalImmunityGameplayEffect;                       // 0x4F0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UGameplayEffect>           ReviveGameplayEffect;                              // 0x4F8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  ReviveNotify;                                      // 0x500(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        MinDistanceToTeleport;                             // 0x508(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        DesiredFlySpeed;                                   // 0x50C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCurveFloat*                           Curve_FlyUpwardsXY;                                // 0x510(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCurveFloat*                           Curve_FlyUpwardsZ;                                 // 0x518(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCurveFloat*                           Curve_FlyUpDownZ;                                  // 0x520(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        TravelingHeight;                                   // 0x528(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2DCC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 DeathReasonsThatPreventRevivingInPlace;            // 0x530(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2DCD[0x40];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGA_FirstDeathUmbralRevive* GetDefaultObj();

	void TriggerTravelingSequence();
	void TriggerTeleportSequence();
	void TriggerRevive();
	void OnTravelProgressChanged(float Progress);
	void OnTravelPositionUpdated(struct FVector& TravelPosition);
	void OnTravelFinished();
	void OnTeleportFinished();
	void OnMontageDone(enum class EOnMontageDoneReason DoneReason);
	void HandleOnRealmChanged(enum class EGameRealm OldRealm, enum class EGameRealm NewRealm);
	void HandleOnNotifyBegin(class FName NotifyName, struct FBranchingPointNotifyPayload& BranchingPointPayload);
	enum class EReviveRepositioningMethod ChooseRepositioningMethod();
};

// 0x8 (0x450 - 0x448)
// Class LOTF2.GA_ForcedTranscendRealm
class UGA_ForcedTranscendRealm : public UAnathemaGameplayAbility
{
public:
	struct FGameplayTag                          ForcedTranscendEventTag;                           // 0x448(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGA_ForcedTranscendRealm* GetDefaultObj();

};

// 0x0 (0x448 - 0x448)
// Class LOTF2.GA_SoulsLanternShiningSubAbility
class UGA_SoulsLanternShiningSubAbility : public UAnathemaGameplayAbility
{
public:

	static class UClass* StaticClass();
	static class UGA_SoulsLanternShiningSubAbility* GetDefaultObj();

};

// 0xC8 (0x510 - 0x448)
// Class LOTF2.GA_ForgeAnchorAbility
class UGA_ForgeAnchorAbility : public UGA_SoulsLanternShiningSubAbility
{
public:
	uint8                                        Pad_2DCE[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAnimationSource                      ForgeAnchorMontage;                                // 0x458(0x10)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	struct FGameplayEffectsWithParamsContainer   GameplayEffectsToApplyWhilePlayingMontage;         // 0x468(0x10)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TArray<struct FActiveGameplayEffectHandle>   GameplayEffectsHandlersAppliedWhilePlayingMontage; // 0x478(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          ForgeAnchorInputReleasedTag;                       // 0x488(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<TSoftClassPtr<class UItemData>, int32>  ItemCostMap;                                       // 0x490(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2DCF[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class ADualRealmAnchorActor>     ForgedAnchorClass;                                 // 0x4F8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ADualRealmAnchorActor*                 SpawnedAnchor;                                     // 0x500(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2DD0[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGA_ForgeAnchorAbility* GetDefaultObj();

	void OnItemCostClassLoaded();
	void OnForgeAnchorInputReleasedTag(const struct FGameplayEventData& Payload);
	void OnEndingRangedMode(const struct FGameplayEventData& Payload);
	bool IsAnchorPlacementValid();
	void HandleOnForgeMontageEnded(enum class EOnMontageDoneReason DoneReason);
	void HandleOnForgeAnimationNotify(class FName NotifyName, struct FBranchingPointNotifyPayload& BranchingPointPayload);
	void FinalizeAnchorPlacement();
};

// 0x0 (0x448 - 0x448)
// Class LOTF2.GA_ForwardAttack
class UGA_ForwardAttack : public UAnathemaGameplayAbility
{
public:

	static class UClass* StaticClass();
	static class UGA_ForwardAttack* GetDefaultObj();

	void OnMontageDone(enum class EOnMontageDoneReason DoneReason);
	struct FAnimationSource GetAnimationSourceFromGameplayEvent_BP(struct FGameplayTag& EventTag);
};

// 0x10 (0x458 - 0x448)
// Class LOTF2.GA_FullTranscendAbility
class UGA_FullTranscendAbility : public UAnathemaGameplayAbility
{
public:
	struct FGameplayTag                          AxiomToUmbralTag;                                  // 0x448(0x8)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          UmbralToAxiomTag;                                  // 0x450(0x8)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGA_FullTranscendAbility* GetDefaultObj();

};

// 0x10 (0x458 - 0x448)
// Class LOTF2.GA_GenericActivation
class UGA_GenericActivation : public UAnathemaGameplayAbility
{
public:
	struct FAnimationSource                      AnimationToPlay;                                   // 0x448(0x10)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGA_GenericActivation* GetDefaultObj();

	void OnMontageDone(enum class EOnMontageDoneReason DoneReason);
};

// 0x0 (0x448 - 0x448)
// Class LOTF2.GA_GenericActivationSynced
class UGA_GenericActivationSynced : public UAnathemaGameplayAbility
{
public:

	static class UClass* StaticClass();
	static class UGA_GenericActivationSynced* GetDefaultObj();

};

// 0x0 (0x448 - 0x448)
// Class LOTF2.GA_PlayMontageByTagFromPayload
class UGA_PlayMontageByTagFromPayload : public UAnathemaGameplayAbility
{
public:

	static class UClass* StaticClass();
	static class UGA_PlayMontageByTagFromPayload* GetDefaultObj();

	void HandleOnMontageDone(enum class EOnMontageDoneReason DoneReason);
};

// 0x0 (0x448 - 0x448)
// Class LOTF2.GA_Gesture
class UGA_Gesture : public UGA_PlayMontageByTagFromPayload
{
public:

	static class UClass* StaticClass();
	static class UGA_Gesture* GetDefaultObj();

};

// 0x30 (0x58 - 0x28)
// Class LOTF2.HexBaseAbilityPayloadData
class UHexBaseAbilityPayloadData : public UObject
{
public:
	uint8                                        Pad_2DD1[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexBaseAbilityPayloadData* GetDefaultObj();

	class UHexBaseAbilityPayloadData* CreateBaseAbilityMontagePayload(class UObject* WorldContext, class UAnimMontage* MontageToUse);
};

// 0x10 (0x68 - 0x58)
// Class LOTF2.HexAIMovementAbilityPayloadData
class UHexAIMovementAbilityPayloadData : public UHexBaseAbilityPayloadData
{
public:
	uint8                                        Pad_2DD2[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexAIMovementAbilityPayloadData* GetDefaultObj();

};

// 0x60 (0xC8 - 0x68)
// Class LOTF2.HexAIFlyingAbilityPayloadData
class UHexAIFlyingAbilityPayloadData : public UHexAIMovementAbilityPayloadData
{
public:
	uint8                                        Pad_2DD3[0x60];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexAIFlyingAbilityPayloadData* GetDefaultObj();

};

// 0x18 (0x480 - 0x468)
// Class LOTF2.GA_HexAIFlyingDirectionalAbility
class UGA_HexAIFlyingDirectionalAbility : public UAIPlayMontageAbility
{
public:
	class UHexAICharacterMovementComponent*      OwnerCharacterMovementComponent;                   // 0x468(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2DD4[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGA_HexAIFlyingDirectionalAbility* GetDefaultObj();

	void OnFlightFinished();
};

// 0x20 (0x88 - 0x68)
// Class LOTF2.HexMoveFacingTargetAbilityPayload
class UHexMoveFacingTargetAbilityPayload : public UHexAIMovementAbilityPayloadData
{
public:
	uint8                                        Pad_2DD5[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                TargetToLookAt;                                    // 0x70(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2DD6[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexMoveFacingTargetAbilityPayload* GetDefaultObj();

};

// 0x18 (0x460 - 0x448)
// Class LOTF2.HexAIMovementAbilityBase
class UHexAIMovementAbilityBase : public UAnathemaGameplayAbility
{
public:
	uint8                                        Pad_2DD7[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexAIMovementAbilityBase* GetDefaultObj();

};

// 0x10 (0x470 - 0x460)
// Class LOTF2.GA_HexAIMoveFacingTarget
class UGA_HexAIMoveFacingTarget : public UHexAIMovementAbilityBase
{
public:
	class UAbilityTask_HexAIMoveFacingTarget*    PMoveTask;                                         // 0x460(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2DD8[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGA_HexAIMoveFacingTarget* GetDefaultObj();

	void OnMoveFinished();
};

// 0x0 (0x460 - 0x460)
// Class LOTF2.GA_HexAIMovementMontage
class UGA_HexAIMovementMontage : public UHexAIMovementAbilityBase
{
public:

	static class UClass* StaticClass();
	static class UGA_HexAIMovementMontage* GetDefaultObj();

	void OnMontageCompleted(enum class EOnMontageDoneReason DoneReason);
};

// 0x20 (0x468 - 0x448)
// Class LOTF2.GA_HexAINavlink
class UGA_HexAINavlink : public UAnathemaGameplayAbility
{
public:
	float                                        CharacterOrientationTime;                          // 0x448(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  WarpTargetOrientationName;                         // 0x44C(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  WarpTargetPointName;                               // 0x454(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          JumpUpAnimationTag;                                // 0x45C(0x8)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2DD9[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGA_HexAINavlink* GetDefaultObj();

	void OnMontageDone(enum class EOnMontageDoneReason DoneReason);
};

// 0x0 (0x448 - 0x448)
// Class LOTF2.GA_Interact
class UGA_Interact : public UAnathemaGameplayAbility
{
public:

	static class UClass* StaticClass();
	static class UGA_Interact* GetDefaultObj();

};

// 0x50 (0x498 - 0x448)
// Class LOTF2.GA_InteractWithNPCAbility
class UGA_InteractWithNPCAbility : public UAnathemaGameplayAbility
{
public:
	TSoftClassPtr<class UNPCInteractionScreen>   NPCInteractionScreenClass;                         // 0x448(0x30)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ABaseNPCCharacter*                     NPCCharacter;                                      // 0x478(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UNPCInteractionScreen*                 NPCInteractionScreen;                              // 0x480(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2DDC[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGA_InteractWithNPCAbility* GetDefaultObj();

	void OnVendorScreenClosed();
	void OnNPCEndPlay(class AActor* Actor, enum class EEndPlayReason EndPlayReason);
	void HandleOnInteractionOverlapChanged(bool bOverlapping, class AActor* OverlappingActor);
	void HandleDialogueSequenceFinished(enum class EDialogueEndReason Reason);
};

// 0x28 (0x470 - 0x448)
// Class LOTF2.GA_ItemPickup
class UGA_ItemPickup : public UAnathemaGameplayAbility
{
public:
	float                                        PlayerPickupOffset;                                // 0x448(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        PlayerMoveToOffsetDuration;                        // 0x44C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FAnimationSource                      PickupAnimation;                                   // 0x450(0x10)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	class APickup*                               TargetPickup;                                      // 0x460(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  RunPickupLogic;                                    // 0x468(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGA_ItemPickup* GetDefaultObj();

	void OnPickupMontageDone(enum class EOnMontageDoneReason DoneReason);
	void HandlePickupAnimationNotify(class FName NotifyName, struct FBranchingPointNotifyPayload& BranchingPointPayload);
};

// 0x28 (0x470 - 0x448)
// Class LOTF2.GA_JumpAbility
class UGA_JumpAbility : public UAnathemaGameplayAbility
{
public:
	class UJumpForceComponent*                   SprintJumpForce;                                   // 0x448(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2DDD[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAnimationSource                      JumpAnimation;                                     // 0x454(0x10)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class FName                                  TakeOffPlayNotify;                                 // 0x464(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2DDE[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGA_JumpAbility* GetDefaultObj();

	void OnMontageNotifyBegin(class FName NotifyName, struct FBranchingPointNotifyPayload& Payload);
	void OnMontageIsCompleted(enum class EOnMontageDoneReason DoneReason);
};

// 0x28 (0x470 - 0x448)
// Class LOTF2.GA_Landing
class UGA_Landing : public UAnathemaGameplayAbility
{
public:
	TSubclassOf<class UGameplayEffect>           FallDamageGE;                                      // 0x448(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2DDF[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGA_Landing* GetDefaultObj();

	void OnLandingMontageCompleted(enum class EOnMontageDoneReason DoneReason);
};

// 0x108 (0x550 - 0x448)
// Class LOTF2.GA_LanternSyphoning_PlayerAbility
class UGA_LanternSyphoning_PlayerAbility : public UAnathemaGameplayAbility
{
public:
	class AActor*                                OwnerLanternColliderActor;                         // 0x448(0x8)(BlueprintVisible, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AActor*>                        SyphonableActorsInRange;                           // 0x450(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TSet<class AActor*>                          ActiveSyphoningActors;                             // 0x460(0x50)(BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected)
	bool                                         bIsSyphoning;                                      // 0x4B0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2DE6[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAnimationSource                      StartAndLoopSyphonAnimSource;                      // 0x4B4(0x10)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	struct FAnimationSource                      FinishSyphonAnimSource;                            // 0x4C4(0x10)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	float                                        SyphonLinkWarmUpSeconds;                           // 0x4D4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        SyphonLinkLostDelaySeconds;                        // 0x4D8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        SyphonTickIntervalSeconds;                         // 0x4DC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<struct FGameplayAttribute, float>       SyphoningRates;                                    // 0x4E0(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TArray<float>                                MultiTargetSyphoningSlotsMultiplier;               // 0x530(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2DE7[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USyphoningActivationData*              TargetActivationData;                              // 0x548(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGA_LanternSyphoning_PlayerAbility* GetDefaultObj();

	void OnUpdateActiveSyphoningTargets_BP();
	void OnTargetSyphoningEndReceived(const struct FGameplayEventData& Payload);
	void OnTargetExtractionTickReceived(const struct FGameplayEventData& Payload);
	void OnSyphonStopReceived(const struct FGameplayEventData& Payload);
	void OnSyphonInterruptedReceived(const struct FGameplayEventData& Payload);
	void OnLanternColliderEndOverlap(class AActor* OverlappedActor, class AActor* OtherActor);
	void OnLanternColliderBeginOverlap(class AActor* OverlappedActor, class AActor* OtherActor);
	void OnEndSyphoning_BP();
	void OnBeginSyphoning_BP();
	void HandleStartSyphoningAnimNotify(class FName NotifyName, struct FBranchingPointNotifyPayload& BranchingPointPayload);
	void HandleFinishSyphoningMontageDone(enum class EOnMontageDoneReason DoneReason);
	void HandleFinishSyphoningAnimNotify(class FName NotifyName, struct FBranchingPointNotifyPayload& BranchingPointPayload);
};

// 0x60 (0x88 - 0x28)
// Class LOTF2.SyphoningActivationData
class USyphoningActivationData : public UObject
{
public:
	float                                        SyphonLinkWarmUpSeconds;                           // 0x28(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SyphonLinkLostDelaySeconds;                        // 0x2C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SyphonTickIntervalSeconds;                         // 0x30(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DE8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<struct FGameplayAttribute, float>       SyphoningRates;                                    // 0x38(0x50)(NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USyphoningActivationData* GetDefaultObj();

};

// 0x40 (0x68 - 0x28)
// Class LOTF2.SyphoningExtractionTickData
class USyphoningExtractionTickData : public UObject
{
public:
	struct FGameplayAttribute                    SyphonAttribute;                                   // 0x28(0x38)(BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SyphonTickExtractedAmount;                         // 0x60(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DE9[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USyphoningExtractionTickData* GetDefaultObj();

};

// 0x110 (0x558 - 0x448)
// Class LOTF2.GA_LanternSyphoning_TargetAbility
class UGA_LanternSyphoning_TargetAbility : public UAnathemaGameplayAbility
{
public:
	enum class EDualRealmState                   RealmAllowedForSyphoning;                          // 0x448(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2DEB[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                SyphoningPlayerRef;                                // 0x450(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USyphoningActivationData*              ActivationData;                                    // 0x458(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<struct FGameplayAttribute, float>       SyphoningRateMultipliers;                          // 0x460(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2DEC[0x58];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UAbilityTask_Tick*                     TickTask;                                          // 0x508(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2DED[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USyphoningExtractionTickData*          ExtractionTickData;                                // 0x550(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGA_LanternSyphoning_TargetAbility* GetDefaultObj();

	void OnUpdateSyphonRateValuesReceived(const struct FGameplayEventData& Payload);
	void OnTick(float DeltaSeconds);
	void OnSyphoningTargetLostReceived(const struct FGameplayEventData& Payload);
	void OnSyphoningTargetAcquiredReceived(const struct FGameplayEventData& Payload);
	void OnSyphoningExtractionTick_BP(const struct FGameplayAttribute& ExtractedAttribute, float ExtractedAmount);
	void OnSyphoningDeactivationReceived(const struct FGameplayEventData& Payload);
	void OnEndSyphoning_BP();
	void OnBeginSyphoning_BP();
};

// 0x10 (0x478 - 0x468)
// Class LOTF2.GA_LeaveInventoryItem
class UGA_LeaveInventoryItem : public UGA_InteractWithInventoryItem
{
public:
	uint8                                        Pad_2DEE[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGA_LeaveInventoryItem* GetDefaultObj();

};

// 0x48 (0x490 - 0x448)
// Class LOTF2.GA_MarkedOne
class UGA_MarkedOne : public UAnathemaGameplayAbility
{
public:
	TSubclassOf<class UInventoryItem>            InventoryItemToAddToTargetInventory;               // 0x448(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UItemData>               ItemDataClassToAddToTargetInventory;               // 0x450(0x30)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2DEF[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGA_MarkedOne* GetDefaultObj();

	void OnItemDataClassToAddToTargetInventoryLoaded();
};

// 0x10 (0x458 - 0x448)
// Class LOTF2.GA_MojoDrop
class UGA_MojoDrop : public UAnathemaGameplayAbility
{
public:
	TSubclassOf<class UMojoDropInventoryItem>    MojoDropInventoryItemClass;                        // 0x448(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class APickup>                   MojoPickupClass;                                   // 0x450(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGA_MojoDrop* GetDefaultObj();

	void OnMojoDropSpawned_BP(class APickup* SpawnedPickup);
};

// 0x148 (0x590 - 0x448)
// Class LOTF2.GA_MovementAbility
class UGA_MovementAbility : public UAnathemaGameplayAbility
{
public:
	class UInputAction*                          MovementAction;                                    // 0x448(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InputSizeThresholdToRun;                           // 0x450(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2DF1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class ELocomotionState, struct FGameplayTag> LocomotionStateAISounds;                           // 0x458(0x50)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UAbilityTask_WaitInputAction*          WaitInputActionTask;                               // 0x4A8(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAbilityTask_WaitInputAction*          WaitInputActionEndedTask;                          // 0x4B0(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        InputDelayForward;                                 // 0x4B8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        InputDelayBackward;                                // 0x4BC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class ETweenType                        TweenCurve;                                        // 0x4C0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2DF5[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        NoMovementInputGracePeriod;                        // 0x4C4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2DF6[0xC8];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGA_MovementAbility* GetDefaultObj();

	void OnWaitWhileNoInputFinished();
	void OnTick(float DeltaSeconds);
	void OnMovementInput(struct FInputActionInstance& InputActionInstance);
	void OnMovementEnded(struct FInputActionInstance& InputActionInstance);
};

// 0x8 (0x450 - 0x448)
// Class LOTF2.GA_MovesetSwitcher
class UGA_MovesetSwitcher : public UAnathemaGameplayAbility
{
public:
	uint8                                        Pad_2DFA[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGA_MovesetSwitcher* GetDefaultObj();

	void OnAnimationMovesetTagChanged(const struct FGameplayTag& Tag, int32 NewCount);
};

// 0x98 (0x4E0 - 0x448)
// Class LOTF2.GA_PauseWitherGain
class UGA_PauseWitherGain : public UAnathemaGameplayAbility
{
public:
	TMap<struct FGameplayTag, float>             PerEventPauseDuration;                             // 0x448(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                        Pad_2DFB[0x48];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGA_PauseWitherGain* GetDefaultObj();

	void OnTimerTimeout();
};

// 0x8 (0x450 - 0x448)
// Class LOTF2.GA_PlayAnimation
class UGA_PlayAnimation : public UAnathemaGameplayAbility
{
public:
	struct FGameplayTag                          AnimationMontageTag;                               // 0x448(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGA_PlayAnimation* GetDefaultObj();

	void OverrideAnimationMontageTag(const struct FGameplayTag& NewAnimationTag);
	void OnMontageCompleted(enum class EOnMontageDoneReason Reason);
};

// 0x0 (0x3B8 - 0x3B8)
// Class LOTF2.GA_PlayCurrentActionMontage
class UGA_PlayCurrentActionMontage : public UGameplayAbility
{
public:

	static class UClass* StaticClass();
	static class UGA_PlayCurrentActionMontage* GetDefaultObj();

	void OnMontageInterrupted();
	void OnMontageCompleted();
	void OnMontageCancelled();
	void OnMontageBlendOut();
};

// 0x8 (0x450 - 0x448)
// Class LOTF2.GA_PlayMontageByTag
class UGA_PlayMontageByTag : public UAnathemaGameplayAbility
{
public:
	struct FGameplayTag                          AnimationTag;                                      // 0x448(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGA_PlayMontageByTag* GetDefaultObj();

	void HandleOnMontageDone(enum class EOnMontageDoneReason DoneReason);
	struct FGameplayTag GetAnimationTag();
};

// 0x68 (0x4B0 - 0x448)
// Class LOTF2.GA_PlayUIInteractionMontage
class UGA_PlayUIInteractionMontage : public UAnathemaGameplayAbility
{
public:
	uint8                                        Pad_2DFF[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FUIInteractionAnimationData           UIInteractionAnimationData;                        // 0x450(0x48)(NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2E00[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGA_PlayUIInteractionMontage* GetDefaultObj();

	void OnWidgetDeactivate();
	void OnWidgetBackAction(bool byConfirm);
	void OnWidgetActivate();
	void OnStartMontageDone(enum class EOnMontageDoneReason DoneReason);
	void OnShowWidgetGameplayEvent(const struct FGameplayEventData& Payload);
	void OnEndMontageDone(enum class EOnMontageDoneReason DoneReason);
	void EndMontageWithoutConfirmNetEvent();
	void EndMontageWithConfirmNetEvent();
};

// 0x0 (0x448 - 0x448)
// Class LOTF2.GA_PlungeAttack
class UGA_PlungeAttack : public UAnathemaGameplayAbility
{
public:

	static class UClass* StaticClass();
	static class UGA_PlungeAttack* GetDefaultObj();

};

// 0x70 (0x4B8 - 0x448)
// Class LOTF2.GA_RangedMode
class UGA_RangedMode : public UAnathemaGameplayAbility
{
public:
	class UActionsContext*                       PushedActionsContext;                              // 0x448(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class APlayerCharacter*                      CachedOwningPlayerCharacter;                       // 0x450(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTagQuery                     InteractionsFilter;                                // 0x458(0x48)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class UActionsContext>           LanternAbilityInputContext;                        // 0x4A0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2E05[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        EquipAnimationsPlayRateWhenEquippingLantern;       // 0x4B0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2E06[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGA_RangedMode* GetDefaultObj();

	void RangedInputReleasedNetwork();
	void RangedInputReleased(const struct FGameplayEventData& Payload);
	void ForceUnequip();
	void ChangeSelectedRangedOption();
};

// 0x0 (0x28 - 0x28)
// Class LOTF2.RangedAimActionPayloadFactory
class URangedAimActionPayloadFactory : public UInputActionPayloadFactory
{
public:

	static class UClass* StaticClass();
	static class URangedAimActionPayloadFactory* GetDefaultObj();

};

// 0x160 (0x5A8 - 0x448)
// Class LOTF2.GA_RangedShot
class UGA_RangedShot : public UAnathemaGameplayAbility
{
public:
	uint8                                        Pad_2E07[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ALOTF2Character*                       CachedOwningPlayerCharacter;                       // 0x460(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2E08[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAmmoData*                             CurrentAmmoData;                                   // 0x470(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2E09[0x58];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayEffectsWithParamsContainer   EffectsToApplyWhenAiming;                          // 0x4D0(0x10)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2E0A[0x48];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UAbilityTask_Tick*                     ChargingShotTickTask;                              // 0x528(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAbilityTask_Tick*                     TrajectoryTask;                                    // 0x530(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2E0B[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxTimeHoldingBeforeWarning;                       // 0x550(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxTimeHoldingRope;                                // 0x554(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TimeBetweenBreaths;                                // 0x558(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2E0C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDataTableRowHandle                   BreathWarningShakeFeedback;                        // 0x560(0x10)(Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                         HoldingRopeTiredSoundEffect;                       // 0x570(0x8)(Edit, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                TrajectoryActor;                                   // 0x578(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USplineComponent*                      TrajectorySplineComponent;                         // 0x580(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USAA_ProjectileData*                   CurrentProjectileData;                             // 0x588(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AActor>                    RangedTrajectoryActor;                             // 0x590(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNiagaraSystem*                        TrajectorySystem;                                  // 0x598(0x8)(Edit, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNiagaraComponent*                     NiagaraComponent;                                  // 0x5A0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGA_RangedShot* GetDefaultObj();

	void UpdateTrajectory(float DeltaSeconds);
	void TriggerShootAnim();
	void StartPlayFeedbackCloseToFinish();
	void StartComboNetEvent();
	void ReleaseComboNetEvent();
	void PlayFeedbackCloseToFinish();
	void OnStartComboEvent(const struct FGameplayEventData& Payload);
	void OnStartChargingAnimFinished();
	void OnStartAnimFinished();
	void OnSpawnCuesEvent(const struct FGameplayEventData& Payload);
	void OnShootEvent(const struct FGameplayEventData& Payload);
	void OnShootDataReceived(struct FGameplayAbilityTargetDataHandle& TargetData);
	void OnReleaseComboEventByTag();
	void OnReleaseComboEvent(const struct FGameplayEventData& Payload);
	void OnMontageCancelled();
	void OnLoadedEvent(const struct FGameplayEventData& Payload);
	void OnFinishChargingShot();
	void OnChargingShotTickTask(float DeltaSeconds);
	void HandleStartMontageDone(enum class EOnMontageDoneReason DoneReason);
	void HandleStartChargingMontageDone(enum class EOnMontageDoneReason DoneReason);
	void HandleOnCurrentMontageDone(enum class EOnMontageDoneReason DoneReason);
	void EndMaxTimeHoldingRope();
};

// 0x0 (0x4E0 - 0x4E0)
// Class LOTF2.GA_ReincarnateTransition
class UGA_ReincarnateTransition : public UGA_BaseDualRealmTransition
{
public:

	static class UClass* StaticClass();
	static class UGA_ReincarnateTransition* GetDefaultObj();

	void HandleAnimationNotify(class FName NotifyName, struct FBranchingPointNotifyPayload& BranchingPointPayload);
};

// 0x88 (0xB0 - 0x28)
// Class LOTF2.GameplayAbilityOptionalData_Resurrect
class UGameplayAbilityOptionalData_Resurrect : public UObject
{
public:
	uint8                                        Pad_2E0D[0x88];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGameplayAbilityOptionalData_Resurrect* GetDefaultObj();

};

// 0x8 (0x450 - 0x448)
// Class LOTF2.GA_Resurrect
class UGA_Resurrect : public UAnathemaGameplayAbility
{
public:
	struct FGameplayTag                          ForcedTranscendAbilityTriggerTag;                  // 0x448(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGA_Resurrect* GetDefaultObj();

	void TriggerResurrectCue();
	void OnTriggerResurrectCueDone();
	bool IsWorldResetRequested();
};

// 0x0 (0x448 - 0x448)
// Class LOTF2.GA_ResurrectCoopPartner
class UGA_ResurrectCoopPartner : public UAnathemaGameplayAbility
{
public:

	static class UClass* StaticClass();
	static class UGA_ResurrectCoopPartner* GetDefaultObj();

};

// 0x28 (0x470 - 0x448)
// Class LOTF2.GA_ResurrectionShrineInteraction
class UGA_ResurrectionShrineInteraction : public UAnathemaGameplayAbility
{
public:
	struct FAnimationSource                      MontageToPlayOnStartInteraction;                   // 0x448(0x10)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FAnimationSource                      MontageToPlayOnEndInteraction;                     // 0x458(0x10)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class AResurrectionShrineActor*              Shrine;                                            // 0x468(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGA_ResurrectionShrineInteraction* GetDefaultObj();

	void TriggerEndAbility();
	void OnEndingMontageDone(enum class EOnMontageDoneReason DoneReason);
	void HandleShrineInteractAnimationNotify(class FName NotifyName, struct FBranchingPointNotifyPayload& BranchingPointPayload);
	void HandleEndInteraction();
	void DoInteraction();
};

// 0xB0 (0x4F8 - 0x448)
// Class LOTF2.GA_Revenge
class UGA_Revenge : public UAnathemaGameplayAbility
{
public:
	TSubclassOf<class ARevengePath>              RevengePathClass;                                  // 0x448(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayEffectsWithParamsContainer   GameplayEffectsToApplyToTarget;                    // 0x450(0x10)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TSubclassOf<class UInventoryItem>            InventoryItemToAddToTargetInventory;               // 0x460(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UItemData>               ItemDataClassToAddToTargetInventory;               // 0x468(0x30)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ARevengePath*                          RevengePath;                                       // 0x498(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ABaseAICharacter*                      TargetEnemy;                                       // 0x4A0(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FText                                  RevengedPlayerName;                                // 0x4A8(0x18)(NativeAccessSpecifierPrivate)
	TArray<struct FActiveGameplayEffectHandle>   AppliedGeHandlersToTarget;                         // 0x4C0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class UInventoryItem*                        InventoryItemAddedToTarget;                        // 0x4D0(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2E11[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGA_Revenge* GetDefaultObj();

	void OnTargetDeath(class AActor* InstigatorActor, struct FGameplayTagContainer& InstigatorTags, bool bDeathWasObserved);
	void OnRevengeEnd(class ARevengeActivationPoint* RevengeActivationPoint);
	void OnOwnerDeath(class AActor* InstigatorActor, struct FGameplayTagContainer& InstigatorTags, bool bDeathWasObserved);
	void OnItemDataClassToAddToTargetInventoryLoaded();
	void OnFakeTombstoneEndPlay(class AActor* Actor, enum class EEndPlayReason EndPlayReason);
	void OnEnemyInstanceAvailable(class ALOTF2Character* EnemyInstance);
};

// 0x0 (0x448 - 0x448)
// Class LOTF2.GA_RevengeInhibit
class UGA_RevengeInhibit : public UAnathemaGameplayAbility
{
public:

	static class UClass* StaticClass();
	static class UGA_RevengeInhibit* GetDefaultObj();

};

// 0x50 (0x498 - 0x448)
// Class LOTF2.GA_Shifting
class UGA_Shifting : public UAnathemaGameplayAbility
{
public:
	struct FGameplayTag                          ShiftingTranscendTag;                              // 0x448(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          AxiomToLimboTranscendTag;                          // 0x450(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          LimboToAxiomTranscendTag;                          // 0x458(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          UmbralToLimboTranscendTag;                         // 0x460(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          LimboToUmbralTranscendTag;                         // 0x468(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UGameplayEffect>           AddHealthProvisionalDamageGE;                      // 0x470(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          AddHealthProvisionalDamageGEAmountTag;             // 0x478(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        HealthProvisionalDamageFactor;                     // 0x480(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        ShiftTime;                                         // 0x484(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2E12[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          TranscendAbilityTag;                               // 0x48C(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2E13[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGA_Shifting* GetDefaultObj();

	void OnTranscendToOriginTagRemoved();
	void OnTranscendToOriginTagAdded();
	void OnTranscendToLimboTagRemoved();
	void OnTranscendToLimboTagAdded();
	void OnShiftingTimeCompleted();
};

// 0x10 (0x458 - 0x448)
// Class LOTF2.GA_Shining
class UGA_Shining : public UAnathemaGameplayAbility
{
public:
	struct FGameplayTag                          MaterializedEventTag;                              // 0x448(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          UnMaterializedEventTag;                            // 0x450(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGA_Shining* GetDefaultObj();

};

// 0x8 (0x450 - 0x448)
// Class LOTF2.GA_ShiningView
class UGA_ShiningView : public UAnathemaGameplayAbility
{
public:
	TSubclassOf<class UGameplayEffect>           DeactivateShiningCueGE;                            // 0x448(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGA_ShiningView* GetDefaultObj();

	void StopShiningVisuals();
	void StartShiningVisuals(bool InstantVisuals);
};

// 0x8 (0x450 - 0x448)
// Class LOTF2.GA_SoulFlayAttack
class UGA_SoulFlayAttack : public UAnathemaGameplayAbility
{
public:
	struct FGameplayTag                          SoulFlayAttackAnimation;                           // 0x448(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGA_SoulFlayAttack* GetDefaultObj();

	void OnSoulFlayAttackAnimationFinished(enum class EOnMontageDoneReason DoneReason);
	void OnHitConfirmReceived(const struct FGameplayEventData& Payload);
};

// 0x88 (0x4D0 - 0x448)
// Class LOTF2.GA_SoulFlayHitConfirm
class UGA_SoulFlayHitConfirm : public UAnathemaGameplayAbility
{
public:
	float                                        CosmeticHyperAmorSoulPullDistance;                 // 0x448(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CosmeticHyperAmorSoulPullDuration;                 // 0x44C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInputAction*                          SoulFlayDirectionalInputAction;                    // 0x450(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<enum class EHexSoulFlayPerformResult, struct FGameplayTag> HitConfirmAnimations;                              // 0x458(0x50)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                        HealthProvisionalDamageFactor;                     // 0x4A8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2E14[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UGameplayEffect>           PlayerProvisionalDamageEffect;                     // 0x4B0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                SoulFlayedTarget;                                  // 0x4B8(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EHexSoulFlayPerformResult         SoulFlayAttackState;                               // 0x4C0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2E15[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGA_SoulFlayHitConfirm* GetDefaultObj();

	void OnSoulPullTargetDataReady(struct FGameplayAbilityTargetDataHandle& TargetDataHandle);
	void OnSoulFlayPullReceived(const struct FGameplayEventData& Payload);
	void OnHitConfirmMontageFinished(enum class EOnMontageDoneReason DoneReason);
	void ApplyProvisionalDamage();
};

// 0x10 (0x458 - 0x448)
// Class LOTF2.GA_SoulsLanternShining
class UGA_SoulsLanternShining : public UAnathemaGameplayAbility
{
public:
	struct FGameplayTag                          ShiningVisualsActivationTag;                       // 0x448(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          ShiningVisualsDeactivationTag;                     // 0x450(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGA_SoulsLanternShining* GetDefaultObj();

	void StopShiningVisuals();
	void StartShiningVisuals();
	void OnStopShiningVisuals();
	void OnStartShiningVisuals();
};

// 0x20 (0x468 - 0x448)
// Class LOTF2.GA_SpawnPickup
class UGA_SpawnPickup : public UAnathemaGameplayAbility
{
public:
	uint8                                        Pad_2E17[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGA_SpawnPickup* GetDefaultObj();

	struct FGameplayAbilityTargetDataHandle MakeSpawnPickupTargetDataHandle(const struct FDataTableRowHandle& LootTable, const struct FVector& SpawnLocation, bool bShouldSpawnPickupCopyForAlly);
};

// 0x8 (0x450 - 0x448)
// Class LOTF2.GA_SprintAbility
class UGA_SprintAbility : public UAnathemaGameplayAbility
{
public:
	float                                        RotationRateWhileSprinting;                        // 0x448(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2E1B[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGA_SprintAbility* GetDefaultObj();

	void StaminaAttributeChanged(bool bMatchedComparisonLastAttributeChange, float CurrentValue);
	void RequiredTagRemoved();
	void OnGameplayEventInputSprintToggle(const struct FGameplayEventData& Payload);
	void OnGameplayEventInputSprintEnded(const struct FGameplayEventData& Payload);
};

// 0x0 (0x448 - 0x448)
// Class LOTF2.GA_SwitchStance
class UGA_SwitchStance : public UAnathemaGameplayAbility
{
public:

	static class UClass* StaticClass();
	static class UGA_SwitchStance* GetDefaultObj();

};

// 0x48 (0x490 - 0x448)
// Class LOTF2.GA_SyncAnim
class UGA_SyncAnim : public UAnathemaGameplayAbility
{
public:
	uint8                                        Pad_2E24[0x48];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGA_SyncAnim* GetDefaultObj();

	void OnMontageDone(enum class EOnMontageDoneReason DoneReason);
	class AActor* GetOtherParticipantActor();
};

// 0x8 (0x450 - 0x448)
// Class LOTF2.GA_SyncedAttack
class UGA_SyncedAttack : public UAnathemaGameplayAbility
{
public:
	uint8                                        Pad_2E29[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGA_SyncedAttack* GetDefaultObj();

	void OnSyncedAnimationFinished();
	bool IsSyncedAttackAvailableForActor();
};

// 0x218 (0x660 - 0x448)
// Class LOTF2.GA_TargetAbility
class UGA_TargetAbility : public UAnathemaGameplayAbility
{
public:
	bool                                         bShouldAlignMeshToTarget;                          // 0x448(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2E37[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 IgnoreAlignMeshToTargetTags;                       // 0x450(0x20)(Edit, Protected, NativeAccessSpecifierProtected)
	float                                        LookAtTargetAcceptableAngle;                       // 0x470(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LookAtTargetLerpSpeed;                             // 0x474(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2E38[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DefaultTimeToCancelLockOn;                         // 0x47C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DefaultMaxTargetDistance;                          // 0x480(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2E3A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ATargetActor_TargetComponent*          TargetActor;                                       // 0x488(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UAimTargetWidget>          AimTargetWidgetCalss;                              // 0x490(0x8)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UAimTargetWidget>       AimTargetWidget;                                   // 0x498(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                CameraActor;                                       // 0x4A0(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2E3C[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UGameplayEffect>           TargetGameplayEffect;                              // 0x4B0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInputAction*                          CycleTargetsNextInputAction;                       // 0x4B8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInputAction*                          CycleTargetsPrevInputAction;                       // 0x4C0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInputAction*                          CameraTurnAction;                                  // 0x4C8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInputAction*                          ShiftTargetsAction;                                // 0x4D0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MouseMovementThreshold;                            // 0x4D8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxMouseMovementToConsider;                        // 0x4DC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MouseMovementDelayerDelay;                         // 0x4E0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2E3D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagQuery                     InteractionsFilter;                                // 0x4E8(0x48)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2E3E[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class UAbilityTask_WaitDelay> ChangeTargetDelayTask;                             // 0x54C(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UAbilityTask_WaitDelay> CancelTargetDelayTask;                             // 0x554(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UAbilityTask_WaitDelay> FadeWidgetDelayTask;                               // 0x55C(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2E3F[0xFC];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGA_TargetAbility* GetDefaultObj();

	void TryToChangeTargetOnCurrentTargetInvalid();
	void StartWidgetFade();
	void OnTickDelegate(float DeltaTime);
	void OnTargetDie();
	void OnTargetDataReady(struct FGameplayAbilityTargetDataHandle& TargetData);
	void OnTargetChangedEvent(const struct FGameplayEventData& Payload);
	void OnTargetBecameInvisible();
	void OnGameplayEventInputTarget(const struct FGameplayEventData& Payload);
	void CancelTargeting();
};

// 0x70 (0x4B8 - 0x448)
// Class LOTF2.GA_TurnWhileMoving
class UGA_TurnWhileMoving : public UAnathemaGameplayAbility
{
public:
	struct FTurn180Info                          TurnInfoWhileWalking;                              // 0x448(0x24)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FTurn180Info                          TurnInfoWhileRunning;                              // 0x46C(0x24)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FTurn180Info                          TurnInfoWhileSprinting;                            // 0x490(0x24)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E40[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGA_TurnWhileMoving* GetDefaultObj();

	void OnMontageDone(enum class EOnMontageDoneReason DoneReason);
	void MovementTagRemoved();
};

// 0x8 (0x450 - 0x448)
// Class LOTF2.GA_UmbraFigmentDrop
class UGA_UmbraFigmentDrop : public UAnathemaGameplayAbility
{
public:
	TSubclassOf<class APickupAutoTriggered>      UmbraFigmentDropClass;                             // 0x448(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGA_UmbraFigmentDrop* GetDefaultObj();

};

// 0x30 (0x478 - 0x448)
// Class LOTF2.GA_UmbralExitPointInteraction
class UGA_UmbralExitPointInteraction : public UAnathemaGameplayAbility
{
public:
	float                                        PlayerInteractionOffset;                           // 0x448(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        PlayerMoveToOffsetDuration;                        // 0x44C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FAnimationSource                      InteractionAnimation;                              // 0x450(0x10)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	class AUmbralExitPointActor*                 TargetUmbralExitPointActor;                        // 0x460(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  UseExitPointAnimNotify;                            // 0x468(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          ReincarnateEventTag;                               // 0x470(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGA_UmbralExitPointInteraction* GetDefaultObj();

	void OnInteractionMontageDone(enum class EOnMontageDoneReason DoneReason);
	void HandleInteractionAnimationNotify(class FName NotifyName, struct FBranchingPointNotifyPayload& BranchingPointPayload);
};

// 0x0 (0x448 - 0x448)
// Class LOTF2.GA_UseCameraAim
class UGA_UseCameraAim : public UAnathemaGameplayAbility
{
public:

	static class UClass* StaticClass();
	static class UGA_UseCameraAim* GetDefaultObj();

};

// 0x48 (0x4B0 - 0x468)
// Class LOTF2.GA_UseInventoryItem
class UGA_UseInventoryItem : public UGA_InteractWithInventoryItem
{
public:
	TSubclassOf<class UGameplayEffect>           WadingGE;                                          // 0x468(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FItemUseAnimationData                 ItemUseAnimationData;                              // 0x470(0x20)(NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2E41[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGA_UseInventoryItem* GetDefaultObj();

	void StartItemBehavior();
	void OnRepeatedUseItemTargetDataReceived(struct FGameplayAbilityTargetDataHandle& TargetData);
	void OnItemUsedEvent(const struct FGameplayEventData& EventPayload);
	void HandleOnUseMontageEnded(enum class EOnMontageDoneReason DoneReason);
	void HandleOnFinishMontageEnded(enum class EOnMontageDoneReason DoneReason);
	void HandleItemUseAnimationNotify(class FName NotifyName, struct FBranchingPointNotifyPayload& BranchingPointPayload);
};

// 0x10 (0x458 - 0x448)
// Class LOTF2.GA_VigorBonusMultiplier
class UGA_VigorBonusMultiplier : public UAnathemaGameplayAbility
{
public:
	class UCurveFloat*                           VigorToMultiplierCurve;                            // 0x448(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bDisableAbilityInUmbral;                           // 0x450(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2E42[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGA_VigorBonusMultiplier* GetDefaultObj();

	void OnOwnerVigorChanged(int32 NewVigor);
	void OnOwnerRealmChanged(enum class EGameRealm OldRealm, enum class EGameRealm NewRealm);
};

// 0x18 (0x460 - 0x448)
// Class LOTF2.GA_VigorDrop
class UGA_VigorDrop : public UAnathemaGameplayAbility
{
public:
	TSubclassOf<class UVigorDropInventoryItem>   VigorDropInventoryItemClass;                       // 0x448(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class APickup>                   VigorPickupClass;                                  // 0x450(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxNumDrops;                                       // 0x458(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MinVigorPerDividedDrop;                            // 0x45C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UGA_VigorDrop* GetDefaultObj();

};

// 0x0 (0x448 - 0x448)
// Class LOTF2.GA_WalkAbility
class UGA_WalkAbility : public UAnathemaGameplayAbility
{
public:

	static class UClass* StaticClass();
	static class UGA_WalkAbility* GetDefaultObj();

	void OnMovementTagRemoved();
	void OnGameplayEventInputWalkToggle(const struct FGameplayEventData& Payload);
	void OnGameplayEventInputWalkEnd(const struct FGameplayEventData& Payload);
};

// 0x0 (0x448 - 0x448)
// Class LOTF2.GA_WitherInhibit
class UGA_WitherInhibit : public UAnathemaGameplayAbility
{
public:

	static class UClass* StaticClass();
	static class UGA_WitherInhibit* GetDefaultObj();

};

// 0x0 (0x448 - 0x448)
// Class LOTF2.GA_WitherReaction
class UGA_WitherReaction : public UAnathemaGameplayAbility
{
public:

	static class UClass* StaticClass();
	static class UGA_WitherReaction* GetDefaultObj();

	void OnWitherUninhibitedBP(float WitherProgress, int32 WitherLevel);
	void OnWitherStartBP();
	void OnWitherStart();
	void OnWitherLevelValueChange(int32 WitherLevelValue, float Duration);
	void OnWitherLevelProgressChange(float WitherLevelProgress);
	void OnWitherInhibitedChange(bool bValue);
	void OnWitherInhibitedBP();
	void OnWitherEndBP();
	void OnWitherEnd();
	void OnWitherChangeBP(float WitherProgress, int32 WitherLevel);
	void OnPreCharacterSpawnBP();
};

// 0x0 (0x450 - 0x450)
// Class LOTF2.GA_WitherUnspawn
class UGA_WitherUnspawn : public UGA_PlayMontageByTag
{
public:

	static class UClass* StaticClass();
	static class UGA_WitherUnspawn* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class LOTF2.GECustomApplicationRequirement_Damage
class UGECustomApplicationRequirement_Damage : public UGameplayEffectCustomApplicationRequirement
{
public:

	static class UClass* StaticClass();
	static class UGECustomApplicationRequirement_Damage* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class LOTF2.HexRangedMagicCostEventData
class UHexRangedMagicCostEventData : public UObject
{
public:
	float                                        ManaCost;                                          // 0x28(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EMagicFamily                      MagicFamily;                                       // 0x2C(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E43[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexRangedMagicCostEventData* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class LOTF2.GEExecution_AbilityCost
class UGEExecution_AbilityCost : public UGameplayEffectExecutionCalculation
{
public:

	static class UClass* StaticClass();
	static class UGEExecution_AbilityCost* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class LOTF2.GEExecution_RangedCost
class UGEExecution_RangedCost : public UGEExecution_AbilityCost
{
public:

	static class UClass* StaticClass();
	static class UGEExecution_RangedCost* GetDefaultObj();

	float CalculateDynamicAmmoCostFromActorAndAmmoData(class AActor* TargetActor, class UAmmoData* AmmoData);
};

// 0x0 (0x860 - 0x860)
// Class LOTF2.GEStaminaCost
class UGEStaminaCost : public UGameplayEffect
{
public:

	static class UClass* StaticClass();
	static class UGEStaminaCost* GetDefaultObj();

};

// 0x110 (0x3C8 - 0x2B8)
// Class LOTF2.InventoryGridItem
class UInventoryGridItem : public ULOTF2UserWidget
{
public:
	uint8                                        Pad_2E51[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bShowAmount;                                       // 0x2F8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAlwaysShowIcon;                                   // 0x2F9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAlwaysShowAmount;                                 // 0x2FA(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2E52[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCommonTextBlock*                      Text_Stock;                                        // 0x300(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFocusableButtonWidget*                Background_Button;                                 // 0x308(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseDecorationImage;                               // 0x310(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2E53[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UImage*                                Image_Decoration;                                  // 0x318(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class USmallRuneSlot>            RuneSlotClass;                                     // 0x320(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Image_Selected;                                    // 0x328(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Image_Equipped;                                    // 0x330(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EInteractReason                   InteractReason;                                    // 0x338(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2E58[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector2D                             ImageSize;                                         // 0x340(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonLazyImage*                      Icon_Image;                                        // 0x350(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                         ClickSound;                                        // 0x358(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                         HoverSound;                                        // 0x360(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInputAction*                          MatchingInputAction;                               // 0x368(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URichTextBlock*                        RichText_Icon;                                     // 0x370(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryItem*                        Item;                                              // 0x378(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                          Runes_Container;                                   // 0x380(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonRichTextBlock*                  Text_Price;                                        // 0x388(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                         DefaultHoverSound;                                 // 0x390(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                         DefaultClickSound;                                 // 0x398(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2E59[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UInventoryGridItem* GetDefaultObj();

	void ShowInputAction(const struct FGameplayTag& InputAction);
	void SetIsSelected(bool bIsSelected);
	void SetIsNewItem(bool bIsNew);
	void SetIsEquipped(bool bIsEquipped);
	void SetIsEquippable(bool bIsEquippable);
	void SetIsEpicItem(bool bEpicItem);
	void SetCanBeInteracted(enum class EInteractReason InteractReason);
	void PlayNotEquippableFeedback();
	void OnKeyBindingChanged(class FName& KeyBindingName);
	void OnItemInteracted();
	void OnInventoryDirtied();
	void OnFocusOut();
	void OnFocusIn();
	enum class EInteractReason GetInteractReason();
	void BP_SetCanBeInteracted(bool bCanBeInteracted);
};

// 0x0 (0x3C8 - 0x3C8)
// Class LOTF2.GestureGridItem
class UGestureGridItem : public UInventoryGridItem
{
public:

	static class UClass* StaticClass();
	static class UGestureGridItem* GetDefaultObj();

	void SetIsEmpty(bool bIsEmpty);
};

// 0x8 (0x480 - 0x478)
// Class LOTF2.GestureItemData
class UGestureItemData : public UItemData
{
public:
	struct FGameplayTag                          MontageTag;                                        // 0x478(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGestureItemData* GetDefaultObj();

	struct FGameplayTag GetMontageTag();
};

// 0x50 (0x540 - 0x4F0)
// Class LOTF2.GesturesPanel
class UGesturesPanel : public UInGameMenuPanel
{
public:
	uint8                                        Pad_2E5D[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UInventoryItemName*                    Item_Name;                                         // 0x500(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryItemName*                    Equipped_Item_Name;                                // 0x508(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHexTileView*                          Gestures;                                          // 0x510(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHexTileView*                          EquippedGestures;                                  // 0x518(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxEquippedGestures;                               // 0x520(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bGesturesOpen;                                     // 0x524(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2E5E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UInventoryItem*                        SelectedGestureInventoryItem;                      // 0x528(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInventoryComponent*                   InventoryComponent;                                // 0x530(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2E5F[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGesturesPanel* GetDefaultObj();

	void UpdateGestureWidgets();
	void ShowNoEmotesAvailable(bool bNoEmotes);
	void PlayPlayerMontage(struct FGameplayTag& MontageTag);
	void OnUnequipSelectedGesture();
	void OnPlayerDeath(class AActor* InstigatorActor, struct FGameplayTagContainer& GameplayTags, bool bDeathWasObserved);
	void OnGesturesCycle();
	void OnEquippedGestureFocused(class UObject* InteractedItem);
};

// 0x0 (0x860 - 0x860)
// Class LOTF2.GE_AbilityCost
class UGE_AbilityCost : public UGameplayEffect
{
public:

	static class UClass* StaticClass();
	static class UGE_AbilityCost* GetDefaultObj();

};

// 0x0 (0x860 - 0x860)
// Class LOTF2.GE_ApplyLocomotionDamageLevel
class UGE_ApplyLocomotionDamageLevel : public UGameplayEffect
{
public:

	static class UClass* StaticClass();
	static class UGE_ApplyLocomotionDamageLevel* GetDefaultObj();

};

// 0x0 (0x860 - 0x860)
// Class LOTF2.GE_ApplyStaggerHealthDamage
class UGE_ApplyStaggerHealthDamage : public UGameplayEffect
{
public:

	static class UClass* StaticClass();
	static class UGE_ApplyStaggerHealthDamage* GetDefaultObj();

};

// 0x0 (0x860 - 0x860)
// Class LOTF2.GE_CombatBlockStance
class UGE_CombatBlockStance : public UGameplayEffect
{
public:

	static class UClass* StaticClass();
	static class UGE_CombatBlockStance* GetDefaultObj();

};

// 0x0 (0x860 - 0x860)
// Class LOTF2.GE_CombatHeavyAttackFirstCharge
class UGE_CombatHeavyAttackFirstCharge : public UGameplayEffect
{
public:

	static class UClass* StaticClass();
	static class UGE_CombatHeavyAttackFirstCharge* GetDefaultObj();

};

// 0x0 (0x860 - 0x860)
// Class LOTF2.GE_CombatIntangible
class UGE_CombatIntangible : public UGameplayEffect
{
public:

	static class UClass* StaticClass();
	static class UGE_CombatIntangible* GetDefaultObj();

};

// 0x0 (0x860 - 0x860)
// Class LOTF2.GE_CombatStaggerHealthRegenDelay
class UGE_CombatStaggerHealthRegenDelay : public UGameplayEffect
{
public:

	static class UClass* StaticClass();
	static class UGE_CombatStaggerHealthRegenDelay* GetDefaultObj();

};

// 0x0 (0x860 - 0x860)
// Class LOTF2.GE_CombatStaggerHealthRegenOverTime
class UGE_CombatStaggerHealthRegenOverTime : public UGameplayEffect
{
public:

	static class UClass* StaticClass();
	static class UGE_CombatStaggerHealthRegenOverTime* GetDefaultObj();

};

// 0x0 (0x860 - 0x860)
// Class LOTF2.GE_CombatStaggerInmunity
class UGE_CombatStaggerInmunity : public UGameplayEffect
{
public:

	static class UClass* StaticClass();
	static class UGE_CombatStaggerInmunity* GetDefaultObj();

};

// 0x0 (0x860 - 0x860)
// Class LOTF2.GE_CombatStateForceNoDeflect
class UGE_CombatStateForceNoDeflect : public UGameplayEffect
{
public:

	static class UClass* StaticClass();
	static class UGE_CombatStateForceNoDeflect* GetDefaultObj();

};

// 0x0 (0x860 - 0x860)
// Class LOTF2.GE_CombatStateGuarding
class UGE_CombatStateGuarding : public UGameplayEffect
{
public:

	static class UClass* StaticClass();
	static class UGE_CombatStateGuarding* GetDefaultObj();

};

// 0x0 (0x860 - 0x860)
// Class LOTF2.GE_CombatStateGuardingNoReaction
class UGE_CombatStateGuardingNoReaction : public UGameplayEffect
{
public:

	static class UClass* StaticClass();
	static class UGE_CombatStateGuardingNoReaction* GetDefaultObj();

};

// 0x0 (0x860 - 0x860)
// Class LOTF2.GE_CombatStateHostDead
class UGE_CombatStateHostDead : public UGameplayEffect
{
public:

	static class UClass* StaticClass();
	static class UGE_CombatStateHostDead* GetDefaultObj();

};

// 0x0 (0x860 - 0x860)
// Class LOTF2.GE_CombatStateHostDying
class UGE_CombatStateHostDying : public UGameplayEffect
{
public:

	static class UClass* StaticClass();
	static class UGE_CombatStateHostDying* GetDefaultObj();

};

// 0x0 (0x860 - 0x860)
// Class LOTF2.GE_CombatStateHostFirstDeath
class UGE_CombatStateHostFirstDeath : public UGameplayEffect
{
public:

	static class UClass* StaticClass();
	static class UGE_CombatStateHostFirstDeath* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class LOTF2.ModCalculation_DeflectProbabilityIncrease
class UModCalculation_DeflectProbabilityIncrease : public UGameplayModMagnitudeCalculation
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_DeflectProbabilityIncrease* GetDefaultObj();

};

// 0x0 (0x860 - 0x860)
// Class LOTF2.GE_ConsecutiveGuardHitDeflectProbabilityIncrease
class UGE_ConsecutiveGuardHitDeflectProbabilityIncrease : public UGameplayEffect
{
public:

	static class UClass* StaticClass();
	static class UGE_ConsecutiveGuardHitDeflectProbabilityIncrease* GetDefaultObj();

};

// 0x0 (0x860 - 0x860)
// Class LOTF2.GE_ConsecutiveHitCount
class UGE_ConsecutiveHitCount : public UGameplayEffect
{
public:

	static class UClass* StaticClass();
	static class UGE_ConsecutiveHitCount* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class LOTF2.ModCalculation_DodgeProbabilityIncrease
class UModCalculation_DodgeProbabilityIncrease : public UGameplayModMagnitudeCalculation
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_DodgeProbabilityIncrease* GetDefaultObj();

};

// 0x0 (0x860 - 0x860)
// Class LOTF2.GE_ConsecutiveHitDodgeProbabilityIncrease
class UGE_ConsecutiveHitDodgeProbabilityIncrease : public UGameplayEffect
{
public:

	static class UClass* StaticClass();
	static class UGE_ConsecutiveHitDodgeProbabilityIncrease* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class LOTF2.ModCalculation_GuardProbabilityIncrease
class UModCalculation_GuardProbabilityIncrease : public UGameplayModMagnitudeCalculation
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_GuardProbabilityIncrease* GetDefaultObj();

};

// 0x0 (0x860 - 0x860)
// Class LOTF2.GE_ConsecutiveHitGuardProbabilityIncrease
class UGE_ConsecutiveHitGuardProbabilityIncrease : public UGameplayEffect
{
public:

	static class UClass* StaticClass();
	static class UGE_ConsecutiveHitGuardProbabilityIncrease* GetDefaultObj();

};

// 0x0 (0x860 - 0x860)
// Class LOTF2.GE_ConsecutiveHitReactCount
class UGE_ConsecutiveHitReactCount : public UGameplayEffect
{
public:

	static class UClass* StaticClass();
	static class UGE_ConsecutiveHitReactCount* GetDefaultObj();

};

// 0x0 (0x860 - 0x860)
// Class LOTF2.GE_Damage
class UGE_Damage : public UGameplayEffect
{
public:

	static class UClass* StaticClass();
	static class UGE_Damage* GetDefaultObj();

};

// 0x0 (0x860 - 0x860)
// Class LOTF2.GE_Death
class UGE_Death : public UGameplayEffect
{
public:

	static class UClass* StaticClass();
	static class UGE_Death* GetDefaultObj();

};

// 0x0 (0x860 - 0x860)
// Class LOTF2.GE_EnvironmentActionReady
class UGE_EnvironmentActionReady : public UGameplayEffect
{
public:

	static class UClass* StaticClass();
	static class UGE_EnvironmentActionReady* GetDefaultObj();

};

// 0x0 (0x860 - 0x860)
// Class LOTF2.GE_FirstEncounterHasCondition
class UGE_FirstEncounterHasCondition : public UGameplayEffect
{
public:

	static class UClass* StaticClass();
	static class UGE_FirstEncounterHasCondition* GetDefaultObj();

};

// 0x0 (0x860 - 0x860)
// Class LOTF2.GE_InfiniteEffectBase
class UGE_InfiniteEffectBase : public UGameplayEffect
{
public:

	static class UClass* StaticClass();
	static class UGE_InfiniteEffectBase* GetDefaultObj();

};

// 0x0 (0x860 - 0x860)
// Class LOTF2.GE_InternalModifyEquipLoad
class UGE_InternalModifyEquipLoad : public UGameplayEffect
{
public:

	static class UClass* StaticClass();
	static class UGE_InternalModifyEquipLoad* GetDefaultObj();

};

// 0x0 (0x860 - 0x860)
// Class LOTF2.GE_InternalModifyEquipLoadBySourceObject
class UGE_InternalModifyEquipLoadBySourceObject : public UGameplayEffect
{
public:

	static class UClass* StaticClass();
	static class UGE_InternalModifyEquipLoadBySourceObject* GetDefaultObj();

};

// 0x0 (0x860 - 0x860)
// Class LOTF2.GE_Internal_GrantArmorStats
class UGE_Internal_GrantArmorStats : public UGameplayEffect
{
public:

	static class UClass* StaticClass();
	static class UGE_Internal_GrantArmorStats* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class LOTF2.HexModCalculation_SpellPowerScaling
class UHexModCalculation_SpellPowerScaling : public UGameplayModMagnitudeCalculation
{
public:

	static class UClass* StaticClass();
	static class UHexModCalculation_SpellPowerScaling* GetDefaultObj();

};

// 0x0 (0x860 - 0x860)
// Class LOTF2.GE_Internal_GrantEquipmentMagicStats
class UGE_Internal_GrantEquipmentMagicStats : public UGameplayEffect
{
public:

	static class UClass* StaticClass();
	static class UGE_Internal_GrantEquipmentMagicStats* GetDefaultObj();

};

// 0x0 (0x860 - 0x860)
// Class LOTF2.GE_Internal_GrantWeaponScaling
class UGE_Internal_GrantWeaponScaling : public UGameplayEffect
{
public:

	static class UClass* StaticClass();
	static class UGE_Internal_GrantWeaponScaling* GetDefaultObj();

};

// 0x0 (0x860 - 0x860)
// Class LOTF2.GE_Internal_GrantWeaponStats
class UGE_Internal_GrantWeaponStats : public UGameplayEffect
{
public:

	static class UClass* StaticClass();
	static class UGE_Internal_GrantWeaponStats* GetDefaultObj();

};

// 0x0 (0x860 - 0x860)
// Class LOTF2.GE_Jumping
class UGE_Jumping : public UGameplayEffect
{
public:

	static class UClass* StaticClass();
	static class UGE_Jumping* GetDefaultObj();

};

// 0x0 (0x860 - 0x860)
// Class LOTF2.GE_KillOwnerHealth
class UGE_KillOwnerHealth : public UGameplayEffect
{
public:

	static class UClass* StaticClass();
	static class UGE_KillOwnerHealth* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class LOTF2.Execution_KillTargetDirectly
class UExecution_KillTargetDirectly : public UGameplayEffectExecutionCalculation
{
public:

	static class UClass* StaticClass();
	static class UExecution_KillTargetDirectly* GetDefaultObj();

};

// 0x0 (0x860 - 0x860)
// Class LOTF2.GE_KillTarget
class UGE_KillTarget : public UGameplayEffect
{
public:

	static class UClass* StaticClass();
	static class UGE_KillTarget* GetDefaultObj();

};

// 0x0 (0x860 - 0x860)
// Class LOTF2.GE_NPCTalking
class UGE_NPCTalking : public UGameplayEffect
{
public:

	static class UClass* StaticClass();
	static class UGE_NPCTalking* GetDefaultObj();

};

// 0x0 (0x860 - 0x860)
// Class LOTF2.GE_Parryable
class UGE_Parryable : public UGameplayEffect
{
public:

	static class UClass* StaticClass();
	static class UGE_Parryable* GetDefaultObj();

};

// 0x0 (0x860 - 0x860)
// Class LOTF2.GE_ParryWindow
class UGE_ParryWindow : public UGameplayEffect
{
public:

	static class UClass* StaticClass();
	static class UGE_ParryWindow* GetDefaultObj();

};

// 0x0 (0x860 - 0x860)
// Class LOTF2.GE_PauseWitherTimeGain
class UGE_PauseWitherTimeGain : public UGameplayEffect
{
public:

	static class UClass* StaticClass();
	static class UGE_PauseWitherTimeGain* GetDefaultObj();

};

// 0x0 (0x860 - 0x860)
// Class LOTF2.GE_PerformForcedReaction
class UGE_PerformForcedReaction : public UGameplayEffect
{
public:

	static class UClass* StaticClass();
	static class UGE_PerformForcedReaction* GetDefaultObj();

};

// 0x0 (0x860 - 0x860)
// Class LOTF2.GE_PlayAnimationEnvironmentAction
class UGE_PlayAnimationEnvironmentAction : public UGameplayEffect
{
public:

	static class UClass* StaticClass();
	static class UGE_PlayAnimationEnvironmentAction* GetDefaultObj();

};

// 0x0 (0x860 - 0x860)
// Class LOTF2.GE_ProvisionalDamageVisual
class UGE_ProvisionalDamageVisual : public UGameplayEffect
{
public:

	static class UClass* StaticClass();
	static class UGE_ProvisionalDamageVisual* GetDefaultObj();

};

// 0x0 (0x860 - 0x860)
// Class LOTF2.GE_PureDamage
class UGE_PureDamage : public UGameplayEffect
{
public:

	static class UClass* StaticClass();
	static class UGE_PureDamage* GetDefaultObj();

};

// 0x0 (0x860 - 0x860)
// Class LOTF2.GE_RangedCost
class UGE_RangedCost : public UGameplayEffect
{
public:

	static class UClass* StaticClass();
	static class UGE_RangedCost* GetDefaultObj();

};

// 0x0 (0x860 - 0x860)
// Class LOTF2.GE_ReceivedAlert
class UGE_ReceivedAlert : public UGameplayEffect
{
public:

	static class UClass* StaticClass();
	static class UGE_ReceivedAlert* GetDefaultObj();

};

// 0x0 (0x860 - 0x860)
// Class LOTF2.GE_RefillModifiedGlobalScalingStats
class UGE_RefillModifiedGlobalScalingStats : public UGameplayEffect
{
public:

	static class UClass* StaticClass();
	static class UGE_RefillModifiedGlobalScalingStats* GetDefaultObj();

};

// 0x0 (0x860 - 0x860)
// Class LOTF2.GE_GlobalScaling
class UGE_GlobalScaling : public UGameplayEffect
{
public:

	static class UClass* StaticClass();
	static class UGE_GlobalScaling* GetDefaultObj();

};

// 0x0 (0x860 - 0x860)
// Class LOTF2.GE_SendContextGameplayEvent
class UGE_SendContextGameplayEvent : public UGameplayEffect
{
public:

	static class UClass* StaticClass();
	static class UGE_SendContextGameplayEvent* GetDefaultObj();

};

// 0x0 (0x860 - 0x860)
// Class LOTF2.GE_SetFacingAngleCorrection
class UGE_SetFacingAngleCorrection : public UGameplayEffect
{
public:

	static class UClass* StaticClass();
	static class UGE_SetFacingAngleCorrection* GetDefaultObj();

};

// 0x0 (0x860 - 0x860)
// Class LOTF2.GE_SetMovementRotationRate
class UGE_SetMovementRotationRate : public UGameplayEffect
{
public:

	static class UClass* StaticClass();
	static class UGE_SetMovementRotationRate* GetDefaultObj();

};

// 0x0 (0x860 - 0x860)
// Class LOTF2.GE_SetMovementRotationRateCustom
class UGE_SetMovementRotationRateCustom : public UGameplayEffect
{
public:

	static class UClass* StaticClass();
	static class UGE_SetMovementRotationRateCustom* GetDefaultObj();

};

// 0x0 (0x860 - 0x860)
// Class LOTF2.GE_SprintStaminaCost
class UGE_SprintStaminaCost : public UGameplayEffect
{
public:

	static class UClass* StaticClass();
	static class UGE_SprintStaminaCost* GetDefaultObj();

};

// 0x0 (0x860 - 0x860)
// Class LOTF2.GE_Staggered
class UGE_Staggered : public UGameplayEffect
{
public:

	static class UClass* StaticClass();
	static class UGE_Staggered* GetDefaultObj();

};

// 0x0 (0x860 - 0x860)
// Class LOTF2.GE_Summon_SpellPowerScaling
class UGE_Summon_SpellPowerScaling : public UGameplayEffect
{
public:

	static class UClass* StaticClass();
	static class UGE_Summon_SpellPowerScaling* GetDefaultObj();

};

// 0x0 (0x860 - 0x860)
// Class LOTF2.GE_TargettingActive
class UGE_TargettingActive : public UGameplayEffect
{
public:

	static class UClass* StaticClass();
	static class UGE_TargettingActive* GetDefaultObj();

};

// 0x0 (0x860 - 0x860)
// Class LOTF2.GE_TriggerFirstEncounter
class UGE_TriggerFirstEncounter : public UGameplayEffect
{
public:

	static class UClass* StaticClass();
	static class UGE_TriggerFirstEncounter* GetDefaultObj();

};

// 0x0 (0x860 - 0x860)
// Class LOTF2.GE_TurnEnvironmentAction
class UGE_TurnEnvironmentAction : public UGameplayEffect
{
public:

	static class UClass* StaticClass();
	static class UGE_TurnEnvironmentAction* GetDefaultObj();

};

// 0x0 (0x860 - 0x860)
// Class LOTF2.GE_WaitFirstEncounter
class UGE_WaitFirstEncounter : public UGameplayEffect
{
public:

	static class UClass* StaticClass();
	static class UGE_WaitFirstEncounter* GetDefaultObj();

};

// 0x0 (0x860 - 0x860)
// Class LOTF2.GE_WaitFirstEncounterAmbush
class UGE_WaitFirstEncounterAmbush : public UGE_WaitFirstEncounter
{
public:

	static class UClass* StaticClass();
	static class UGE_WaitFirstEncounterAmbush* GetDefaultObj();

};

// 0x0 (0x860 - 0x860)
// Class LOTF2.GE_WaitFirstEncounter_IgnoreESP
class UGE_WaitFirstEncounter_IgnoreESP : public UGameplayEffect
{
public:

	static class UClass* StaticClass();
	static class UGE_WaitFirstEncounter_IgnoreESP* GetDefaultObj();

};

// 0x0 (0x860 - 0x860)
// Class LOTF2.GE_WaitFirstEncounter_TriggerOnCombatAlerts
class UGE_WaitFirstEncounter_TriggerOnCombatAlerts : public UGameplayEffect
{
public:

	static class UClass* StaticClass();
	static class UGE_WaitFirstEncounter_TriggerOnCombatAlerts* GetDefaultObj();

};

// 0x0 (0x860 - 0x860)
// Class LOTF2.GE_WaitFirstEncounter_TriggerOnEventAlerts
class UGE_WaitFirstEncounter_TriggerOnEventAlerts : public UGameplayEffect
{
public:

	static class UClass* StaticClass();
	static class UGE_WaitFirstEncounter_TriggerOnEventAlerts* GetDefaultObj();

};

// 0x60 (0x120 - 0xC0)
// Class LOTF2.GrabWindow
class UGrabWindow : public UDamageWindowBase
{
public:
	struct FGrabAttackDefinition                 GrabAttackDefinition;                              // 0xC0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E69[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGrabWindow* GetDefaultObj();

};

// 0x20 (0x4F8 - 0x4D8)
// Class LOTF2.GridInteractionPopupBase
class UGridInteractionPopupBase : public UHexActivatableWidget
{
public:
	uint8                                        Pad_2E6A[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USizeBox*                              Interaction_Popup;                                 // 0x4E8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2E6B[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGridInteractionPopupBase* GetDefaultObj();

	void SetPosition(class UInventoryGridItem* Item);
	void SetInteractionItem(class UInventoryItem* InventoryItem);
	class UCanvasPanelSlot* GetSlot();
};

// 0x180 (0x1B0 - 0x30)
// Class LOTF2.GuardAttributeSet
class UGuardAttributeSet : public UAttributeSet
{
public:
	struct FGameplayAttributeData                GuardAngle;                                        // 0x30(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                GuardAngleOffset;                                  // 0x40(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                GuardDefenseStagger;                               // 0x50(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                DeflectionGuard;                                   // 0x60(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                DeflectionGuardMultiplierOnParry;                  // 0x70(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                GuardDefensePhysical;                              // 0x80(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                GuardDefenseFire;                                  // 0x90(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                GuardDefenseHoly;                                  // 0xA0(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                GuardDefenseDark;                                  // 0xB0(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                GuardDefenseMagic;                                 // 0xC0(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                DamageStaggerParry;                                // 0xD0(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                ParryGuardProtectionStamina;                       // 0xE0(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                ParryGuardProtectionDamage;                        // 0xF0(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                ParryGuardProtectionStatusEffect;                  // 0x100(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                ParryWindow;                                       // 0x110(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                GuardDefensePoise;                                 // 0x120(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                GuardDefenseStamina;                               // 0x130(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                GuardDefenseProvisionalDamage;                     // 0x140(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                GuardDefenseAggro;                                 // 0x150(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                GuardDefenseThreat;                                // 0x160(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                GuardBlockKnockbackMultiplier;                     // 0x170(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                GuardParryKnockbackMultiplier;                     // 0x180(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                GlobalDamageBlockingProtection;                    // 0x190(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                GlobalStaminaBlockingProtection;                   // 0x1A0(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGuardAttributeSet* GetDefaultObj();

};

// 0x70 (0xA0 - 0x30)
// Class LOTF2.GuardResistanceAttributeSet
class UGuardResistanceAttributeSet : public UAttributeSet
{
public:
	struct FGameplayAttributeData                GuardResistanceBleed;                              // 0x30(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                GuardResistancePoison;                             // 0x40(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                GuardResistanceWither;                             // 0x50(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                GuardResistanceFrostbite;                          // 0x60(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                GuardResistanceSmite;                              // 0x70(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                GuardResistanceBurn;                               // 0x80(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                GuardResistanceIgnite;                             // 0x90(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGuardResistanceAttributeSet* GetDefaultObj();

};

// 0xD8 (0x100 - 0x28)
// Class LOTF2.HeadShapeDataListEntry
class UHeadShapeDataListEntry : public UObject
{
public:
	int32                                        Index;                                             // 0x28(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ECustomizationCategory            CustomizationShape;                                // 0x2C(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E6C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FHeadShape                            HeadShape;                                         // 0x30(0xA8)(BlueprintVisible, NativeAccessSpecifierPublic)
	struct FUIShapeData                          UIShape;                                           // 0xD8(0x28)(BlueprintVisible, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UHeadShapeDataListEntry* GetDefaultObj();

};

// 0x138 (0x6E0 - 0x5A8)
// Class LOTF2.HeadCustomizationScreenWidget
class UHeadCustomizationScreenWidget : public UCustomizationScreenWidget
{
public:
	struct FGameplayTag                          ClassSelectionScreen;                              // 0x5A8(0x8)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHeadShapeData*                        HeadShapeData;                                     // 0x5B0(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBodyShapeData*                        BodyShapeData;                                     // 0x5B8(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHexListView*                          Presets_Head_Left;                                 // 0x5C0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHexListView*                          Presets_Head_Top;                                  // 0x5C8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHexListView*                          Presets_Head_Right;                                // 0x5D0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UScrollBox*                            ScrollBox_Features;                                // 0x5D8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTitleShapePreviewWidget*              Title_ShapeHead;                                   // 0x5E0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Container;                                         // 0x5E8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                          Container_Selectors;                               // 0x5F0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHeadShapeSliderWidget*                General_HeadShape;                                 // 0x5F8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCharCreationCameraWidget*             CameraWidget;                                      // 0x600(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<enum class EHeadPresetLocation, struct FHeadShape> SelectedHeads;                                     // 0x608(0x50)(Protected, NativeAccessSpecifierProtected)
	TMap<enum class EHeadPresetLocation, struct FHeadShape> FeatureSelectedHeads;                              // 0x658(0x50)(Protected, NativeAccessSpecifierProtected)
	enum class EHeadPresetLocation               HeadToEdit;                                        // 0x6A8(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ECustomizationCategory            CurrentEditFeature;                                // 0x6A9(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2E6F[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UOptionSelectorBaseWidget*>     OptionSelectors;                                   // 0x6B0(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class ALOTF2Character*                       PlayerCharacter;                                   // 0x6C0(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2E70[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHeadCustomizationScreenWidget* GetDefaultObj();

	void UpdateFeatureSlider(enum class ECustomizationCategory Category);
	void UpdateCustomizationOptions();
	void RefreshHeadPresets();
	class UUserWidget* OnSwitchHeadColumn(class UHexListView* From, class UHexListView* To);
	void OnShapeSelected(const class FString& SelectedShapeName, enum class ECustomizationCategory Category, enum class EHeadPresetLocation Location);
	void OnRequestEditHead(enum class ECustomizationCategory Category, bool bShowPanel);
	void OnLockFeature();
	void OnFeatureSelected(enum class ECustomizationCategory SelectedFeature);
	void OnCinematicEnd();
	int32 GetSelectedIndex(class UHexListView* ListView);
	void BP_StopShapeCustomization();
};

// 0x748 (0xA10 - 0x2C8)
// Class LOTF2.HeadFeatureSlider
class UHeadFeatureSlider : public UCustomizationUserWidget
{
public:
	FMulticastInlineDelegateProperty_            OnCaptureBegin;                                    // 0x2C8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCaptureEnd;                                      // 0x2D8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UThreeValueSliderWidget*               HeadShapeSlider;                                   // 0x2E8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSelected;                                         // 0x2F0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2E77[0x22F];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	struct FThreeValueSliderStyle                SliderStyle;                                       // 0x520(0x4F0)(Transient, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UHeadFeatureSlider* GetDefaultObj();

	void ShowSlider(bool bShow);
	void SetSliderFocus();
	void OnInputCaptureEnd();
	void OnInputCaptureBegin();
	void OnAllValuesChanged();
};

// 0x178 (0x720 - 0x5A8)
// Class LOTF2.HeadFeaturesScreenWidget
class UHeadFeaturesScreenWidget : public UCustomizationScreenWidget
{
public:
	class UHeadShapeData*                        HeadShapeData;                                     // 0x5A8(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBodyShapeData*                        BodyShapeData;                                     // 0x5B0(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHexTileView*                          Grid_Presets;                                      // 0x5B8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTitleShapePreviewWidget*              Title_ShapeHead;                                   // 0x5C0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Container;                                         // 0x5C8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                          Container_Selectors;                               // 0x5D0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCharCreationCameraWidget*             CameraWidget;                                      // 0x5D8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               SocketWidgetClass;                                 // 0x5E0(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<enum class EHeadPresetLocation, struct FHeadShape> SelectedHeads;                                     // 0x5E8(0x50)(Protected, NativeAccessSpecifierProtected)
	TMap<enum class EHeadPresetLocation, struct FHeadShape> FeatureSelectedHeads;                              // 0x638(0x50)(Protected, NativeAccessSpecifierProtected)
	enum class EHeadPresetLocation               HeadToEdit;                                        // 0x688(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ECustomizationCategory            CurrentEditFeature;                                // 0x689(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2E81[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class ECustomizationCategory, struct FBoneWidgetArray> HeadBones;                                         // 0x690(0x50)(Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class UOptionSelectorBaseWidget*>     OptionSelectors;                                   // 0x6E0(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class ALOTF2Character*                       PlayerCharacter;                                   // 0x6F0(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHeadFeatureSlider*                    CurrentFeatureSlider;                              // 0x6F8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2E82[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHeadFeaturesScreenWidget* GetDefaultObj();

	void UpdateFeatureSlider(enum class ECustomizationCategory Category);
	void UpdateCustomizationOptions();
	void RefreshHeadPresets(const class FString& SelectedOption);
	void OnShapeSelected(const class FString& SelectedShapeName, enum class ECustomizationCategory Category, enum class EHeadPresetLocation Location);
	void OnSelectCustomFeature();
	void OnRequestEditHead(enum class ECustomizationCategory Category, bool bShowPanel, const class FString& SelectedOption);
	void OnLockFeature();
	void OnInputCaptureEnd(class UHeadFeatureSlider* Widget);
	void OnInputCaptureBegin(class UHeadFeatureSlider* Widget);
	void OnHeadShapeSliderInputBegin();
	void OnFineTuneFeature();
	void OnFeatureSelected(enum class ECustomizationCategory SelectedFeature);
	void OnCameraMoveEnd();
	void OnCameraMoveBegin();
	void BP_StopShapeCustomization();
};

// 0x20 (0x360 - 0x340)
// Class LOTF2.HeadPresetSelectorWidget
class UHeadPresetSelectorWidget : public UOptionSelectorBaseWidget
{
public:
	TSubclassOf<class UHeadPresetWidget>         ShapePresetClass;                                  // 0x340(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHeadShapeData*                        HeadShapeData;                                     // 0x348(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FHeadShape>                    HeadMorphs;                                        // 0x350(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UHeadPresetSelectorWidget* GetDefaultObj();

};

// 0xC0 (0x378 - 0x2B8)
// Class LOTF2.HeadPresetWidget
class UHeadPresetWidget : public ULOTF2UserWidget
{
public:
	uint8                                        Pad_2E83[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UImage*                                Preview_Image;                                     // 0x2C0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                      Text_Name;                                         // 0x2C8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FHeadShape                            ShapeData;                                         // 0x2D0(0xA8)(BlueprintVisible, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UHeadPresetWidget* GetDefaultObj();

	void SetSelected(bool bSelected);
	void SetFocused(bool bSelected);
};

// 0x60 (0x90 - 0x30)
// Class LOTF2.HeadShapeData
class UHeadShapeData : public UDataAsset
{
public:
	TMap<enum class ECustomizationCategory, struct FBoneNameArray> HeadBones;                                         // 0x30(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<struct FHeadShape>                    HeadMorphs;                                        // 0x80(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UHeadShapeData* GetDefaultObj();

};

// 0x778 (0xA40 - 0x2C8)
// Class LOTF2.HeadShapeSliderWidget
class UHeadShapeSliderWidget : public UCustomizationUserWidget
{
public:
	FMulticastInlineDelegateProperty_            OnRequestChangeHeadPreset;                         // 0x2C8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRequestEditHead;                                 // 0x2D8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	class UHeadShapeData*                        HeadShapeData;                                     // 0x2E8(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UThreeValueSliderWidget*               HeadShapeSlider;                                   // 0x2F0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHeadPresetWidget*                     Top_Head;                                          // 0x2F8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHeadPresetWidget*                     Left_Head;                                         // 0x300(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHeadPresetWidget*                     Right_Head;                                        // 0x308(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonNumericTextBlock*               TopHead_Value;                                     // 0x310(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonNumericTextBlock*               LeftHead_Value;                                    // 0x318(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonNumericTextBlock*               RightHead_Value;                                   // 0x320(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2E84[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FThreeValueSliderStyle                SliderStyle;                                       // 0x330(0x4F0)(Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2E85[0x218];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bWarningPopupVisible;                              // 0xA38(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2E86[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHeadShapeSliderWidget* GetDefaultObj();

	void ResetHeadCustomization(bool bReset);
	void OnBodyTypeChanged(enum class ECharacterBodyType bodyType);
	void OnAllValuesChanged();
	void BP_ShowWarningPopup();
};

// 0xB8 (0x168 - 0xB0)
// Class LOTF2.HealthComponent
class UHealthComponent : public UActorComponent
{
public:
	float                                        RequiredDamageLevel;                               // 0xB0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InitialHealth;                                     // 0xB4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnDeath;                                           // 0xB8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E97[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnRevive;                                          // 0xE0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTakeDamage;                                      // 0xF0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnHealthChanged;                                   // 0x100(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnMaxHealthChanged;                                // 0x110(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnHealthProvisialDamageChanged;                    // 0x120(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                        SoulflyNoiseLoudness;                              // 0x130(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          SoulflyGameplayEventTag;                           // 0x134(0x8)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2E98[0x24];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UHexDamageExecutionResult*             DamageExecutionResult;                             // 0x160(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UHealthComponent* GetDefaultObj();

	float TakeDamage(class AActor* DamagedActor, float Damage, struct FDamageEvent& DamageEvent, class AController* InstigatedBy, class AActor* DamageCauser);
	void Revive(bool RestoreHealth);
	void OnTakeDamageEvent(float Damage, const struct FGameplayTagContainer& AllAssetTags, class AActor* InstigatedBy, class AActor* DamageCauser, enum class EHexAttackTypeEffectivenes AttackTypeEffectiveness);
	void Multicast_FireDeathEvent(class AActor* InstigatorActor, struct FGameplayTagContainer& InstigatorTags, bool bDeathWasObserved);
	void KillOwner(class AActor* Instigator, class AActor* DamageCauser, struct FGameplayTag& DeathReason);
	bool IsFullHealth();
	bool IsDead();
	void Heal(float Health, bool bOverheal);
	float GetMaxHealth();
	float GetHealthPercentage();
	float GetCurrentHealthProvisionalDamage();
	float GetCurrentHealth();
};

// 0x0 (0x28 - 0x28)
// Class LOTF2.HealthComponentInterface
class IHealthComponentInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IHealthComponentInterface* GetDefaultObj();

};

// 0x18 (0x4F0 - 0x4D8)
// Class LOTF2.ItemUpgradeWidgetBase
class UItemUpgradeWidgetBase : public UHexActivatableWidget
{
public:
	TSubclassOf<class UItemData>                 ItemToUpgrade;                                     // 0x4D8(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                      Text_LeftDescription;                              // 0x4E0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                      Text_RightDescription;                             // 0x4E8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UItemUpgradeWidgetBase* GetDefaultObj();

	void UpdatePlayerAmount(class FText* PlayerAmount, bool* bCanUpgrade);
	void UpdateItemInfo();
	void UpdateItemCost(class FText* ItemCost);
	void OnStartUpgradeItem();
	void OnCancelPressed();
	TMap<TSubclassOf<class UUpgradeMaterialItemData>, struct FPerLevelUpgradeCurveDefinition> GetItemCost();
	class UTexture2D* FindUpgradeMaterialIcon();
	class UInventoryItem* FindItemInInventory();
};

// 0x0 (0x4F0 - 0x4F0)
// Class LOTF2.HealthPotionUpgradeWidget
class UHealthPotionUpgradeWidget : public UItemUpgradeWidgetBase
{
public:

	static class UClass* StaticClass();
	static class UHealthPotionUpgradeWidget* GetDefaultObj();

};

// 0x0 (0x298 - 0x298)
// Class LOTF2.HexAbilitySystemGlobals
class UHexAbilitySystemGlobals : public UAbilitySystemGlobals
{
public:

	static class UClass* StaticClass();
	static class UHexAbilitySystemGlobals* GetDefaultObj();

};

// 0xA0 (0x120 - 0x80)
// Class LOTF2.HexAbilityTask_AIFlyMovement
class UHexAbilityTask_AIFlyMovement : public UAbilityTask
{
public:
	FMulticastInlineDelegateProperty_            OnCompleted;                                       // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E9A[0x90];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexAbilityTask_AIFlyMovement* GetDefaultObj();

	class UHexAbilityTask_AIFlyMovement* CreateAIFlyMovementTask(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, struct FFlyTaskParams& FlyTaskParams);
};

// 0x38 (0xB8 - 0x80)
// Class LOTF2.HexAbilityTask_WaitSimpleTargetData
class UHexAbilityTask_WaitSimpleTargetData : public UAbilityTask
{
public:
	FMulticastInlineDelegateProperty_            OnValidData;                                       // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCancelled;                                       // 0x90(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E9E[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexAbilityTask_WaitSimpleTargetData* GetDefaultObj();

	class UHexAbilityTask_WaitSimpleTargetData* WaitSimpleTargetData(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, enum class EGameplayTargetingConfirmation ConfirmationType, bool bSendTargetDataToServer);
	void OnTargetDataReplicatedCancelledCallback();
	void OnTargetDataReplicatedCallback(struct FGameplayAbilityTargetDataHandle& Data, const struct FGameplayTag& ActivationTag);
	void OnTargetDataReadyCallback(struct FGameplayAbilityTargetDataHandle& Data);
	void OnTargetDataCancelledCallback(struct FGameplayAbilityTargetDataHandle& Data);
	void ConfirmTargetingWithNoData();
	void ConfirmTargeting(const struct FGameplayAbilityTargetDataHandle& TargetDataHandle);
	void CancelTargeting();
};

// 0x18 (0x48 - 0x30)
// Class LOTF2.HexAIAlertOthersAbilitySettings
class UHexAIAlertOthersAbilitySettings : public UPrimaryDataAsset
{
public:
	enum class EAlertType                        AlertType;                                         // 0x30(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         SkipCollisionCheck;                                // 0x31(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         UseDefaultAlertRadius;                             // 0x32(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E9F[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AlertRangeHeight;                                  // 0x34(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AlertCenterOffset;                                 // 0x38(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AlertRadius;                                       // 0x3C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DebugAlerting;                                     // 0x40(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2EA0[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexAIAlertOthersAbilitySettings* GetDefaultObj();

};

// 0x8 (0x450 - 0x448)
// Class LOTF2.HexAIAlertOthersBase
class UHexAIAlertOthersBase : public UAnathemaGameplayAbility
{
public:
	class UHexAIAlertOthersAbilitySettings*      AlertAbilitySettings;                              // 0x448(0x8)(Edit, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UHexAIAlertOthersBase* GetDefaultObj();

};

// 0x0 (0x450 - 0x450)
// Class LOTF2.HexAIAlertOthersOnCombat
class UHexAIAlertOthersOnCombat : public UHexAIAlertOthersBase
{
public:

	static class UClass* StaticClass();
	static class UHexAIAlertOthersOnCombat* GetDefaultObj();

};

// 0x0 (0x450 - 0x450)
// Class LOTF2.HexAIAlertOthersOnEvent
class UHexAIAlertOthersOnEvent : public UHexAIAlertOthersBase
{
public:

	static class UClass* StaticClass();
	static class UHexAIAlertOthersOnEvent* GetDefaultObj();

};

// 0x40 (0xA8 - 0x68)
// Class LOTF2.HexApproachAbilityPayloadData
class UHexApproachAbilityPayloadData : public UHexAIMovementAbilityPayloadData
{
public:
	uint8                                        Pad_2EAE[0x40];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexApproachAbilityPayloadData* GetDefaultObj();

};

// 0x18 (0x478 - 0x460)
// Class LOTF2.HexAIApproachTargetAbility
class UHexAIApproachTargetAbility : public UHexAIMovementAbilityBase
{
public:
	class UHexAITask_MoveTo*                     PMoveToAITask;                                     // 0x460(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                          MovementMontage;                                   // 0x468(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2EB0[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexAIApproachTargetAbility* GetDefaultObj();

	void OnTargetSystemTargetChanged(class AActor* NewTarget);
	void OnTargetReached();
	void OnMoveRequestFailed();
	void OnMoveFinished(enum class EPathFollowingResult Result, class AAIController* AIController);
};

// 0x50 (0x100 - 0xB0)
// Class LOTF2.HexAIBodyDriverComponent
class UHexAIBodyDriverComponent : public UActorComponent
{
public:
	float                                        TimeToMaintainLastMovementInput;                   // 0xB0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2EB1[0x4C];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexAIBodyDriverComponent* GetDefaultObj();

	void OnTickPassedWithoutMovement();
	void OnPrepareNextTickTimer();
	void OnMovementFullyFinished();
};

// 0x420 (0x1340 - 0xF20)
// Class LOTF2.LordsMovementComponent
class ULordsMovementComponent : public UCharacterMovementComponent
{
public:
	uint8                                        Pad_2EB5[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bEnableSoftCapsuleRepulsion : 1;                   // Mask: 0x1, PropSize: 0x10xF48(0x1)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_244 : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_2EB6[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CapsuleDepenetrationSpeed;                         // 0xF4C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinCapsuleTraversingSpeed;                         // 0xF50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxCapsuleTraversingAdditionalSpeed;               // 0xF54(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanBeMovedByCollisionPenetration;                 // 0xF58(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2EB7[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USoftRepulsionCapsuleComponent*        StuckInsideThisSoftCapsule;                        // 0xF60(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2EB8[0x3D8];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ULordsMovementComponent* GetDefaultObj();

	void RemoveCanBePushedBySoftCapsulesOverride(class FName ID, bool bChecked);
	void OnCheckForNavLocationTimerFinished();
	bool ContainsCanBePushedBySoftCapsulesOverride(class FName ID);
	void AddCanBePushedBySoftCapsulesOverride(bool bCanBePushedBySoftCapsules, class FName ID, int32 Priority);
};

// 0x50 (0x1390 - 0x1340)
// Class LOTF2.HexAICharacterMovementComponent
class UHexAICharacterMovementComponent : public ULordsMovementComponent
{
public:
	uint8                                        Pad_2EB9[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexAICharacterMovementComponent* GetDefaultObj();

};

// 0x0 (0x468 - 0x468)
// Class LOTF2.HexAIComboAbility
class UHexAIComboAbility : public UAIAttackAbility
{
public:

	static class UClass* StaticClass();
	static class UHexAIComboAbility* GetDefaultObj();

};

// 0x18 (0xC8 - 0xB0)
// Class LOTF2.HexAIDamageGaugeComponent
class UHexAIDamageGaugeComponent : public UActorComponent
{
public:
	uint8                                        Pad_2EBA[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexAIDamageGaugeComponent* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class LOTF2.HexAIESPTargetInterface
class IHexAIESPTargetInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IHexAIESPTargetInterface* GetDefaultObj();

};

// 0x0 (0x448 - 0x448)
// Class LOTF2.HexAIForcedReactionAbility
class UHexAIForcedReactionAbility : public UAnathemaGameplayAbility
{
public:

	static class UClass* StaticClass();
	static class UHexAIForcedReactionAbility* GetDefaultObj();

};

// 0x50 (0x100 - 0xB0)
// Class LOTF2.HexAIGameplayEventHistoryComponent
class UHexAIGameplayEventHistoryComponent : public UActorComponent
{
public:
	TMap<struct FGameplayTag, float>             GameplayEventHeldHistory;                          // 0xB0(0x50)(NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UHexAIGameplayEventHistoryComponent* GetDefaultObj();

};

// 0x50 (0x100 - 0xB0)
// Class LOTF2.HexAIMovementAbilityHelperComponent
class UHexAIMovementAbilityHelperComponent : public UActorComponent
{
public:
	uint8                                        Pad_2EBC[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexAIMovementAbilityHelperComponent* GetDefaultObj();

};

// 0x18 (0xE0 - 0xC8)
// Class LOTF2.HexAIPerceptionStimuliSourceComponent
class UHexAIPerceptionStimuliSourceComponent : public UAIPerceptionStimuliSourceComponent
{
public:
	class UAIPerceptionComponent*                OwnerAIPerceptionComponent;                        // 0xC8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2EC4[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexAIPerceptionStimuliSourceComponent* GetDefaultObj();

	void RegisterSenses();
	void OnStateEnd(struct FGameplayTagContainer& StateChangePayload, class UHexStateTreeComponent* OwnerStateTreeComponent);
	void OnStateBegin(struct FGameplayTagContainer& StateChangePayload, class UHexStateTreeComponent* OwnerStateTreeComponent);
};

// 0x18 (0x460 - 0x448)
// Class LOTF2.HexAIReceiveAlert
class UHexAIReceiveAlert : public UAnathemaGameplayAbility
{
public:
	bool                                         bDebugAlerting;                                    // 0x448(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2EC7[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MinDelay;                                          // 0x44C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxDelay;                                          // 0x450(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2EC8[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexAIReceiveAlert* GetDefaultObj();

};

// 0x18 (0x60 - 0x48)
// Class LOTF2.HexAISenseConfig_ESP
class UHexAISenseConfig_ESP : public UAISenseConfig
{
public:
	TSubclassOf<class UHexAISense_ESP>           Implementation;                                    // 0x48(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, NoClear, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ESPRadius;                                         // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAISenseAffiliationFilter             DetectionByAffiliation;                            // 0x54(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	float                                        AutoSuccessRangeFromLastSensedLocation;            // 0x58(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2ECA[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexAISenseConfig_ESP* GetDefaultObj();

};

// 0x100 (0x148 - 0x48)
// Class LOTF2.HexAISenseConfig_Sight
class UHexAISenseConfig_Sight : public UAISenseConfig
{
public:
	TSubclassOf<class UHexAISense_Sight>         Implementation;                                    // 0x48(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, NoClear, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SightRadius;                                       // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LoseSightRadius;                                   // 0x54(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PeripheralVisionAngleDegrees;                      // 0x58(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VerticalVisionAngleDegrees;                        // 0x5C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAISenseAffiliationFilter             DetectionByAffiliation;                            // 0x60(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	float                                        AutoSuccessRangeFromLastSeenLocation;              // 0x64(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PointOfViewBackwardOffset;                         // 0x68(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NearClippingRadius;                                // 0x6C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2ECB[0xD8];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexAISenseConfig_Sight* GetDefaultObj();

};

// 0xE8 (0x168 - 0x80)
// Class LOTF2.HexAISense_ESP
class UHexAISense_ESP : public UAISense
{
public:
	uint8                                        Pad_2ECC[0xC8];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MaxTracesPerTick;                                  // 0x148(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MinQueriesPerTimeSliceCheck;                       // 0x14C(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	double                                       MaxTimeSlicePerTick;                               // 0x150(0x8)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2ECD[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxQueryImportance;                                // 0x15C(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ESPLimitQueryImportance;                           // 0x160(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2ECE[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexAISense_ESP* GetDefaultObj();

};

// 0x40 (0x128 - 0xE8)
// Class LOTF2.HexAISense_Hearing
class UHexAISense_Hearing : public UAISense_Hearing
{
public:
	struct FHexAINoiseEvent                      HexEvent;                                          // 0xE8(0x40)(Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UHexAISense_Hearing* GetDefaultObj();

	void ReportHexNoiseEvent(class UObject* WorldContextObject, const struct FVector& NoiseLocation, float Loudness, class AActor* Instigator, float MaxRange, class FName Tag);
};

// 0xF0 (0x170 - 0x80)
// Class LOTF2.HexAISense_Sight
class UHexAISense_Sight : public UAISense
{
public:
	uint8                                        Pad_2ED1[0xC8];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MaxTracesPerTick;                                  // 0x148(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MinQueriesPerTimeSliceCheck;                       // 0x14C(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	double                                       MaxTimeSlicePerTick;                               // 0x150(0x8)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HighImportanceQueryDistanceThreshold;              // 0x158(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2ED2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxQueryImportance;                                // 0x160(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SightLimitQueryImportance;                         // 0x164(0x4)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2ED3[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexAISense_Sight* GetDefaultObj();

};

// 0xD0 (0x108 - 0x38)
// Class LOTF2.HexAISettings
class UHexAISettings : public UHexDeveloperSettings
{
public:
	class FName                                  AxiomObstaclesProfileName;                         // 0x38(0x8)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  UmbralObstaclesProfileName;                        // 0x40(0x8)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  UmbralSmallStructureProfileName;                   // 0x48(0x8)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  AxiomLOSProfileName;                               // 0x50(0x8)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  UmbralLOSProfileName;                              // 0x58(0x8)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UCurveFloat>            ObstacleOrNavEdgeMinDistanceCurve;                 // 0x60(0x30)(Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        ObstacleOrNavEdgeMinDistanceDefault;               // 0x90(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2ED4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<float>                                DistancesToCheckInCardinalDirections;              // 0x98(0x10)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPrivate)
	float                                        CheckForSpaceAroundAI_Rate;                        // 0xA8(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        CheckForObstaclesAroundAI_Rate;                    // 0xAC(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        DefaultObstacleMask;                               // 0xB0(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2ED5[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DestructibleReactionDistance;                      // 0xB4(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        WalkOffLedgesPerchRadius;                          // 0xB8(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        MinNavLinkHeight;                                  // 0xBC(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          IdleStateTag;                                      // 0xC0(0x8)(Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          CautionStateTag;                                   // 0xC8(0x8)(Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          FoundStateTag;                                     // 0xD0(0x8)(Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          CombatStateTag;                                    // 0xD8(0x8)(Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          NotFlyingStateTag;                                 // 0xE0(0x8)(Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          FlyingStateTag;                                    // 0xE8(0x8)(Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  LookAtSocketName;                                  // 0xF0(0x8)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class FString>                        PathsToAIDataAssets;                               // 0xF8(0x10)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UHexAISettings* GetDefaultObj();

};

// 0x8 (0x120 - 0x118)
// Class LOTF2.HexAITask_MoveTo
class UHexAITask_MoveTo : public UAITask_MoveTo
{
public:
	uint8                                        Pad_2ED6[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexAITask_MoveTo* GetDefaultObj();

};

// 0x50 (0xA8 - 0x58)
// Class LOTF2.HexTurnToTargetPayload
class UHexTurnToTargetPayload : public UHexBaseAbilityPayloadData
{
public:
	uint8                                        Pad_2ED7[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexTurnToTargetPayload* GetDefaultObj();

};

// 0x0 (0x448 - 0x448)
// Class LOTF2.HexAITurnAbility
class UHexAITurnAbility : public UAnathemaGameplayAbility
{
public:

	static class UClass* StaticClass();
	static class UHexAITurnAbility* GetDefaultObj();

	void OnWaitFacingTargetCompleted();
	void OnMontageCompleted(enum class EOnMontageDoneReason Reason);
};

// 0x0 (0x28 - 0x28)
// Class LOTF2.HexAkGameplayStatics
class UHexAkGameplayStatics : public UAkGameplayStatics
{
public:

	static class UClass* StaticClass();
	static class UHexAkGameplayStatics* GetDefaultObj();

	int32 PostEventWithSubtitles(class UObject* WorldContextObject, class UAkAudioEvent* AkEvent, class AActor* Actor, int32 CallbackMask, FDelegateProperty_& PostEventCallback, TArray<struct FAkExternalSourceInfo>& ExternalSources, bool bStopWhenAttachedToDestroyed, const class FString& EventName);
};

// 0x0 (0xA0 - 0xA0)
// Class LOTF2.HexANS_FacingCorrectionTarget
class UHexANS_FacingCorrectionTarget : public UAnimNotifyState_BaseConditionalTag
{
public:

	static class UClass* StaticClass();
	static class UHexANS_FacingCorrectionTarget* GetDefaultObj();

};

// 0x0 (0x98 - 0x98)
// Class LOTF2.HexAN_ComboStartMark
class UHexAN_ComboStartMark : public UAnimNotify_BaseConditionalTag
{
public:

	static class UClass* StaticClass();
	static class UHexAN_ComboStartMark* GetDefaultObj();

};

// 0x0 (0x4E8 - 0x4E8)
// Class LOTF2.HexAssetManager
class UHexAssetManager : public UAssetManager
{
public:

	static class UClass* StaticClass();
	static class UHexAssetManager* GetDefaultObj();

};

// 0xF0 (0x120 - 0x30)
// Class LOTF2.HexAutonomousAbilitiesSubsystem
class UHexAutonomousAbilitiesSubsystem : public UWorldSubsystem
{
public:
	TMap<struct FGameplayTag, class UUsedActors*> SharedOverlapActorsByGameplayTag;                  // 0x30(0x50)(NativeAccessSpecifierPublic)
	TMap<class USubAutonomousAbilityData*, class UUsedActors*> SharedOverlapActorsBySubAutonomousAbilityData;     // 0x80(0x50)(NativeAccessSpecifierPublic)
	uint8                                        Pad_2EE0[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexAutonomousAbilitiesSubsystem* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class LOTF2.HexAWSServiceBase
class UHexAWSServiceBase : public UObject
{
public:
	class UHexAWSRequest*                        AWSRequest;                                        // 0x28(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UHexAWSServiceBase* GetDefaultObj();

};

// 0x1B8 (0x1E8 - 0x30)
// Class LOTF2.HexAWSCommunityGoals
class UHexAWSCommunityGoals : public UHexAWSServiceBase
{
public:
	uint8                                        Pad_2EE3[0x1B8];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexAWSCommunityGoals* GetDefaultObj();

};

// 0x8 (0x38 - 0x30)
// Class LOTF2.HexAWSReporting
class UHexAWSReporting : public UHexAWSServiceBase
{
public:
	uint8                                        Pad_2EE4[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexAWSReporting* GetDefaultObj();

};

// 0x30 (0x58 - 0x28)
// Class LOTF2.HexAWSRequest
class UHexAWSRequest : public UObject
{
public:
	uint8                                        Pad_2EE5[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexAWSRequest* GetDefaultObj();

};

// 0x60 (0x90 - 0x30)
// Class LOTF2.HexAWSRevenge
class UHexAWSRevenge : public UHexAWSServiceBase
{
public:
	uint8                                        Pad_2EE7[0x60];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexAWSRevenge* GetDefaultObj();

};

// 0x28 (0x58 - 0x30)
// Class LOTF2.HexAWSServices
class UHexAWSServices : public UGameInstanceSubsystem
{
public:
	class UHexAWSRequest*                        AWSRequest;                                        // 0x30(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHexAWSCommunityGoals*                 AWSCommunityGoals;                                 // 0x38(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHexAWSRevenge*                        AWSRevenge;                                        // 0x40(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHexAWSTracking*                       AWSTracking;                                       // 0x48(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHexAWSReporting*                      AWSReporting;                                      // 0x50(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UHexAWSServices* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class LOTF2.HexAWSTracking
class UHexAWSTracking : public UHexAWSServiceBase
{
public:

	static class UClass* StaticClass();
	static class UHexAWSTracking* GetDefaultObj();

};

// 0x80 (0x130 - 0xB0)
// Class LOTF2.HexEnvironmentalAwarenessComponent
class UHexEnvironmentalAwarenessComponent : public UActorComponent
{
public:
	uint8                                        Pad_2EF0[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AAIController*                         OwnerController;                                   // 0xE8(0x8)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ABaseAICharacter*                      OwnerCharacter;                                    // 0xF0(0x8)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWorld*                                OwnerWorld;                                        // 0xF8(0x8)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2EF2[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexEnvironmentalAwarenessComponent* GetDefaultObj();

	void OnStateEnd(struct FGameplayTagContainer& StateChangePayload, class UHexStateTreeComponent* OwnerStateTreeComponent);
	void OnStateBegin(struct FGameplayTagContainer& StateChangePayload, class UHexStateTreeComponent* OwnerStateTreeComponent);
};

// 0x0 (0x1B8 - 0x1B8)
// Class LOTF2.HexBaseBlackboardComponent
class UHexBaseBlackboardComponent : public UBlackboardComponent
{
public:

	static class UClass* StaticClass();
	static class UHexBaseBlackboardComponent* GetDefaultObj();

	struct FHexNavLinkInfo GetValueAsNavLinkInfo(class FName& KeyName);
};

// 0x30 (0x9E0 - 0x9B0)
// Class LOTF2.HexBaseCameraActor
class AHexBaseCameraActor : public ACameraActor
{
public:
	class UHexCameraSpringArmComponent*          CameraBoom;                                        // 0x9B0(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHexCameraTransitionsComponent*        CameraTransitionsComponent;                        // 0x9B8(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHexCameraSettings*                    CameraSettings;                                    // 0x9C0(0x8)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHexCameraSettings*                    RuntimeCameraSettings;                             // 0x9C8(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHexCameraStaticSettings*              CameraStaticSettings;                              // 0x9D0(0x8)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class APawn*                                 TargetPawn;                                        // 0x9D8(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AHexBaseCameraActor* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class LOTF2.HexBattleEffect
class UHexBattleEffect : public UPrimaryDataAsset
{
public:

	static class UClass* StaticClass();
	static class UHexBattleEffect* GetDefaultObj();

	struct FActiveGameplayEffectHandle ApplyBattleEffectWithParamsToActor(class AActor* PActor, const struct FHexBattleEffectIdentifier& BattleEffectIdentifier, const struct FHexBattleEffectParamsContainer& NewParams, class AActor* PApplierActor);
	struct FActiveGameplayEffectHandle ApplyBattleEffectWithParamsFromDefinition(class UAbilitySystemComponent* PASC, const struct FHexBattleEffectIdentifier& BattleEffectIdentifier, const struct FHexBattleEffectParamsContainer& NewParams, class AActor* PApplierActor, int32 battleEffectLevel, float DurationMultiplier);
	struct FActiveGameplayEffectHandle ApplyBattleEffectToActor(class AActor* PActor, const struct FHexBattleEffectIdentifier& BattleEffectIdentifier, class AActor* PApplierActor);
	TArray<struct FActiveGameplayEffectHandle> ApplyBattleEffectsContainerToActor(class AActor* PActor, const struct FHexBattleEffectIdentifierContainer& battleEffectsContainer, class AActor* PApplierActor);
	struct FActiveGameplayEffectHandle ApplyBattleEffectFromDefinition(class UAbilitySystemComponent* PASC, const struct FHexBattleEffectIdentifier& BattleEffectIdentifier, class AActor* PApplierActor, int32 battleEffectLevel, float DurationMultiplier);
};

// 0x60 (0x98 - 0x38)
// Class LOTF2.BattleEffectsSettings
class UBattleEffectsSettings : public UHexDeveloperSettings
{
public:
	TSoftObjectPtr<class UDataTable>             BattleEffectData;                                  // 0x38(0x30)(Edit, Config, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UDataTable>             BattleEffectTemplates;                             // 0x68(0x30)(Edit, Config, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UBattleEffectsSettings* GetDefaultObj();

	class UDataTable* GetBattleEffectTemplates();
	class UDataTable* GetBattleEffectData();
	TArray<class FString> GetAvailableBattleEffectIDs();
};

// 0x0 (0x30 - 0x30)
// Class LOTF2.HexBlackboardKeyType_NavLink
class UHexBlackboardKeyType_NavLink : public UBlackboardKeyType
{
public:

	static class UClass* StaticClass();
	static class UHexBlackboardKeyType_NavLink* GetDefaultObj();

};

// 0x2C8 (0x568 - 0x2A0)
// Class LOTF2.HexBossCombatEvent
class AHexBossCombatEvent : public AActor
{
public:
	class ACinematicPlayer*                      StartCombatCinematic;                              // 0x2A0(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ACinematicPlayer*                      EndCombatCinematic;                                // 0x2A8(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ACinematicPlayer*                      PlayerDiesCinematic;                               // 0x2B0(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ACinematicPlayer*                      GameplayEventCinematic;                            // 0x2B8(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          EndCombatStateTag;                                 // 0x2C0(0x8)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          PlayerDiesStateTag;                                // 0x2C8(0x8)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bBossInitiallyHidden;                              // 0x2D0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bBossInitiallyHiddenDontRestoreVisibilityOnStart;  // 0x2D1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F06[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UActorComponent>           BossComponentFromBP;                               // 0x2D8(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TSubclassOf<class UGameplayEffect>>   GEsToApplyOnDisable;                               // 0x2E0(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<TSubclassOf<class UGameplayEffect>>   GEsToApplyOnInitiallyHidden;                       // 0x2F0(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<TSubclassOf<class UGameplayEffect>>   GE_ToApplyToPlayers;                               // 0x300(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	class AHexBossCombatEvent*                   NexBossCombatEvent;                                // 0x310(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_            OnCombatEventEnded;                                // 0x318(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	TArray<TSoftObjectPtr<class ASimpleCharacterSpawner>> BossSpawners;                                      // 0x328(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<TSoftObjectPtr<class ALOTF2BossFogGate>> FogGates2;                                         // 0x338(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class ALOTF2BossFogGate>      FogGateToRespawn;                                  // 0x348(0x30)(Edit, BlueprintVisible, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TSoftObjectPtr<class AActor>>         Triggers;                                          // 0x378(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	struct FAnathemaQuery                        DontStartQuery;                                    // 0x388(0x50)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	TMap<TSoftObjectPtr<class ASimpleCharacterSpawner>, TSoftObjectPtr<class ASimpleCharacterSpawner>> NPCSummonSpawners;                                 // 0x3D8(0x50)(Edit, BlueprintVisible, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<TSoftObjectPtr<class ASimpleCharacterSpawner>> NPCForcedSummonSpawners;                           // 0x428(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TMap<struct FGameplayTag, struct FDataTableRowHandle> SpecialLootOnKillBossWithNPCHelpData;              // 0x438(0x50)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	bool                                         bHasSocialReward;                                  // 0x488(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F07[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                BossId;                                            // 0x490(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ESocialRewardType                 SocialRewardType;                                  // 0x4A0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F08[0x17];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCombatEventState                     CombatState;                                       // 0x4B8(0x10)(Net, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)
	TArray<TWeakObjectPtr<class ALOTF2Character>> SpawnedBossCharacters;                             // 0x4C8(0x10)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<TWeakObjectPtr<class ALOTF2Character>> NPCSumonInCombatCharacters;                        // 0x4D8(0x10)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<TWeakObjectPtr<class ASimpleCharacterSpawner>> NPCSumonSpawnersInCombatCharacters;                // 0x4E8(0x10)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<TWeakObjectPtr<class ALOTF2Character>> NPCSumonCharacters;                                // 0x4F8(0x10)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<TWeakObjectPtr<class ALOTF2Character>> SpawnedNPCHelperCharacters;                        // 0x508(0x10)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2F09[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AHexBossCombatEvent* GetDefaultObj();

	void TryToEnableCombatEvent(struct FGameplayTagContainer& QuestsDirectorTags);
	void TryToDisableCombatEvent(struct FGameplayTagContainer& QuestsDirectorTags);
	void StartCombatEventByTrigger(class AActor* OverlappedActor, class AActor* OtherActor);
	void StartCinematicEnded();
	void PlayStartCinematic();
	void PlayPlayerDieCinematic();
	void PlayerDieCinematicEnded();
	void PlayEndCinematic();
	void OnRep_CombatState(struct FCombatEventState* PrevCombatState);
	void OnNPCSummonSpawned(class ASimpleCharacterSpawner* Spawner, class ALOTF2Character* Character);
	void OnNPCHelperSpawned(class ASimpleCharacterSpawner* Spawner, class ALOTF2Character* Character);
	void OnHostPlayerDeath(class AActor* InstigatorActor, struct FGameplayTagContainer& InstigatorTags, bool bDeathWasObserved, class UHealthComponent* HealthComp);
	void OnDialogueSequenceStarted();
	void OnDialogueSequenceFinished(enum class EDialogueEndReason Reason);
	void OnDialogueAnswerSelected(enum class EAnswerType AnswerType);
	void OnBossSpawned(class ASimpleCharacterSpawner* Spawner, class ALOTF2Character* Character);
	void OnBossDeath(class AActor* InstigatorActor, struct FGameplayTagContainer& InstigatorTags, bool bDeathWasObserved);
	void MulticastShowBossDeathScreen(class ALOTF2Character* boss);
	void MulticastRewardCoopBossKill();
	class ALOTF2Character* GetSpawnedBoss(int32 Index);
	TArray<class ALOTF2Character*> GetAllSpawnedBosses();
	void EndCinematicEnded();
	void CombatEventEnded();
	void ClearCombatState();
	void BP_CombatStarted();
	void BP_CombatEventEnded();
	void AddNPCSumonSpawnerInCombatCharacter(class ASimpleCharacterSpawner* Spawner);
	void AddNPCSumonInCombatCharacter(class ALOTF2Character* NpcSummonSpawnedCharacter);
};

// 0x50 (0x308 - 0x2B8)
// Class LOTF2.HexButtonGroup
class UHexButtonGroup : public ULOTF2UserWidget
{
public:
	FMulticastInlineDelegateProperty_            OnIndexChanged;                                    // 0x2B8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnButtonGroupChanged;                              // 0x2C8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	enum class EUIExclusivity                    SelectionMethod;                                   // 0x2D8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F0D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CurrentIndex;                                      // 0x2DC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UFocusableButtonWidget*>        Buttons;                                           // 0x2E0(0x10)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class UFocusableButtonWidget*>        ManagedButtons;                                    // 0x2F0(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class UFocusableButtonWidget*                CurrentButton;                                     // 0x300(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UHexButtonGroup* GetDefaultObj();

	void UpdateCurrentIndex();
	void UpdateButtonCheckedStatus();
	void SetSelectionMethod(enum class EUIExclusivity SelectionMethod);
	void SetCurrentIndex(int32 Index, bool bBroadcast);
	void RemoveButtonAtIndex(int32 Index);
	bool RemoveButton(class UFocusableButtonWidget* buttonWidget);
	void RemoveAllButtons();
	void OnButtonPressed(class UFocusableButtonWidget* buttonWidget);
	enum class EUIExclusivity GetSelectionMethod();
	class UFocusableButtonWidget* GetSelectedButton();
	int32 GetCurrentIndex();
	TArray<class UFocusableButtonWidget*> GetButtons();
	int32 GetButtonCount();
	class UFocusableButtonWidget* GetButtonAtIndex(int32 Index);
	void AddButton(class UFocusableButtonWidget* buttonWidget);
};

// 0x8 (0x50 - 0x48)
// Class LOTF2.HexCameraModifier
class UHexCameraModifier : public UCameraModifier
{
public:
	float                                        CooldownAfterInteraction;                          // 0x48(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F0E[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexCameraModifier* GetDefaultObj();

};

// 0x100 (0x150 - 0x50)
// Class LOTF2.HexCameraModifierAdjustPitch
class UHexCameraModifierAdjustPitch : public UHexCameraModifier
{
public:
	uint8                                        Pad_2F0F[0x100];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexCameraModifierAdjustPitch* GetDefaultObj();

};

// 0x8 (0x58 - 0x50)
// Class LOTF2.HexCameraModifierApplySettings
class UHexCameraModifierApplySettings : public UHexCameraModifier
{
public:
	uint8                                        Pad_2F10[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexCameraModifierApplySettings* GetDefaultObj();

};

// 0x8 (0x58 - 0x50)
// Class LOTF2.HexCameraModifierCharacterDead
class UHexCameraModifierCharacterDead : public UHexCameraModifier
{
public:
	uint8                                        Pad_2F11[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexCameraModifierCharacterDead* GetDefaultObj();

};

// 0x18 (0x68 - 0x50)
// Class LOTF2.HexCameraModifierCloseCollision
class UHexCameraModifierCloseCollision : public UHexCameraModifier
{
public:
	uint8                                        Pad_2F13[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexCameraModifierCloseCollision* GetDefaultObj();

};

// 0x0 (0x50 - 0x50)
// Class LOTF2.HexCameraModifierDualRealm
class UHexCameraModifierDualRealm : public UHexCameraModifier
{
public:

	static class UClass* StaticClass();
	static class UHexCameraModifierDualRealm* GetDefaultObj();

};

// 0xF0 (0x140 - 0x50)
// Class LOTF2.HexCameraModifierFocusTarget
class UHexCameraModifierFocusTarget : public UHexCameraModifier
{
public:
	uint8                                        Pad_2F14[0xF0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexCameraModifierFocusTarget* GetDefaultObj();

};

// 0x110 (0x160 - 0x50)
// Class LOTF2.HexCameraModifierFollowCharacter
class UHexCameraModifierFollowCharacter : public UHexCameraModifier
{
public:
	uint8                                        Pad_2F15[0x110];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexCameraModifierFollowCharacter* GetDefaultObj();

};

// 0x18 (0x68 - 0x50)
// Class LOTF2.HexCameraModifierSetViewRotation
class UHexCameraModifierSetViewRotation : public UHexCameraModifier
{
public:
	uint8                                        Pad_2F16[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexCameraModifierSetViewRotation* GetDefaultObj();

};

// 0x18 (0x5A0 - 0x588)
// Class LOTF2.HexCameraModifierTriggerComponent
class UHexCameraModifierTriggerComponent : public UBoxComponent
{
public:
	struct FHexTransition                        Transition;                                        // 0x588(0x10)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2F1A[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexCameraModifierTriggerComponent* GetDefaultObj();

	void OnEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
};

// 0x18 (0x2F0 - 0x2D8)
// Class LOTF2.HexCameraModifierVolume
class AHexCameraModifierVolume : public ATriggerVolume
{
public:
	uint8                                        Pad_2F1B[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FHexTransition                        Transition;                                        // 0x2E0(0x10)(Edit, NoDestructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AHexCameraModifierVolume* GetDefaultObj();

};

// 0x8 (0x58 - 0x50)
// Class LOTF2.HexCameraModifierWater
class UHexCameraModifierWater : public UHexCameraModifier
{
public:
	TSubclassOf<class AActor>                    WaterActorClass;                                   // 0x50(0x8)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UHexCameraModifierWater* GetDefaultObj();

};

// 0x6D0 (0x700 - 0x30)
// Class LOTF2.HexCameraSettings
class UHexCameraSettings : public UDataAsset
{
public:
	struct FFloatSetting                         FOV;                                               // 0x30(0x48)(Edit, NativeAccessSpecifierPublic)
	struct FFloatSetting                         FOVOffset;                                         // 0x78(0x48)(Edit, NativeAccessSpecifierPublic)
	struct FFloatSetting                         ViewPitchMin;                                      // 0xC0(0x48)(Edit, NativeAccessSpecifierPublic)
	struct FFloatSetting                         ViewPitchMax;                                      // 0x108(0x48)(Edit, NativeAccessSpecifierPublic)
	struct FFloatSetting                         YawOffset;                                         // 0x150(0x48)(Edit, NativeAccessSpecifierPublic)
	struct FFloatSetting                         SpringArmLength;                                   // 0x198(0x48)(Edit, NativeAccessSpecifierPublic)
	struct FFloatSetting                         SpringArmLengthOffset;                             // 0x1E0(0x48)(Edit, NativeAccessSpecifierPublic)
	struct FFloatSetting                         CloseArmLength;                                    // 0x228(0x48)(Edit, NativeAccessSpecifierPublic)
	struct FVectorSetting                        BaseTargetOffset;                                  // 0x270(0x78)(Edit, NativeAccessSpecifierPublic)
	struct FVectorSetting                        TargetOffset;                                      // 0x2E8(0x78)(Edit, NativeAccessSpecifierPublic)
	struct FVectorSetting                        BaseSocketOffset;                                  // 0x360(0x78)(Edit, NativeAccessSpecifierPublic)
	struct FVectorSetting                        SocketOffset;                                      // 0x3D8(0x78)(Edit, NativeAccessSpecifierPublic)
	struct FFloatSetting                         CameraLagSpeed;                                    // 0x450(0x48)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FFloatSetting                         CameraRotationLagSpeed;                            // 0x498(0x48)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FFloatSetting                         CameraLagMaxDistance;                              // 0x4E0(0x48)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FFloatSetting                         CloseCollisionFOVOffset;                           // 0x528(0x48)(Edit, NativeAccessSpecifierPublic)
	struct FFloatSetting                         CloseCollisionHeightOffset;                        // 0x570(0x48)(Edit, NativeAccessSpecifierPublic)
	struct FVector2DSetting                      FocusCenterOffsetRatio;                            // 0x5B8(0x68)(Edit, NativeAccessSpecifierPublic)
	struct FVector2DSetting                      FocusAreaSizeRatio;                                // 0x620(0x68)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FBoolSetting                          bEnableFollowBehavior;                             // 0x688(0x28)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                   DistanceBasedOptionsHandle;                        // 0x6B0(0x10)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F1C[0x40];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexCameraSettings* GetDefaultObj();

};

// 0x218 (0x248 - 0x30)
// Class LOTF2.HexCameraStaticSettings
class UHexCameraStaticSettings : public UDataAsset
{
public:
	float                                        TurnRate;                                          // 0x30(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LookUpRate;                                        // 0x34(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LineOfSightProbeSize;                              // 0x38(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LocalCameraOffset;                                 // 0x3C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ArmLengthRecoveryTime;                             // 0x40(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ArmLengthApproachTime;                             // 0x44(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bEnableCameraLag : 1;                              // Mask: 0x1, PropSize: 0x10x48(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bEnableCameraRotationLag : 1;                      // Mask: 0x2, PropSize: 0x10x48(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_246 : 6;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_2F1D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SnapToTargetTime;                                  // 0x4C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MarginToEnterInLockOnArea;                         // 0x50(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FollowPitchOffset;                                 // 0x54(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FollowInterpolationTime;                           // 0x58(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FollowBehaviorCoolDown;                            // 0x5C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FollowBehaviorStrenghtTime;                        // 0x60(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFollowPitchMode                  FollowPitchMode;                                   // 0x64(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PitchAdjustmentMovingDelayTime;                    // 0x68(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PitchAdjustmentStillDelayTime;                     // 0x6C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PitchAdjustmentOffset;                             // 0x70(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PitchAdjustmentCoolDown;                           // 0x74(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PitchAdjustmentStrenghtTime;                       // 0x78(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxLookupYawAngleWhenDead;                         // 0x7C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CloseCollisionInterpolationTime;                   // 0x80(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AngleToConsiderCloseCollision;                     // 0x84(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HeightWaterOffsetCheck;                            // 0x88(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HeightWaterLocationOffset;                         // 0x8C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WaterTraceProbeSize;                               // 0x90(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxDistanceToLockOn;                               // 0x94(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             LockOnCenterOffsetRatio;                           // 0x98(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             LockOnAreaSizeRatio;                               // 0xA8(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bChangeTargetWidgetOpacityByDistance;              // 0xB8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F1E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MinTargetWidgetOpacity;                            // 0xBC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DistanceToStartFadingWidget;                       // 0xC0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bFadeWidgetWhenLosingTarget;                       // 0xC4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F1F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FadeWidgetTimeWhenLosingTarget;                    // 0xC8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxOpacityDecreaseWhenLosingTarget;                // 0xCC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeToCancelLockOn;                                // 0xD0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeToRemoveLockOnAfterKill;                       // 0xD4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AngleWeight;                                       // 0xD8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DistanceWeight;                                    // 0xDC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AutoSwitchMaxDistancePct;                          // 0xE0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F21[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UCurveFloat>            AngleCurve;                                        // 0xE8(0x30)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UCurveFloat>            DistanceCurve;                                     // 0x118(0x30)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LockOnDebugViewTargetHeight;                       // 0x148(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LockOnDebugViewDistanceStep;                       // 0x14C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SwitchTargetAngleWeight;                           // 0x150(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SwitchTargetDistanceWeight;                        // 0x154(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UCurveFloat>            SwitchTargetAngleCurve;                            // 0x158(0x30)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UCurveFloat>            SwitchTargetDistanceCurve;                         // 0x188(0x30)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HalfAngleToConsiderUpDirection;                    // 0x1B8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UpSwitchTargetAngleWeight;                         // 0x1BC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UpSwitchTargetDistanceWeight;                      // 0x1C0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F23[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UCurveFloat>            UpSwitchTargetAngleCurve;                          // 0x1C8(0x30)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UCurveFloat>            UpSwitchTargetDistanceCurve;                       // 0x1F8(0x30)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HalfAngleToLockDegrees;                            // 0x228(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UpHalfAngleToLockDegrees;                          // 0x22C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SwitchTargetDebugViewDistanceStep;                 // 0x230(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F24[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FColor>                        DebugColors;                                       // 0x238(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UHexCameraStaticSettings* GetDefaultObj();

};

// 0xE0 (0x490 - 0x3B0)
// Class LOTF2.HexCameraSpringArmComponent
class UHexCameraSpringArmComponent : public USpringArmComponent
{
public:
	uint8                                        Pad_2F25[0xE0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexCameraSpringArmComponent* GetDefaultObj();

};

// 0x110 (0x140 - 0x30)
// Class LOTF2.HexCameraTransition
class UHexCameraTransition : public UDataAsset
{
public:
	enum class ETransitionPriority               Priority;                                          // 0x30(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F26[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        LocalPriority;                                     // 0x34(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseEnterTransitionToExit;                         // 0x38(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F28[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FHexCameraTransitionData              OnEnterTransiton;                                  // 0x40(0x80)(Edit, NativeAccessSpecifierPublic)
	struct FHexCameraTransitionData              OnExitTransiton;                                   // 0xC0(0x80)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UHexCameraTransition* GetDefaultObj();

};

// 0x20 (0xD0 - 0xB0)
// Class LOTF2.HexCameraTransitionsComponent
class UHexCameraTransitionsComponent : public UActorComponent
{
public:
	class UHexCameraTransitionTags*              Transitions;                                       // 0xB0(0x8)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2F2A[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ALOTF2Character*                       PlayerOwner;                                       // 0xC8(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UHexCameraTransitionsComponent* GetDefaultObj();

};

// 0x50 (0x80 - 0x30)
// Class LOTF2.HexCameraTransitionTags
class UHexCameraTransitionTags : public UDataAsset
{
public:
	TMap<struct FGameplayTag, struct FHexTransition> CameraTransitions;                                 // 0x30(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UHexCameraTransitionTags* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class LOTF2.HexCanApplyGETypeInterface
class IHexCanApplyGETypeInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IHexCanApplyGETypeInterface* GetDefaultObj();

};

// 0x50 (0x78 - 0x28)
// Class LOTF2.HexCentripetalCatmullRomSpline
class UHexCentripetalCatmullRomSpline : public UObject
{
public:
	uint8                                        Pad_2F2B[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexCentripetalCatmullRomSpline* GetDefaultObj();

};

// 0x20 (0x3370 - 0x3350)
// Class LOTF2.HexCharacterCameraManager
class AHexCharacterCameraManager : public APlayerCameraManager
{
public:
	float                                        LineOfSightProbeSize;                              // 0x3350(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class ECollisionChannel                 LineOfSightProbeChannel;                           // 0x3354(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2F2C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AActor>                    DefaultCameraClass;                                // 0x3358(0x8)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AHexBaseCameraActor*                   DefaultCamera;                                     // 0x3360(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAnathemaComponent*                  AkComponentCameraEmitter;                          // 0x3368(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AHexCharacterCameraManager* GetDefaultObj();

	void SetViewTarget(class AActor* NewViewTarget, const struct FViewTargetTransitionParams& TransitionParams);
	void SetDefaultCamera();
	void ResetDefaultCamera();
	void ResetCurrentCamera();
	void OnCharacterIsSet(class APlayerCharacterController* PlayerController, class APlayerCharacter* PlayerCharacter, class APlayerCharacter* PrevPlayerCharacter);
	class AHexBaseCameraActor* GetDefaultCamera();
	void EnableModifiers(bool bEnable);
};

// 0x0 (0x28 - 0x28)
// Class LOTF2.HexCharacterDataInterface
class IHexCharacterDataInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IHexCharacterDataInterface* GetDefaultObj();

};

// 0x28 (0xD8 - 0xB0)
// Class LOTF2.HexSoulFlayComponent
class UHexSoulFlayComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnSoulFlayStarted;                                 // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSoulPullStarted;                                 // 0xC0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bDoesSoulflayCost;                                 // 0xD0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSoulFlayableOnlyByHost;                           // 0xD1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F30[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexSoulFlayComponent* GetDefaultObj();

	void StartSoulPull(class AActor* Instigator, const struct FVector& PullDirectionWS, bool bCauseTargetChange);
	enum class EHexSoulFlayPerformResult StartSoulFlay(class AActor* Instigator, bool bHasCharges);
	void StartDynamicSoulPull(class AActor* Instigator, const struct FVector& PullDirectionWS, float MaxDistance, float Duration, bool bIsCosmetic);
	class USceneComponent* GetSoulLocationComponent();
};

// 0xA0 (0x178 - 0xD8)
// Class LOTF2.HexCharacterSoulFlayComponent
class UHexCharacterSoulFlayComponent : public UHexSoulFlayComponent
{
public:
	struct FGameplayCueTag                       SoulOverkillCharacterGameplayCue;                  // 0xD8(0x8)(Edit, Config, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FGameplayCueTag                       SoulOverkillMeshGameplayCue;                       // 0xE0(0x8)(Edit, Config, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FGameplayCueTag                       SoulAppearGameplayCue;                             // 0xE8(0x8)(Edit, Config, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FGameplayCueTag                       SoulDisappearGameplayCue;                          // 0xF0(0x8)(Edit, Config, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameplayEffect>           SoulFlayGameplayEffect;                            // 0xF8(0x8)(Edit, ZeroConstructor, Config, EditConst, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameplayEffect>           ResetStaggerGameplayEffect;                        // 0x100(0x8)(Edit, ZeroConstructor, Config, EditConst, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameplayEffect>           ProvisionalDamageGameplayEffect;                   // 0x108(0x8)(Edit, ZeroConstructor, Config, EditConst, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SoulFlayDefaultDistance;                           // 0x110(0x4)(Edit, ZeroConstructor, Config, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          DefaultSoulAnimation;                              // 0x114(0x8)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSpawnSoulFlaySoulActor;                           // 0x11C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F32[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class APlayerCharacter*                      InstigatorCharacter;                               // 0x120(0x8)(BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                SoulActor;                                         // 0x128(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                               SoulFlayActorLocation;                             // 0x130(0x18)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                               LanternInstigatorLocation;                         // 0x148(0x18)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2F33[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexCharacterSoulFlayComponent* GetDefaultObj();

	void StartSoulAnimation(struct FGameplayTag& AnimationTag);
	void PerformSoulOverkill();
	void PerformSoulBurst(class AActor* Instigator, float ProvisionalDamageAmount);
	void OnSoulFlayGameplayEffectRemoved(struct FGameplayEffectRemovalInfo& GameplayEffectRemovalInfo);
	class APlayerCharacter* GetInstigatorCharacter();
};

// 0x30 (0xE0 - 0xB0)
// Class LOTF2.HexCharacterTendrilComponent
class UHexCharacterTendrilComponent : public UActorComponent
{
public:
	class UNiagaraComponent*                     NativeTendrilsNiagaraComponent;                    // 0xB0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                NativeSkeletalMeshComponent;                       // 0xB8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FHexCharacterTendrilData>      CharacterTendrilsData;                             // 0xC0(0x10)(BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class FName                                  StartingPointsParamName;                           // 0xD0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  DirectionsParamName;                               // 0xD8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UHexCharacterTendrilComponent* GetDefaultObj();

	void BP_UpdateTendrilsData();
};

// 0x0 (0x28 - 0x28)
// Class LOTF2.HexCharClassHelper
class UHexCharClassHelper : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UHexCharClassHelper* GetDefaultObj();

	void UnequipEverything(class ALOTF2Character* LOTF2Character);
	void SetupCharacterFromSave(class ALOTF2Character* LOTF2Character, class ULOTF2SaveGame* SaveGameObject, bool bApplyChanges);
	void SetupCharacterClass(class ALOTF2Character* LOTF2Character, struct FCharacterClassData& CharacterClassData, bool bHideEquipment);
};

// 0x48 (0x78 - 0x30)
// Class LOTF2.HexCinematicPlayerSubsystem
class UHexCinematicPlayerSubsystem : public UWorldSubsystem
{
public:
	FMulticastInlineDelegateProperty_            OnCinematicPlayingStarted;                         // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCinematicPlayingStopped;                         // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<class AActor*>                        ActorsToHideDuringCinematic;                       // 0x50(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class AActor*>                        ActorsHiddenBeforeCinematic;                       // 0x60(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2F36[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexCinematicPlayerSubsystem* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class LOTF2.HexCombatBalancingSubsystem
class UHexCombatBalancingSubsystem : public UWorldSubsystem
{
public:
	struct FHexPlayerPowerLevel                  HostPowerLevel;                                    // 0x30(0x8)(NoDestructor, NativeAccessSpecifierPrivate)
	int32                                        NumCoopAllies;                                     // 0x38(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2F37[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexCombatBalancingSubsystem* GetDefaultObj();

};

// 0x20 (0x2D8 - 0x2B8)
// Class LOTF2.HexConfirmationDialogButton
class UHexConfirmationDialogButton : public ULOTF2UserWidget
{
public:
	FMulticastInlineDelegateProperty_            OnConfirmationActionButtonClicked;                 // 0x2B8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	class FName                                  ActionId;                                          // 0x2C8(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                      Text_ButtonLabel;                                  // 0x2D0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UHexConfirmationDialogButton* GetDefaultObj();

};

// 0xD0 (0x5A8 - 0x4D8)
// Class LOTF2.HexCreditsScreen
class UHexCreditsScreen : public UHexActivatableWidget
{
public:
	FMulticastInlineDelegateProperty_            OnCreditsFinished;                                 // 0x4D8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UDataTable>             CreditsData;                                       // 0x4E8(0x30)(Edit, BlueprintVisible, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UDataTable>             SpecialThanksData;                                 // 0x518(0x30)(Edit, BlueprintVisible, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                  SpecialThanksText;                                 // 0x548(0x18)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class UCommonUserWidget>         InitialCreditsWidgetClass;                         // 0x560(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UCommonUserWidget>         EndCreditsWidgetClass;                             // 0x568(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UCreditsEntryWidget>       CategoryWidgetClass;                               // 0x570(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UCreditsEntryWidget>       SpecialThanksWidgetClass;                          // 0x578(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UScrollBox*                            Scroll_Credits;                                    // 0x580(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ScrollPixelsPerSecond;                             // 0x588(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bPlayCredits;                                      // 0x58C(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F38[0x1B];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexCreditsScreen* GetDefaultObj();

	void BP_StartPlay(bool bIsOpenedFromSettings);
	void BP_OnCreditsEnd();
};

// 0x60 (0x88 - 0x28)
// Class LOTF2.HexDamageEventData
class UHexDamageEventData : public UObject
{
public:
	struct FGameplayTagContainer                 AllAssetsTags;                                     // 0x28(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 TargetTags;                                        // 0x48(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 InstigatorTags;                                    // 0x68(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UHexDamageEventData* GetDefaultObj();

};

// 0xD0 (0x100 - 0x30)
// Class LOTF2.HexDelayerAction
class UHexDelayerAction : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_            OnValueChanged;                                    // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UObject*                               WorldContextObject;                                // 0x40(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F3A[0xB8];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexDelayerAction* GetDefaultObj();

	void KillTask();
	void HandleOnCurrentValueChanged(float NewCurrentValue);
	class UHexDelayerAction* DelayValue(class UObject* WorldContextObject, enum class ETweenType TweenType, float StartValue, float TargetValue, float Duration);
};

// 0x18 (0x58 - 0x40)
// Class LOTF2.HexDestroyActorOnEndTickSubsystem
class UHexDestroyActorOnEndTickSubsystem : public UTickableWorldSubsystem
{
public:
	TArray<class AActor*>                        ActorsToDestroy;                                   // 0x40(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2F3B[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexDestroyActorOnEndTickSubsystem* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class LOTF2.HexDevSettingsSubsystem
class UHexDevSettingsSubsystem : public UEngineSubsystem
{
public:

	static class UClass* StaticClass();
	static class UHexDevSettingsSubsystem* GetDefaultObj();

};

// 0x48 (0x78 - 0x30)
// Class LOTF2.HexDialogDescriptor
class UHexDialogDescriptor : public UDataAsset
{
public:
	class FText                                  Header;                                            // 0x30(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                  Body;                                              // 0x48(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<struct FConfirmationDialogAction>     Actions;                                           // 0x60(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TSubclassOf<class UHexGameDialog>            DialogClass;                                       // 0x70(0x8)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UHexDialogDescriptor* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class LOTF2.HexDialogueComponent
class UHexDialogueComponent : public UActorComponent
{
public:

	static class UClass* StaticClass();
	static class UHexDialogueComponent* GetDefaultObj();

	void RequestShowNpcPhrase(class AActor* NpcActor, class FText& NPCName, struct FDialogueMessage& DialogueMessage);
};

// 0x1D8 (0x208 - 0x30)
// Class LOTF2.HexDialogueSystem
class UHexDialogueSystem : public ULocalPlayerSubsystem
{
public:
	uint8                                        Pad_2F3C[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FHexDialogueSystemSaveData            DialogueSaveData;                                  // 0x70(0x50)(SaveGame, NativeAccessSpecifierPrivate)
	FDelegateProperty_                           InputActionEvent_SkipDialogue;                     // 0xC0(0x10)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2F3D[0x90];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class UHexActivatableWidget>   NPCQuestionDialogClass;                            // 0x160(0x30)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UHexActivatableWidget>   NPCMessageClass;                                   // 0x190(0x30)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UExtensionPointEntryWidget> ClientNPCMessageClass;                             // 0x1C0(0x8)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UHexActivatableWidget>   NPCInteractionScreenClass;                         // 0x1C8(0x30)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayAbilitySpecHandle            ActiveAbilityHandle;                               // 0x1F8(0x4)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2F3E[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexDialogueSystem* GetDefaultObj();

	void StopDialogue();
	void SkipCurrentDialogue();
	void OnVendorScreenClosed();
	void OnAnswerSelectedByUser(enum class EAnswerType AnswerType);
	void GoToNextStep();
	void ForceStopDialogue();
};

// 0x18 (0x2B8 - 0x2A0)
// Class LOTF2.HexEnvInteraction
class AHexEnvInteraction : public AActor
{
public:
	class UHexEnvInteractionSimulationComponent* WaterSimulation;                                   // 0x2A0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHexEnvInteractionSimulationComponent* FoliageSimulation;                                 // 0x2A8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHexEnvInteractionSimulationComponent* SnowSimulation;                                    // 0x2B0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AHexEnvInteraction* GetDefaultObj();

	void AddParticle(struct FHexEnvInteractionParticle& NewParticle, int32 SimulationBitmask);
};

// 0x20 (0xD0 - 0xB0)
// Class LOTF2.HexEnvInteractionInfluencerComponent
class UHexEnvInteractionInfluencerComponent : public UActorComponent
{
public:
	float                                        ParticleSize;                                      // 0xB0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F42[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FHexEnvInteractionInfluencerCapsuleDefinition> Capsules;                                          // 0xB8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bEnableSpawn;                                      // 0xC8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F43[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexEnvInteractionInfluencerComponent* GetDefaultObj();

};

// 0x30 (0xE0 - 0xB0)
// Class LOTF2.HexEnvInteractionSimulationComponent
class UHexEnvInteractionSimulationComponent : public UActorComponent
{
public:
	TArray<struct FHexEnvInteractionInfluencer>  Influencers;                                       // 0xB0(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FHexEnvInteractionInfluencerSimulationParameters SimulationParameters;                              // 0xC0(0x1C)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F54[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexEnvInteractionSimulationComponent* GetDefaultObj();

	void UpdateSimulation(float DeltaTime);
	void UpdateInfluencerCapsules(class UTextureRenderTarget2D* CapsuleParametersRenderTarget, struct FVector& CapsulesOrigin);
	void RemoveInfluencer(class UHexEnvInteractionInfluencerComponent* Component);
	void Draw(struct FVector& CameraPosition, float CameraOrthoWidth, class UCanvas* Canvas, class UMaterialInstanceDynamic* Material);
	void AddParticle(class UHexEnvInteractionInfluencerComponent* Component, struct FHexEnvInteractionParticle& NewParticle);
	void AddInfluencer(class UHexEnvInteractionInfluencerComponent* Component, struct FHexEnvInteractionInfluencerSimulationParameters& SimulationParameters);
};

// 0x8 (0x58 - 0x50)
// Class LOTF2.HexEnvQueryGenerator_Actors
class UHexEnvQueryGenerator_Actors : public UEnvQueryGenerator
{
public:
	TSubclassOf<class UEnvQueryContext>          Context;                                           // 0x50(0x8)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UHexEnvQueryGenerator_Actors* GetDefaultObj();

};

// 0xE0 (0x2C0 - 0x1E0)
// Class LOTF2.HexEnvQueryGenerator_Donut
class UHexEnvQueryGenerator_Donut : public UEnvQueryGenerator_Donut
{
public:
	struct FAIDataProviderFloatValue             OffsetX;                                           // 0x1E0(0x38)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FAIDataProviderFloatValue             OffsetY;                                           // 0x218(0x38)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FAIDataProviderFloatValue             OffsetZ;                                           // 0x250(0x38)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FAIDataProviderFloatValue             ArcDirectionOffset;                                // 0x288(0x38)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UHexEnvQueryGenerator_Donut* GetDefaultObj();

};

// 0x140 (0x338 - 0x1F8)
// Class LOTF2.HexEnvQueryTest_LineOfSight
class UHexEnvQueryTest_LineOfSight : public UEnvQueryTest
{
public:
	TSubclassOf<class UEnvQueryContext>          LOSConxtext_Start;                                 // 0x1F8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UEnvQueryContext>          LOSConxtext_End;                                   // 0x200(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UEnvQueryContext>          ActorsToIgnore;                                    // 0x208(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAIDataProviderFloatValue             DistanceThreshold;                                 // 0x210(0x38)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FAIDataProviderBoolValue              CheckAxiomObstacles;                               // 0x248(0x38)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FAIDataProviderBoolValue              UseQuerierEyeLocation;                             // 0x280(0x38)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FAIDataProviderFloatValue             CapsuleShapeRadius;                                // 0x2B8(0x38)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FAIDataProviderBoolValue              EnableDebug;                                       // 0x2F0(0x38)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        DebugTime;                                         // 0x328(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F55[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexEnvQueryTest_LineOfSight* GetDefaultObj();

};

// 0x1D8 (0x3D0 - 0x1F8)
// Class LOTF2.HexEnvQueryTest_OverlapByPreset
class UHexEnvQueryTest_OverlapByPreset : public UEnvQueryTest
{
public:
	struct FEnvOverlapDataWithProfile            OverlapData;                                       // 0x1F8(0x198)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FAIDataProviderBoolValue              EnableDebug;                                       // 0x390(0x38)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        DebugTime;                                         // 0x3C8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F58[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexEnvQueryTest_OverlapByPreset* GetDefaultObj();

};

// 0x128 (0x320 - 0x1F8)
// Class LOTF2.HexEnvQueryTest_StraightPath
class UHexEnvQueryTest_StraightPath : public UEnvQueryTest
{
public:
	TSubclassOf<class UEnvQueryContext>          Context;                                           // 0x1F8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAIDataProviderFloatValue             DistanceThreshold;                                 // 0x200(0x38)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FAIDataProviderFloatValue             NavProjectionExtensionX;                           // 0x238(0x38)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FAIDataProviderFloatValue             NavProjectionExtensionY;                           // 0x270(0x38)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FAIDataProviderFloatValue             NavProjectionExtensionZ;                           // 0x2A8(0x38)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FAIDataProviderBoolValue              EnableDebug;                                       // 0x2E0(0x38)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        DebugTime;                                         // 0x318(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F5A[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexEnvQueryTest_StraightPath* GetDefaultObj();

};

// 0x80 (0x278 - 0x1F8)
// Class LOTF2.HexEnvQueryTest_Tags
class UHexEnvQueryTest_Tags : public UEnvQueryTest
{
public:
	struct FGameplayTagQuery                     TagsToCheck;                                       // 0x1F8(0x48)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FAIDataProviderBoolValue              MatchAll;                                          // 0x240(0x38)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UHexEnvQueryTest_Tags* GetDefaultObj();

};

// 0x28 (0x310 - 0x2E8)
// Class LOTF2.HexEnvQueryTest_HexTrace
class UHexEnvQueryTest_HexTrace : public UEnvQueryTest_Trace
{
public:
	bool                                         bEnableDebug;                                      // 0x2E8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F5B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DebugDrawTime;                                     // 0x2EC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowMovableObjects;                              // 0x2F0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F5C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               LineTraceAlternativeEnd;                           // 0x2F8(0x18)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UHexEnvQueryTest_HexTrace* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class LOTF2.HexExecutionCalculation_Heal
class UHexExecutionCalculation_Heal : public UGameplayEffectExecutionCalculation
{
public:

	static class UClass* StaticClass();
	static class UHexExecutionCalculation_Heal* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class LOTF2.HexExecution_BECureAllStatusEffects
class UHexExecution_BECureAllStatusEffects : public UGameplayEffectExecutionCalculation
{
public:

	static class UClass* StaticClass();
	static class UHexExecution_BECureAllStatusEffects* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class LOTF2.HexExecution_BEOverrideAttribute
class UHexExecution_BEOverrideAttribute : public UGameplayEffectExecutionCalculation
{
public:

	static class UClass* StaticClass();
	static class UHexExecution_BEOverrideAttribute* GetDefaultObj();

};

// 0x0 (0x868 - 0x868)
// Class LOTF2.HexFakePlayerControllerForStreaming
class AHexFakePlayerControllerForStreaming : public APlayerController
{
public:

	static class UClass* StaticClass();
	static class AHexFakePlayerControllerForStreaming* GetDefaultObj();

};

// 0x20 (0x50 - 0x30)
// Class LOTF2.HexFinishGameManager
class UHexFinishGameManager : public UWorldSubsystem
{
public:
	FMulticastInlineDelegateProperty_            OnGameFinished;                                    // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCreditScreenEnded;                               // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UHexFinishGameManager* GetDefaultObj();

	void OnTagContainerAdded(struct FGameplayTagContainer& Tags);
	void OnShowNewJourneyScreen(enum class EMessagingResult Result, class UHexGameDialog* Dialog);
	void OnShowNewGamePlusScreen(enum class EMessagingResult Result, class UHexGameDialog* Dialog);
	void OnNewJourneyAnswerSelected(enum class EMessagingResult Result, class UHexGameDialog* Dialog);
	void OnNewGamePlusAnswerSelected(enum class EMessagingResult Result, class UHexGameDialog* Dialog);
	void OnNewClassUnlockedShown(enum class EMessagingResult Result, class UHexGameDialog* Dialog);
	void OnCreditScreenEndedCallback();
};

// 0x0 (0x2B8 - 0x2B8)
// Class LOTF2.HexFocusableWidgetWithChildren
class UHexFocusableWidgetWithChildren : public UHexFocusableWidget
{
public:

	static class UClass* StaticClass();
	static class UHexFocusableWidgetWithChildren* GetDefaultObj();

};

// 0xA8 (0x158 - 0xB0)
// Class LOTF2.HexFocusDirectionComponent
class UHexFocusDirectionComponent : public UActorComponent
{
public:
	struct FAngleSnapSetting                     AngleSnapSettingsForTargeting;                     // 0xB0(0x8)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	TMap<struct FGameplayTag, struct FAngleSnapSetting> AngleSnapSettings;                                 // 0xB8(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FRotationRateAngleLimits              RotationRateAngleLimits;                           // 0x108(0x20)(BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector_NetQuantizeNormal             FocusDirection;                                    // 0x128(0x18)(Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2F67[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexFocusDirectionComponent* GetDefaultObj();

	void SetFocusDirection(const struct FVector& NewFocusDirection);
	void ResetFocusDirection();
	struct FVector GetFocusDirection();
};

// 0x0 (0x28 - 0x28)
// Class LOTF2.HexFocusDirectionInterface
class IHexFocusDirectionInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IHexFocusDirectionInterface* GetDefaultObj();

};

// 0x28 (0x108 - 0xE0)
// Class LOTF2.HexFollowSplineOnSpawnComponent
class UHexFollowSplineOnSpawnComponent : public UHexApplySpawnConfigComponent
{
public:
	class USplineComponent*                      InitialSpawnSpline;                                // 0xE0(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameplayEffect>           HaltedEffectClass;                                 // 0xE8(0x8)(Edit, ZeroConstructor, Config, EditConst, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ALOTF2Character*                       SpawnedCharacter;                                  // 0xF0(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2F68[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexFollowSplineOnSpawnComponent* GetDefaultObj();

};

// 0x180 (0x1B0 - 0x30)
// Class LOTF2.HexFriends
class UHexFriends : public UGameInstanceSubsystem
{
public:
	uint8                                        Pad_2F69[0x170];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          DeferredInviteTimerHandle;                         // 0x1A0(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2F6A[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexFriends* GetDefaultObj();

	bool IsAcceptingInvite();
	bool HasAcceptedStartupInvite();
	void HandleInviteDeferred();
};

// 0xF0 (0x390 - 0x2A0)
// Class LOTF2.HexGameLayout
class UHexGameLayout : public UCommonUserWidget
{
public:
	class UExtensionPointWidget*                 Game_Version_Extension;                            // 0x2A0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UExtensionPointWidget*                 SaveGame_Extension;                                // 0x2A8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidget*                               PersistentContent;                                 // 0x2B0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidget*                               Content;                                           // 0x2B8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USubtitleDisplay*                      SubtitleDisplay;                                   // 0x2C0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidget*                               SubtitleLocator;                                   // 0x2C8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        DefaultSubtitlesBottomOffset;                      // 0x2D0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        MinSubtitlesBottomOffset;                          // 0x2D4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<struct FGameplayTag, class UCommonActivatableWidgetContainerBase*> Layers;                                            // 0x2D8(0x50)(ExportObject, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TMap<struct FGameplayTag, class UExtensionPointWidget*> ExtensionPoints;                                   // 0x328(0x50)(ExportObject, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2F6D[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UExtensionPointEntryWidget*            SaveGameWidget;                                    // 0x388(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UHexGameLayout* GetDefaultObj();

	void RegisterLayer(const struct FGameplayTag& LayerTag, class UCommonActivatableWidgetContainerBase* LayerWidget);
	void RegisterExtensionPoint(const struct FGameplayTag& ExtensionPointTag, class UExtensionPointWidget* ExtensionPointWidget);
	void OnSaveGameStarted(const class FString& SlotName, int32 UserIndex);
	void OnSaveGameFinished(const class FString& SlotName, int32 UserIndex, bool bSuccess);
};

// 0x8 (0x318 - 0x310)
// Class LOTF2.HexGameplayCueManager
class UHexGameplayCueManager : public UGameplayCueManager
{
public:
	bool                                         bRejectMultipleCuesIfSame;                         // 0x310(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F6E[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexGameplayCueManager* GetDefaultObj();

};

// 0x380 (0x4C8 - 0x148)
// Class LOTF2.HexGameUserSettings
class UHexGameUserSettings : public UGameUserSettings
{
public:
	uint8                                        Pad_2F70[0x150];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UPlayerMappableInputConfig*>    InputConfigs;                                      // 0x298(0x10)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	TMap<class UPlayerMappableInputConfig*, class UInputAction*> InputConfigToInputAction;                          // 0x2A8(0x50)(UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F71[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                CurrentPreset;                                     // 0x300(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UPlayerMappableInputConfig*>    ControllerPresetConfigs;                           // 0x310(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F72[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UHexLocalPlayer*                       LocalPlayer;                                       // 0x370(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F73[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FHexGameUserSettingsData              HexGameUserSettingsData;                           // 0x380(0xC0)(NativeAccessSpecifierPrivate)
	struct FHexGameUserSettingsLocalData         HexGameUserSettingsLocalData;                      // 0x440(0x30)(Config, NoDestructor, NativeAccessSpecifierPrivate)
	bool                                         bAllModulesLoaded;                                 // 0x470(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2F74[0x57];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexGameUserSettings* GetDefaultObj();

	void TryRunAndApplyBenchmarkTests(class APlayerController* PlayerController);
	void SetVoiceSoundVolume(float Volume);
	void SetSubtitlesSize(enum class ESubtitleDisplayTextSize Size);
	void SetSubtitlesEnabled(bool bEnable);
	void SetStabCameraEnabled(bool bEnable);
	void SetShowTutorials(bool bEnable);
	void SetSaturation(float Saturation);
	void SetResetCameraYAxis(bool bEnable);
	void SetQualityAutoDetected(bool AutoDetected);
	void SetPrioritizeQuickShotEnabled(bool bEnable);
	void SetPresetRenderMode(enum class EPresetRenderMode RenderMode);
	void SetPlayerLanternCastShadows(bool bEnable);
	void SetOnlineModeEnabled(bool bEnable);
	void SetNVReflexMode(enum class ENVReflexMode Mode);
	void SetNISSharpness(float Sharpness);
	void SetNISEnabled(bool Enabled);
	void SetMusicSoundVolume(float Volume);
	void SetMouseVerticalAxisInverted(bool Invert);
	void SetMouseSensitivity(float Sensitivity);
	void SetMouseHorizontalAxisInverted(bool Invert);
	void SetMotionBlurEnabled(bool bEnabled);
	void SetMasterSoundVolume(float Volume);
	void SetLegalAgreementsRead(bool bRead, class APlayerController* PlayerController);
	void SetHDRUILevel(double Level);
	void SetHDRPeakBrightness(int32 Brightness);
	void SetHDRCompositeMode(bool bEnable);
	void SetGamepadVerticalAxisInverted(bool Invert);
	void SetGamepadHorizontalAxisInverted(bool Invert);
	void SetFSRSharpness(float Sharpness);
	void SetFSRQuality(enum class EFSRQualityMode Quality);
	void SetFSREnabled(bool Enabled);
	void SetFilmGrainEnabled(bool bEnabled);
	void SetEnvironmentSoundVolume(float Volume);
	void SetEffectsSoundVolume(float Volume);
	void SetDoesStabCancelLock(bool bEnable);
	void SetDLSSSharpness(float Sharpness);
	void SetDLSSQuality(enum class EDLSSQualityMode Quality);
	void SetDLSSPreferNISSharpen(bool PreferNIS);
	void SetDLSSFrameGenerationEnabled(bool bEnabled);
	void SetDLSSEnabled(bool Enabled);
	void SetDisplayBrightnessCalibrationAtStart(bool Value);
	void SetDisplayBlood(bool bEnable);
	void SetCurrentControllerPreset(int32 Index);
	void SetCrossplayEnabled(bool bEnable);
	void SetControllerVibrationEnabled(bool bEnable);
	void SetControllerSpeakerSoundVolume(float Volume);
	void SetControllerPreviewFilterIndex(int32 Index);
	void SetContrast(float Contrast);
	void SetChromaticAberrationEnabled(bool bEnabled);
	void SetCameraSpeed(float Speed);
	void SetCameraShakeEnabled(bool bEnable);
	void SetBrightness(float Brightness);
	void SetAutoLockOnEnabled(bool bEnable);
	void SetAutoChangeTargetEnabled(bool bEnable);
	void OnLogoutFromOnlineServices();
	void OnLoginSucceeded();
	void OnLoginFailed(const class FString& Error);
	void OnGameModeInitialized(class AGameModeBase* GameModeBase);
	bool IsUsingHDR();
	bool IsSubtitlesEnabled();
	bool IsStabCameraEnabled();
	bool IsShowTutorialsEnabled();
	bool IsResetCameraYAxis();
	bool IsQualityAutoDetected();
	bool IsPrioritizeQuickShotEnabled();
	bool IsOnlineModeEnabled();
	bool IsMouseVerticalAxisInverted();
	bool IsMouseHorizontalAxisInverted();
	bool IsMotionBlurEnabled();
	bool IsGamepadVerticalAxisInverted();
	bool IsGamepadHorizontalAxisInverted();
	bool IsFilmGrainEnabled();
	bool IsDisplayBloodEnabled();
	bool IsCrossplayEnabled();
	bool IsControllerVibrationEnabled();
	bool IsChromaticAberrationEnabled();
	bool IsCameraShakeEnabled();
	bool IsAutoLockOnEnabled();
	bool IsAutoChangeTargetEnabled();
	float GetVoiceSoundVolume();
	enum class ESubtitleDisplayTextSize GetSubtitlesSize();
	float GetSaturationNormalised();
	float GetSaturation();
	int32 GetResolutionScaleValue();
	enum class EPresetRenderMode GetPresetRenderMode();
	bool GetPlayerLanternCastShadows();
	enum class ENVReflexMode GetNVReflexMode();
	float GetNISSharpness();
	bool GetNISEnabled();
	float GetMusicSoundVolume();
	float GetMouseSensitivity();
	float GetMasterSoundVolume();
	bool GetLegalAgreementsRead();
	double GetHDRUILevel();
	int32 GetHDRPeakBrightness();
	bool GetHDRCompositeMode();
	float GetFSRSharpness();
	enum class EFSRQualityMode GetFSRQuality();
	bool GetFSREnabled();
	float GetEnvironmentSoundVolume();
	float GetEffectsSoundVolume();
	bool GetDoesStabCancelLock();
	float GetDLSSSharpness();
	enum class EDLSSQualityMode GetDLSSQuality();
	bool GetDLSSPreferNISSharpen();
	bool GetDLSSFrameGenerationEnabled();
	bool GetDLSSEnabled();
	bool GetDisplayBrightnessCalibrationAtStart();
	int32 GetCurrentControllerPreset();
	float GetControllerSpeakerSoundVolume();
	int32 GetControllerPreviewFilterIndex();
	float GetContrastNormalised();
	float GetContrast();
	float GetCameraSpeed();
	float GetBrightnessNormalised();
	float GetBrightness();
	void EnableHDROutput(bool bEnable);
};

// 0x528 (0x7E0 - 0x2B8)
// Class LOTF2.HexGenericSlider
class UHexGenericSlider : public UHexFocusableWidget
{
public:
	uint8                                        Pad_2F75[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnalogSlider*                         Slider_Feature;                                    // 0x2C8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSliderStyle                          SliderStyle;                                       // 0x2D0(0x500)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	bool                                         bSelected;                                         // 0x7D0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F76[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexGenericSlider* GetDefaultObj();

	void SetValue(float Value);
	void SetMin(float Value);
	void SetMax(float Value);
	void Select(bool Selected);
	void OnValueChanged(float Value);
	float GetValue();
	float GetMin();
	float GetMax();
};

// 0x0 (0x2A0 - 0x2A0)
// Class LOTF2.HexHazardArea
class AHexHazardArea : public AActor
{
public:

	static class UClass* StaticClass();
	static class AHexHazardArea* GetDefaultObj();

};

// 0x58 (0x3A0 - 0x348)
// Class LOTF2.HexHoundAnimLayer
class UHexHoundAnimLayer : public UAnimInstance
{
public:
	struct FVector                               NativeLookAtTarget;                                // 0x348(0x18)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        NativeLookAtAlpha;                                 // 0x360(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F77[0x3C];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexHoundAnimLayer* GetDefaultObj();

};

// 0x68 (0x540 - 0x4D8)
// Class LOTF2.HexHUDLayout
class UHexHUDLayout : public UHexActivatableWidget
{
public:
	TSoftClassPtr<class UCommonActivatableWidget> EscapeMenuClass;                                   // 0x4D8(0x30)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UCommonActivatableWidget> GesturesMenuClass;                                 // 0x508(0x30)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F78[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexHUDLayout* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class LOTF2.HexInputModifierResponseCurveExponential
class UHexInputModifierResponseCurveExponential : public UInputModifier
{
public:
	float                                        CurveExponent;                                     // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F79[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexInputModifierResponseCurveExponential* GetDefaultObj();

};

// 0x28 (0x50 - 0x28)
// Class LOTF2.InputModifierEdge
class UInputModifierEdge : public UInputModifier
{
public:
	float                                        Threshold;                                         // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F7A[0x24];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UInputModifierEdge* GetDefaultObj();

};

// 0x48 (0x70 - 0x28)
// Class LOTF2.InputModifierStep
class UInputModifierStep : public UInputModifier
{
public:
	struct FInputModifierStepFunction            StepFunctionX;                                     // 0x28(0x18)(Edit, BlueprintVisible, DisableEditOnTemplate, Config, Protected, NativeAccessSpecifierProtected)
	struct FInputModifierStepFunction            StepFunctionY;                                     // 0x40(0x18)(Edit, BlueprintVisible, DisableEditOnTemplate, Config, Protected, NativeAccessSpecifierProtected)
	struct FInputModifierStepFunction            StepFunctionZ;                                     // 0x58(0x18)(Edit, BlueprintVisible, DisableEditOnTemplate, Config, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UInputModifierStep* GetDefaultObj();

};

// 0x8 (0x60 - 0x58)
// Class LOTF2.InputTriggerDownDuringTime
class UInputTriggerDownDuringTime : public UInputTriggerTimedBase
{
public:
	float                                        MaxTimeDownThreshold;                              // 0x58(0x4)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F7B[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UInputTriggerDownDuringTime* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class LOTF2.HexInterface_Flying
class IHexInterface_Flying : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IHexInterface_Flying* GetDefaultObj();

	class UHexStateTreeComponent* GetFlyingStateTreeComponent();
};

// 0x8 (0x590 - 0x588)
// Class LOTF2.HexLeashingBoxComponent
class UHexLeashingBoxComponent : public UBoxComponent
{
public:
	uint8                                        Pad_2F7C[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexLeashingBoxComponent* GetDefaultObj();

};

// 0x0 (0x590 - 0x590)
// Class LOTF2.HexLeashingInnerBoxComponent
class UHexLeashingInnerBoxComponent : public UHexLeashingBoxComponent
{
public:

	static class UClass* StaticClass();
	static class UHexLeashingInnerBoxComponent* GetDefaultObj();

};

// 0x0 (0x590 - 0x590)
// Class LOTF2.HexLeashingOuterBoxComponent
class UHexLeashingOuterBoxComponent : public UHexLeashingBoxComponent
{
public:

	static class UClass* StaticClass();
	static class UHexLeashingOuterBoxComponent* GetDefaultObj();

};

// 0x0 (0x590 - 0x590)
// Class LOTF2.HexLeashingLimitBoxComponent
class UHexLeashingLimitBoxComponent : public UHexLeashingBoxComponent
{
public:

	static class UClass* StaticClass();
	static class UHexLeashingLimitBoxComponent* GetDefaultObj();

};

// 0x38 (0x2D8 - 0x2A0)
// Class LOTF2.HexLeashingVolumeContainer
class AHexLeashingVolumeContainer : public AActor
{
public:
	TArray<TSoftObjectPtr<class ASimpleCharacterSpawner>> SimpleCharacterSpawners;                           // 0x2A0(0x10)(Edit, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F7D[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UHexLeashingInnerBoxComponent*         DefaultInnerBoxComponent;                          // 0x2C0(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHexLeashingOuterBoxComponent*         DefaultOuterBoxComponent;                          // 0x2C8(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHexLeashingLimitBoxComponent*         DefaultLimitBoxComponent;                          // 0x2D0(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AHexLeashingVolumeContainer* GetDefaultObj();

};

// 0x0 (0x2B0 - 0x2B0)
// Class LOTF2.HexLeashingVolumeDebugComponent
class UHexLeashingVolumeDebugComponent : public USceneComponent
{
public:

	static class UClass* StaticClass();
	static class UHexLeashingVolumeDebugComponent* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class LOTF2.HexLinkedActorInterface
class IHexLinkedActorInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IHexLinkedActorInterface* GetDefaultObj();

	bool TriggerLinkedActor(class AActor* LinkOnwer, class AActor* TriggerInstigator);
};

// 0x10 (0xC0 - 0xB0)
// Class LOTF2.HexLinkedActorsComponent
class UHexLinkedActorsComponent : public UActorComponent
{
public:
	TArray<TSoftObjectPtr<class AActor>>         LinkedActors;                                      // 0xB0(0x10)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UHexLinkedActorsComponent* GetDefaultObj();

	bool TriggerLinkedActors(class AActor* TriggerInstigator);
};

// 0x30 (0xC50 - 0xC20)
// Class LOTF2.HexListView
class UHexListView : public UListView
{
public:
	struct FMargin                               ScrollbarPadding;                                  // 0xC20(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FVector2D                             ScrollbarThickness;                                // 0xC30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F80[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexListView* GetDefaultObj();

	void SetScrollbarThickness(struct FVector2D& NewScrollbarThickness);
	void SetScrollbarPadding(struct FMargin& NewScrollbarPadding);
	bool IsScrollbarVisible();
	class UUserWidget* GetWidgetFromItem(class UObject* Item);
};

// 0x30 (0x2C8 - 0x298)
// Class LOTF2.HexLocalPlayer
class UHexLocalPlayer : public ULocalPlayer
{
public:
	uint8                                        Pad_2F81[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexLocalPlayer* GetDefaultObj();

	class UHexGameUserSettings* GetLocalSettings();
};

// 0x0 (0x40 - 0x40)
// Class LOTF2.HexModCalculationMagicHeal
class UHexModCalculationMagicHeal : public UGameplayModMagnitudeCalculation
{
public:

	static class UClass* StaticClass();
	static class UHexModCalculationMagicHeal* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class LOTF2.HexModCalc_UmbralAggroSpeed
class UHexModCalc_UmbralAggroSpeed : public UGameplayModMagnitudeCalculation
{
public:

	static class UClass* StaticClass();
	static class UHexModCalc_UmbralAggroSpeed* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class LOTF2.HexMod_DeathWishHealthRefill
class UHexMod_DeathWishHealthRefill : public UGameplayModMagnitudeCalculation
{
public:

	static class UClass* StaticClass();
	static class UHexMod_DeathWishHealthRefill* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class LOTF2.HexMod_DeathWishProvisionalDamage
class UHexMod_DeathWishProvisionalDamage : public UGameplayModMagnitudeCalculation
{
public:

	static class UClass* StaticClass();
	static class UHexMod_DeathWishProvisionalDamage* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class LOTF2.HexMod_FirstDeathProvDamage
class UHexMod_FirstDeathProvDamage : public UGameplayModMagnitudeCalculation
{
public:

	static class UClass* StaticClass();
	static class UHexMod_FirstDeathProvDamage* GetDefaultObj();

};

// 0x20 (0x2D8 - 0x2B8)
// Class LOTF2.HexMoviePlayer
class UHexMoviePlayer : public ULOTF2UserWidget
{
public:
	class UCommonVideoPlayer*                    VideoPlayer;                                       // 0x2B8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                           SubtitlesWidget;                                   // 0x2C0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMediaSource*                          Video;                                             // 0x2C8(0x8)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonVideoSubtitleAsset*             SubtitlesAsset;                                    // 0x2D0(0x8)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UHexMoviePlayer* GetDefaultObj();

	void SetVideo(class UMediaSource* NewVideo);
	void SetSubtitlesAsset(class UCommonVideoSubtitleAsset* Subtitles);
	void SetPlaybackRate(float PlaybackRate);
	void SetLooping(bool bShouldLoopPlayback);
	void SetIsMuted(bool bInIsMuted);
	void Seek(float PlaybackTime);
	void Reverse();
	void PlayFromStart();
	void Play();
	void Pause();
	bool IsPlaying();
	bool IsPaused();
	bool IsMuted();
	bool IsLooping();
	float GetVideoDuration();
	float GetPlaybackTime();
	float GetPlaybackRate();
	void Close();
};

// 0x60 (0x88 - 0x28)
// Class LOTF2.HexNavAnalyzer
class UHexNavAnalyzer : public UObject
{
public:
	uint8                                        Pad_2F82[0x60];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexNavAnalyzer* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class LOTF2.HexNavArea_Axiom
class UHexNavArea_Axiom : public UNavArea
{
public:

	static class UClass* StaticClass();
	static class UHexNavArea_Axiom* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class LOTF2.HexNavArea_Fire
class UHexNavArea_Fire : public UNavArea
{
public:

	static class UClass* StaticClass();
	static class UHexNavArea_Fire* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class LOTF2.HexNavArea_Poison
class UHexNavArea_Poison : public UNavArea
{
public:

	static class UClass* StaticClass();
	static class UHexNavArea_Poison* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class LOTF2.HexNavArea_Umbral
class UHexNavArea_Umbral : public UNavArea
{
public:

	static class UClass* StaticClass();
	static class UHexNavArea_Umbral* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class LOTF2.HexNavArea_Water
class UHexNavArea_Water : public UNavArea
{
public:

	static class UClass* StaticClass();
	static class UHexNavArea_Water* GetDefaultObj();

};

// 0x18 (0x48 - 0x30)
// Class LOTF2.HexNavBoundsVolumeManagerSubsystem
class UHexNavBoundsVolumeManagerSubsystem : public UGameInstanceSubsystem
{
public:
	TArray<struct FLevelNavBoundsContainer>      AvailableNavBounds;                                // 0x30(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2F83[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexNavBoundsVolumeManagerSubsystem* GetDefaultObj();

};

// 0x90 (0xB8 - 0x28)
// Class LOTF2.HexNavDebugDataHandler
class UHexNavDebugDataHandler : public UObject
{
public:
	uint8                                        Pad_2F84[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UObject*                               WorldContextObject;                                // 0x30(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2F85[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FHexNavDataDebugEvent>         NavDataDebugEvents;                                // 0x40(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2F86[0x68];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexNavDebugDataHandler* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class LOTF2.HexNavFilter_AIControllerDefault
class UHexNavFilter_AIControllerDefault : public UNavigationQueryFilter
{
public:

	static class UClass* StaticClass();
	static class UHexNavFilter_AIControllerDefault* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class LOTF2.HexNavFilter_AIControllerAxiomOnly
class UHexNavFilter_AIControllerAxiomOnly : public UHexNavFilter_AIControllerDefault
{
public:

	static class UClass* StaticClass();
	static class UHexNavFilter_AIControllerAxiomOnly* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class LOTF2.HexNavFilter_AIControllerUmbralOnly
class UHexNavFilter_AIControllerUmbralOnly : public UHexNavFilter_AIControllerDefault
{
public:

	static class UClass* StaticClass();
	static class UHexNavFilter_AIControllerUmbralOnly* GetDefaultObj();

};

// 0x58 (0x80 - 0x28)
// Class LOTF2.HexNavFlooder
class UHexNavFlooder : public UObject
{
public:
	uint8                                        Pad_2F89[0x58];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexNavFlooder* GetDefaultObj();

};

// 0x8 (0x2A8 - 0x2A0)
// Class LOTF2.HexNavFloodReference
class AHexNavFloodReference : public AActor
{
public:
	class USceneComponent*                       RootSceneComponent;                                // 0x2A0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AHexNavFloodReference* GetDefaultObj();

};

// 0xD0 (0xF8 - 0x28)
// Class LOTF2.HexNavFunnel
class UHexNavFunnel : public UObject
{
public:
	enum class EHexNavGetSideMode                EdgeSideGetMode;                                   // 0x28(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2F8A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                OwnerActor;                                        // 0x30(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UNavigationQueryFilter>    QueryNavigationFilter;                             // 0x38(0x8)(ZeroConstructor, Transient, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2F8B[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CornerOffset;                                      // 0x48(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2F8C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               ApexLocation;                                      // 0x50(0x18)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        FunnelLeftIndex;                                   // 0x68(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2F8D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               FunnelLeft;                                        // 0x70(0x18)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        FunnelRightIndex;                                  // 0x88(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2F8E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               FunnelRight;                                       // 0x90(0x18)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                               RightPoint;                                        // 0xA8(0x18)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2F8F[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NextPointIndex;                                    // 0xD8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2F90[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         LastTestStep;                                      // 0xE4(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EHexFunnelState                   FunnelState;                                       // 0xE5(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2F91[0x12];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexNavFunnel* GetDefaultObj();

};

// 0x48 (0x1578 - 0x1530)
// Class LOTF2.HexNavigationSystem
class UHexNavigationSystem : public UNavigationSystemV1
{
public:
	int32                                        MaxHexNavPathQueriesPerFrame;                      // 0x1530(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F92[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UHexNavBoundsVolumeManagerSubsystem*   NavSubsystem;                                      // 0x1538(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        bEnableNavDebugEvents;                             // 0x1540(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2F93[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FVector2D>                     SuspiciousTiles;                                   // 0x1548(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPrivate)
	TArray<struct FHexNavDataDebugEvent>         NavDebugEvents;                                    // 0x1558(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2F94[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexNavigationSystem* GetDefaultObj();

};

// 0x8 (0x1E8 - 0x1E0)
// Class LOTF2.HexNavLinkCustomComponent
class UHexNavLinkCustomComponent : public UNavLinkCustomComponent
{
public:
	uint8                                        Pad_2F95[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexNavLinkCustomComponent* GetDefaultObj();

};

// 0x8 (0x2F8 - 0x2F0)
// Class LOTF2.HexNavLinkProxy
class AHexNavLinkProxy : public ANavLinkProxy
{
public:
	bool                                         bCanBeFiltered;                                    // 0x2F0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EHexNavLinkUserType               NavUserType;                                       // 0x2F1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2F96[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AHexNavLinkProxy* GetDefaultObj();

};

// 0x20 (0x1C0 - 0x1A0)
// Class LOTF2.HexBaseNavModifierComponent
class UHexBaseNavModifierComponent : public UNavModifierComponent
{
public:
	bool                                         bOptimizeNavRelevancy;                             // 0x1A0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F97[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CheckRelevancyFrequency;                           // 0x1A4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NavRelevantDistanceToClosestPlayer;                // 0x1A8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EHexNavBoundsGenerationMode       BoundsGenerationMode;                              // 0x1AC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIncludeOwnerChildActorsForBoundsCalc;             // 0x1AD(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F98[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MinNavDistanceAllowed;                             // 0x1B0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F99[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          CheckForNavRelevancyTimerHandle;                   // 0x1B8(0x8)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UHexBaseNavModifierComponent* GetDefaultObj();

	void EnableDeferred(bool bEnabled);
	void Enable(bool bEnabled);
};

// 0x30 (0x60 - 0x30)
// Class LOTF2.HexNavModifierManagerSubsystem
class UHexNavModifierManagerSubsystem : public UGameInstanceSubsystem
{
public:
	TArray<class UHexBaseNavModifierComponent*>  NewNavModifiersQueue;                              // 0x30(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class UHexBaseNavModifierComponent*>  RemoveNavModifiersQueue;                           // 0x40(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FTimerHandle                          ProcessQueueTimerHandle;                           // 0x50(0x8)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        QueueProcessFrequency;                             // 0x58(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2F9A[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexNavModifierManagerSubsystem* GetDefaultObj();

};

// 0x30 (0x58 - 0x28)
// Class LOTF2.HexVisLogEventRegister
class UHexVisLogEventRegister : public UObject
{
public:
	class AActor*                                OwnerActor;                                        // 0x28(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2F9B[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexVisLogEventRegister* GetDefaultObj();

};

// 0x10 (0x68 - 0x58)
// Class LOTF2.HexPathOffsetterVisLogRegister
class UHexPathOffsetterVisLogRegister : public UHexVisLogEventRegister
{
public:
	uint8                                        Pad_2F9C[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexPathOffsetterVisLogRegister* GetDefaultObj();

};

// 0x30 (0x58 - 0x28)
// Class LOTF2.HexNavPathOffsetter
class UHexNavPathOffsetter : public UObject
{
public:
	class APawn*                                 OwnerPawnActor;                                    // 0x28(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2F9D[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UHexPathOffsetterVisLogRegister*       VisLogEventRegister;                               // 0x50(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UHexNavPathOffsetter* GetDefaultObj();

};

// 0x0 (0x3E8 - 0x3E8)
// Class LOTF2.HexNPCCharacterData
class UHexNPCCharacterData : public UCharacterData
{
public:

	static class UClass* StaticClass();
	static class UHexNPCCharacterData* GetDefaultObj();

};

// 0x40 (0x70 - 0x30)
// Class LOTF2.HexObjectTrackingSubsystem
class UHexObjectTrackingSubsystem : public UWorldSubsystem
{
public:
	TArray<class APlayerCharacter*>              PlayerCharacters;                                  // 0x30(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	TArray<class USoftRepulsionCapsuleComponent*> SoftRepulsionCapsuleComponents;                    // 0x40(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class AHexEnvInteraction*                    EnvInteraction;                                    // 0x50(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ANaturalLighting*                      NaturalLighting;                                   // 0x58(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class APickup*>                       RegisteredPickups;                                 // 0x60(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UHexObjectTrackingSubsystem* GetDefaultObj();

	class ANaturalLighting* GetNaturalLighting();
	class AHexEnvInteraction* GetEnvInteraction();
};

// 0x48 (0x520 - 0x4D8)
// Class LOTF2.HexOkCancelDialog
class UHexOkCancelDialog : public UHexGameDialog
{
public:
	class UFocusableButtonWidget*                Button_Confirm;                                    // 0x4D8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFocusableButtonWidget*                Button_Cancel;                                     // 0x4E0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F9E[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UCommonTextBlock*                      Text_Title;                                        // 0x4F8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonRichTextBlock*                  RichText_Description;                              // 0x500(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonBorder*                         Border_TapToCloseZone;                             // 0x508(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                      Text_Confirm;                                      // 0x510(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                      Text_Cancel;                                       // 0x518(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UHexOkCancelDialog* GetDefaultObj();

	void OnOkPressed();
	void OnCancelPressed();
};

// 0x0 (0x28 - 0x28)
// Class LOTF2.HexOnlineUtils
class UHexOnlineUtils : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UHexOnlineUtils* GetDefaultObj();

	class APlayerController* GetLocalPlayerController(class UObject* WorldContextObject);
};

// 0x18 (0x2D0 - 0x2B8)
// Class LOTF2.HexScreenWidget
class UHexScreenWidget : public ULOTF2UserWidget
{
public:
	bool                                         bAutoFocus;                                        // 0x2B8(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F9F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UHexFocusableWidget*                   LastFocusedWidget;                                 // 0x2C0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2FA0[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexScreenWidget* GetDefaultObj();

	void EnableAutofocus(bool bEnableAutofocus);
};

// 0x10 (0x2E0 - 0x2D0)
// Class LOTF2.HexPanelWidgetBase
class UHexPanelWidgetBase : public UHexScreenWidget
{
public:
	class UWidgetAnimation*                      Show_Animation;                                    // 0x2D0(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidgetAnimation*                      Hide_Animation;                                    // 0x2D8(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UHexPanelWidgetBase* GetDefaultObj();

	void PlayFadeOut();
	void PlayFadeIn();
};

// 0x1E8 (0x218 - 0x30)
// Class LOTF2.HexPersistentDataSubsystem
class UHexPersistentDataSubsystem : public UGameInstanceSubsystem
{
public:
	struct FHexPersistentData                    PersistentData;                                    // 0x30(0x1E8)(NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UHexPersistentDataSubsystem* GetDefaultObj();

	void SetStringValue(class FName Name, const class FString& Value, int32 Flags);
	void SetIntValue(class FName Name, int32 Value, int32 Flags);
	void SetFloatValue(class FName Name, float Value, int32 Flags);
	void SetBoolValue(class FName Name, bool Value, int32 Flags);
	class FString DumpStoredData();
	bool BP_GetStringValue(class FName Name, class FString* Result);
	bool BP_GetIntValue(class FName Name, int32* Result);
	bool BP_GetFloatValue(class FName Name, float* Result);
	bool BP_GetBoolValue(class FName Name, bool* Result);
};

// 0x0 (0x28 - 0x28)
// Class LOTF2.HexPlayerAbilityFeedbackInterface
class IHexPlayerAbilityFeedbackInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IHexPlayerAbilityFeedbackInterface* GetDefaultObj();

};

// 0x18 (0xC8 - 0xB0)
// Class LOTF2.HexPlayerAbilityFeedbackComponent
class UHexPlayerAbilityFeedbackComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnAbilityFailedToActivateDueToCostEvent;           // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2FA7[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexPlayerAbilityFeedbackComponent* GetDefaultObj();

};

// 0x0 (0x3E8 - 0x3E8)
// Class LOTF2.HexPlayerCharacterData
class UHexPlayerCharacterData : public UCharacterData
{
public:

	static class UClass* StaticClass();
	static class UHexPlayerCharacterData* GetDefaultObj();

};

// 0x680 (0x19C0 - 0x1340)
// Class LOTF2.HexPlayerMovementComponent
class UHexPlayerMovementComponent : public ULordsMovementComponent
{
public:
	FMulticastInlineDelegateProperty_            OnCurrentLocomotionStateChanged;                   // 0x1340(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnDesiredLocomotionStateChanged;                   // 0x1350(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                        MinSlowWalkMovementSpeed;                          // 0x1360(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxSlowWalkMovementSpeed;                          // 0x1364(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinWalkMovementSpeed;                              // 0x1368(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxWalkMovementSpeed;                              // 0x136C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinRunMovementSpeed;                               // 0x1370(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxRunMovementSpeed;                               // 0x1374(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinSprintMovementSpeed;                            // 0x1378(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxSprintMovementSpeed;                            // 0x137C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AngleThresholdToGenerateTurnEvents;                // 0x1380(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxHorizontalSpeedWhileFalling;                    // 0x1384(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpeedThresholdToModifyPerchLower;                  // 0x1388(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpeedThresholdToModifyPerchUpper;                  // 0x138C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PerchRadiusThresholdWhenStopped;                   // 0x1390(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PerchAdditionalHeightWhenStopped;                  // 0x1394(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RotationRateWhenLocomotionStarts;                  // 0x1398(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2FA9[0x624];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexPlayerMovementComponent* GetDefaultObj();

	void OnMovementImpairedTagsChanged(const struct FGameplayTag& InTag, int32 NewCount);
	void OnCurrentCanWalkOffLedgesStateChanged(bool bNewState);
	void OnAbilityEnded(class UGameplayAbility* EndedAbility);
	void OnAbilityActivated(class UGameplayAbility* ActivatedAbility);
	enum class ELocomotionState GetDesiredLocomotionState();
	enum class ELocomotionState GetCurrentLocomotionState();
	void ApplyRotationRateForLocomotionStart(bool bEnabled, float RotationRateAtStart);
};

// 0xD0 (0x108 - 0x38)
// Class LOTF2.HexPlayerSettings
class UHexPlayerSettings : public UHexDeveloperSettings
{
public:
	TSoftObjectPtr<class UDataTable>             ItemsDataBase;                                     // 0x38(0x30)(Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDataTableRowHandle                   AlternativeLootTableRow;                           // 0x68(0x10)(Edit, Config, NoDestructor, NativeAccessSpecifierPrivate)
	float                                        PlayerSellPriceModifier;                           // 0x78(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2FAA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSubclassOf<class UItemData>>         ItemsToReward;                                     // 0x80(0x10)(Edit, ZeroConstructor, Config, UObjectWrapper, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          RadiantEndingTag;                                  // 0x90(0x8)(Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          RhogarEndingTag;                                   // 0x98(0x8)(Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          UmbralEndingTag;                                   // 0xA0(0x8)(Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          NewGamePlusStartedTag;                             // 0xA8(0x8)(Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UItemData>                 RespecItem;                                        // 0xB0(0x8)(Edit, ZeroConstructor, Config, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UItemData>                 UmbralMemoryItem;                                  // 0xB8(0x8)(Edit, ZeroConstructor, Config, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UItemData>                 HealthPotion;                                      // 0xC0(0x8)(Edit, ZeroConstructor, Config, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UItemData>                 Sanguinarix;                                       // 0xC8(0x8)(Edit, ZeroConstructor, Config, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UItemData>               HandRangedItem;                                    // 0xD0(0x30)(Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        MaxInventorySize;                                  // 0x100(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2FAB[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexPlayerSettings* GetDefaultObj();

	TArray<class FName> GetItemsIDs();
};

// 0x68 (0x2B0 - 0x248)
// Class LOTF2.HexProjectileMovementComponent
class UHexProjectileMovementComponent : public UProjectileMovementComponent
{
public:
	float                                        Acceleration;                                      // 0x248(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HomingRotationSpeed;                               // 0x24C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RotationSpeed;                                     // 0x250(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2FAC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               RotationDirection;                                 // 0x258(0x18)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHoming2D;                                         // 0x270(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseOnlyYawToRotate;                               // 0x271(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2FAD[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               HomingOffset;                                      // 0x278(0x18)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2FAE[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexProjectileMovementComponent* GetDefaultObj();

};

// 0x0 (0x448 - 0x448)
// Class LOTF2.HexRangedReworkGenericAbility
class UHexRangedReworkGenericAbility : public UAnathemaGameplayAbility
{
public:

	static class UClass* StaticClass();
	static class UHexRangedReworkGenericAbility* GetDefaultObj();

	struct FGameplayAbilityTargetDataHandle MakeRangedTargetDataHandle(float ShootForceAlpha, const struct FRotator& PlayerCameraRotation, bool bNewIsPlantShot);
	struct FGameplayAbilityTargetDataHandle MakeMagicTargetDataHandle(const struct FGameplayTag& NewMagicTag);
	bool GetRangedTargetDataFromTargetDataHandle(const struct FGameplayAbilityTargetDataHandle& TargetDataHandle, struct FGameplayAbilityTargetData_RangedAbility* OutTargetData);
	bool GetMagicTargetDataFromTargetDataHandle(const struct FGameplayAbilityTargetDataHandle& TargetDataHandle, struct FGameplayAbilityTargetData_MagicComboAbility* OutTargetData);
};

// 0x70 (0x618 - 0x5A8)
// Class LOTF2.HexRecastNavMesh
class AHexRecastNavMesh : public ARecastNavMesh
{
public:
	class UHexNavFunnel*                         Funnel;                                            // 0x5A8(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHexNavPathOffsetter*                  NavPathOffsetter;                                  // 0x5B0(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2FB3[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FHexRecastStreamingChunk>      StreamingChunks;                                   // 0x608(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AHexRecastNavMesh* GetDefaultObj();

};

// 0x8 (0x48 - 0x40)
// Class LOTF2.HexRecastNavMeshDataChunk
class UHexRecastNavMeshDataChunk : public URecastNavMeshDataChunk
{
public:
	uint8                                        Pad_2FB4[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexRecastNavMeshDataChunk* GetDefaultObj();

};

// 0x38 (0x68 - 0x30)
// Class LOTF2.HexReplaceChildActorForMultiplayerLatent
class UHexReplaceChildActorForMultiplayerLatent : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_            OnActorSpawned;                                    // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2FB6[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UObject*                               WorldContextObject;                                // 0x50(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UChildActorComponent*                  ChildActorComponentToReplace;                      // 0x58(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bReplicates;                                       // 0x60(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2FB7[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexReplaceChildActorForMultiplayerLatent* GetDefaultObj();

	class UHexReplaceChildActorForMultiplayerLatent* ReplaceChildActorForMultiplayer(class UObject* WorldContextObject, class UChildActorComponent* ChildActorComponentToReplace, bool bReplicates);
	void OnActorSpawnedByDirector(class AActor* SpawnedActor);
};

// 0x0 (0xD8 - 0xD8)
// Class LOTF2.HexRevengeCharacterSoulFlayComponent
class UHexRevengeCharacterSoulFlayComponent : public UHexSoulFlayComponent
{
public:

	static class UClass* StaticClass();
	static class UHexRevengeCharacterSoulFlayComponent* GetDefaultObj();

};

// 0x10 (0x8C0 - 0x8B0)
// Class LOTF2.HexRichTextBlock
class UHexRichTextBlock : public UCommonRichTextBlock
{
public:
	uint8                                        Pad_2FB8[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexRichTextBlock* GetDefaultObj();

};

// 0x60 (0x90 - 0x30)
// Class LOTF2.HexRichTextDecorator
class UHexRichTextDecorator : public URichTextBlockImageDecorator
{
public:
	class UEventNameBasedControllerIcons*        EventNameBasedControllerIconsClass;                // 0x30(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHexLocalPlayer*                       LocalPlayer;                                       // 0x38(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<struct FGameplayTag, class UCachedSlateBrush*> CachedSlateBrushes;                                // 0x40(0x50)(Transient, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UHexRichTextDecorator* GetDefaultObj();

	void SetLocalPlayer(class ULocalPlayer* LocalPlayer);
};

// 0x58 (0x80 - 0x28)
// Class LOTF2.HexRichTextBlockInputDecorator
class UHexRichTextBlockInputDecorator : public URichTextBlockDecorator
{
public:
	class UHexLocalPlayer*                       LocalPlayer;                                       // 0x28(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<class FName, class UCachedSlateBrushArray*> CachedBrushes;                                     // 0x30(0x50)(Transient, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UHexRichTextBlockInputDecorator* GetDefaultObj();

	void ClearFromCache(class FName& InputActionName);
};

// 0x0 (0x40 - 0x40)
// Class LOTF2.Execution_SendProjecilteIncomingGameplayEventToTarget
class UExecution_SendProjecilteIncomingGameplayEventToTarget : public UGameplayEffectExecutionCalculation
{
public:

	static class UClass* StaticClass();
	static class UExecution_SendProjecilteIncomingGameplayEventToTarget* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class LOTF2.Execution_SendMagicProjecilteIncomingGameplayEventToTarget
class UExecution_SendMagicProjecilteIncomingGameplayEventToTarget : public UGameplayEffectExecutionCalculation
{
public:

	static class UClass* StaticClass();
	static class UExecution_SendMagicProjecilteIncomingGameplayEventToTarget* GetDefaultObj();

};

// 0x0 (0x860 - 0x860)
// Class LOTF2.GE_ProjectileIncoming
class UGE_ProjectileIncoming : public UGameplayEffect
{
public:

	static class UClass* StaticClass();
	static class UGE_ProjectileIncoming* GetDefaultObj();

};

// 0x0 (0x860 - 0x860)
// Class LOTF2.GE_MagicProjectileIncoming
class UGE_MagicProjectileIncoming : public UGameplayEffect
{
public:

	static class UClass* StaticClass();
	static class UGE_MagicProjectileIncoming* GetDefaultObj();

};

// 0x1D8 (0x208 - 0x30)
// Class LOTF2.SubAutonomousAbilityData
class USubAutonomousAbilityData : public UPrimaryDataAsset
{
public:
	class FString                                OptionalSpawnedActorName;                          // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LifeSpan;                                          // 0x40(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExtraLifeSpanMultipliedByInstanceIndex;            // 0x44(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExtraLifeSpan;                                     // 0x48(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2FB9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FAutonomousAreaSpawnDef>       SpawnOnDestroy;                                    // 0x50(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FAutonomousAreaSpawnDef>       SpawnOnPhysicalHit;                                // 0x60(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         bShouldRebound;                                    // 0x70(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldUseCustomSurfacesToReboundSet;              // 0x71(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2FBA[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSet<enum class EPhysicalSurface>            OverrideSurfacesToRebound;                         // 0x78(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<struct FAutonomousAreaSpawnDef>       SpawnGenericRebound;                               // 0xC8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FAutonomousAreaSpawnDef>       SpawnOnBlockRebound;                               // 0xD8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FAutonomousAreaSpawnDef>       SpawnOnPhysicalHitRebound;                         // 0xE8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FAutonomousAreaSpawnDef>       SpawnOnOverlap;                                    // 0xF8(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FAutonomousAreaSpawnDef>       SpawnOnEffectsApplied;                             // 0x108(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FAutonomousAreaSpawnDef>       SpawnOnTimeout;                                    // 0x118(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FAutonomousAreaSpawnDef>       SpawnOnBeginPlay;                                  // 0x128(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FAutonomousAreaSpawnDef>       SpawnOnPeriod;                                     // 0x138(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FAutonomousAreaSpawnDef>       SpawnOnRecursiveEnds;                              // 0x148(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                         SpawnOnStartFirstPeriod;                           // 0x158(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bChangeSpawnOnPeriodIntervalOverSpawnerTime;       // 0x159(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2FBB[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TimeToChangeSpawnOnPeriodInterval;                 // 0x15C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpawnOnPeriodInterval;                             // 0x160(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpawnOnPeriodIntervalChanged;                      // 0x164(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        NumRecursiveSpawns;                                // 0x168(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2FBC[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SpawnDelay;                                        // 0x16C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExtraSpawnDelayByInstance;                         // 0x170(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        NumInstancesToSpawn;                               // 0x174(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESpawnType                        SpawnType;                                         // 0x175(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2FBD[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ArcMinRadius;                                      // 0x178(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ArcMaxRadius;                                      // 0x17C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ArcAngle;                                          // 0x180(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ArcVerticalAngle;                                  // 0x184(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ArcRandomFinalOffsetMinAngle;                      // 0x188(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ArcRandomFinalOffsetMaxAngle;                      // 0x18C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ArcRandomFinalOffsetMinVerticalAngle;              // 0x190(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ArcRandomFinalOffsetMaxVerticalAngle;              // 0x194(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ArcRandomLocalOffsetMinAngle;                      // 0x198(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ArcRandomLocalOffsetMaxAngle;                      // 0x19C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ArcRandomLocalOffsetMinVerticalAngle;              // 0x1A0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ArcRandomLocalOffsetMaxVerticalAngle;              // 0x1A4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseRandomArcAngleInRange;                         // 0x1A8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAddsArcRotationToSpawnRotation;                   // 0x1A9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2FBE[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 GameplayCueTags;                                   // 0x1B0(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 GameplayEventsToDestroyActor;                      // 0x1D0(0x20)(Edit, NativeAccessSpecifierPublic)
	bool                                         bDestroyOnInstigatorDeath;                         // 0x1F0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDestroyOnAttachedActorDestruction;                // 0x1F1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDestroyParentOnDestruction;                       // 0x1F2(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2FBF[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          SubAutonomousAbilityIDTag;                         // 0x1F4(0x8)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIgnoreSpawnerCollisions;                          // 0x1FC(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIgnoreInstigatorCollisions;                       // 0x1FD(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDontDestroyInCinematics;                          // 0x1FE(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2FC0[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NumberOfPeriodSpawnsBeforeDestroying;              // 0x200(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCheckForExtraPeriodSpawnTagOnInstigator;          // 0x204(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2FC1[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USubAutonomousAbilityData* GetDefaultObj();

};

// 0x340 (0x548 - 0x208)
// Class LOTF2.SAA_AreaOfEffectData
class USAA_AreaOfEffectData : public USubAutonomousAbilityData
{
public:
	class UStaticMesh*                           CustomShape;                                       // 0x208(0x8)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseScaleCustomShape;                              // 0x210(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2FC2[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               ScaleCustomShape;                                  // 0x218(0x18)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               MaxScaleCustomShape;                               // 0x230(0x18)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BoxExtent;                                         // 0x248(0x18)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               MaxBoxExtent;                                      // 0x260(0x18)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Radius;                                            // 0x278(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxRadius;                                         // 0x27C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HalfHeight;                                        // 0x280(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxHalfHeight;                                     // 0x284(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EShapeType                        ShapeType;                                         // 0x288(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EShapePivot                       ShapePivot;                                        // 0x289(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bExpandInTime;                                     // 0x28A(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bResizeCollisionWithShapeCast;                     // 0x28B(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayCueTag                       CueOnShapeCastImpact;                              // 0x28C(0x8)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                        TimeToExpand;                                      // 0x294(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAttackDamageDefinition               DamageDef;                                         // 0x298(0x270)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FDamageDefinitionIdentifier           DamageDefinitionID;                                // 0x508(0x8)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	float                                        TimeToReApplyDamagePerActor;                       // 0x510(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ImmuneTimePerActorAfterDamage;                     // 0x514(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDestroyOnValidOverlap;                            // 0x518(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDestroyOnPhysicalCollision;                       // 0x519(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDestroyOnEffectsApplied;                          // 0x51A(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIgnorePawnsOnHit;                                 // 0x51B(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIgnoreLevelOnHit;                                 // 0x51C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIgnoreDestructibles;                              // 0x51D(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bGroupChildrenDamages;                             // 0x51E(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bGroupDamagesByGameplayTag;                        // 0x51F(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bNotCollideWithActorCollidingWithFather;           // 0x520(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2FC3[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          GameplayTagToGroupDamages;                         // 0x524(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bGroupDamagesBySubAutonomousAbilityData;           // 0x52C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOnlyOverlapOncePerActor;                          // 0x52D(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldCollideWithOtherSAA;                        // 0x52E(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETargetToApply                    SAATargetToApply;                                  // 0x52F(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldInteractWithEnvironment;                    // 0x530(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverrideEnvInteractionParticleSize;               // 0x531(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2FC4[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        OverriddenEnvInteractionParticleSize;              // 0x534(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EnvInteractionParticleSizeScale;                   // 0x538(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EnvInteractionSimulationFlags;                     // 0x53C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIgnoreGroupingDamage;                             // 0x540(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2FC5[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USAA_AreaOfEffectData* GetDefaultObj();

};

// 0x0 (0x548 - 0x548)
// Class LOTF2.HexSAA_ProjectileIncomingAIData
class UHexSAA_ProjectileIncomingAIData : public USAA_AreaOfEffectData
{
public:

	static class UClass* StaticClass();
	static class UHexSAA_ProjectileIncomingAIData* GetDefaultObj();

};

// 0x0 (0x548 - 0x548)
// Class LOTF2.HexSAA_ProjectileIncomingAIData_Magic
class UHexSAA_ProjectileIncomingAIData_Magic : public USAA_AreaOfEffectData
{
public:

	static class UClass* StaticClass();
	static class UHexSAA_ProjectileIncomingAIData_Magic* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class LOTF2.HexSaveGameUpdate
class UHexSaveGameUpdate : public UObject
{
public:
	int32                                        SourceVersion;                                     // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        DestinationVersion;                                // 0x2C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UHexSaveGameUpdate* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class LOTF2.ForceGoldCompatibilityUpdate
class UForceGoldCompatibilityUpdate : public UHexSaveGameUpdate
{
public:

	static class UClass* StaticClass();
	static class UForceGoldCompatibilityUpdate* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class LOTF2.KeybindingSpellBugCompatibilityUpdate
class UKeybindingSpellBugCompatibilityUpdate : public UHexSaveGameUpdate
{
public:

	static class UClass* StaticClass();
	static class UKeybindingSpellBugCompatibilityUpdate* GetDefaultObj();

};

// 0x70 (0x310 - 0x2A0)
// Class LOTF2.HexSoulFlayableObject
class AHexSoulFlayableObject : public AActor
{
public:
	uint8                                        Pad_2FC6[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnathemaAbilitySystemComponent*       AbilitySystemComponent;                            // 0x2A8(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHexSoulFlayComponent*                 SoulFlayComponent;                                 // 0x2B0(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bApplySoulFlayEffectsToAttachedActor;              // 0x2B8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2FC7[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        SoulFlayTargets;                                   // 0x2C0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	struct FGameplayEffectsWithParamsContainer   GEsToApplyAfterSoulFlay;                           // 0x2D0(0x10)(Edit, NativeAccessSpecifierPrivate)
	float                                        DelayToApplyGEsAfterSoulFlay;                      // 0x2E0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        SoulflayTendrilDuration;                           // 0x2E4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2FC8[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UDualRealmStateComponent*              DualRealmStateComponent;                           // 0x2F8(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDualRealmBehaviourComponent*          DualRealmBehaviourComponent;                       // 0x300(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class APlayerCharacter*                      InstigatorCharacter;                               // 0x308(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AHexSoulFlayableObject* GetDefaultObj();

	void OnSoulFlay(class AActor* InstigatorActor, const struct FVector& PullDirection);
};

// 0x0 (0x360 - 0x360)
// Class LOTF2.HexSoulFlayAnimInstance
class UHexSoulFlayAnimInstance : public UAnimSingleNodeInstance
{
public:

	static class UClass* StaticClass();
	static class UHexSoulFlayAnimInstance* GetDefaultObj();

};

// 0xB0 (0x350 - 0x2A0)
// Class LOTF2.HexSoulFlayCharacterSoul
class AHexSoulFlayCharacterSoul : public AActor
{
public:
	uint8                                        Pad_2FCC[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInterface*                    SoulMeshMaterial;                                  // 0x2B8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  TargetSocketName;                                  // 0x2C0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SoulFallSpeed;                                     // 0x2C8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SoulLinkBreakVerticalDistance;                     // 0x2CC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                       SceneRootComponent;                                // 0x2D0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USpringArmComponent*                   SpringArmComponent;                                // 0x2D8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponentBudgeted*        SkeletalMeshComponent;                             // 0x2E0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTargetComponent*                      TargetComponent;                                   // 0x2E8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCapsuleComponent*                     CapsuleCollisionComponent;                         // 0x2F0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SoulFallSpeedMultiplier;                           // 0x2F8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2FCD[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USkeletalMesh*                         SoulSkeletalMesh;                                  // 0x300(0x8)(Net, ZeroConstructor, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimSequenceBase*                     CurrentSoulAnimation;                              // 0x308(0x8)(Net, ZeroConstructor, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FSoulFlayPull                         SoulFlayPull;                                      // 0x310(0x30)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class ALOTF2Character>        OwnerCharacter;                                    // 0x340(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2FCE[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AHexSoulFlayCharacterSoul* GetDefaultObj();

	void PerformSoulReturnedToBodyReaction();
	void OnRep_SoulSkeletalMesh();
	void OnRep_SoulPullStarted();
	void OnRep_CurrentSoulAnimation();
	void BP_PerformSoulPull(enum class EGameRealm PerformedRealm);
};

// 0x0 (0x28 - 0x28)
// Class LOTF2.HexSoulFlayInterface
class IHexSoulFlayInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IHexSoulFlayInterface* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class LOTF2.HexSoulFlaySoulInterface
class IHexSoulFlaySoulInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IHexSoulFlaySoulInterface* GetDefaultObj();

	void StartDynamicSoulPull(class AActor* Instigator, const struct FVector& PullDirectionWS, float MaxDistance, float Duration, bool bIsCosmetic, bool bChangeTarget);
	void SetupCharacter(class ALOTF2Character* Character);
	void SetSoulMesh(class USkeletalMesh* NewSkeletalMesh);
	void PlaySoulMeshAnimationSequence(class UAnimSequence* AnimSequence);
	void PlaySoulMeshAnimationMontage(class UAnimMontage* AnimMontage);
};

// 0x0 (0x28 - 0x28)
// Class LOTF2.HexSoulFlayableObjectTarget
class IHexSoulFlayableObjectTarget : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IHexSoulFlayableObjectTarget* GetDefaultObj();

	void OnApplySoulFlay(struct FVector& PullDirection);
};

// 0x60 (0x140 - 0xE0)
// Class LOTF2.HexSpawnerConfigComponent
class UHexSpawnerConfigComponent : public UHexApplySpawnConfigComponent
{
public:
	bool                                         bOverrideAlertRadius;                              // 0xE0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2FD2[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        OverrideAlertRadius;                               // 0xE4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bOverrideAlarmSkipCollisionChecks;                 // 0xE8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bOverrideCanReactToAlert;                          // 0xE9(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         OverrideCanReactToAlert;                           // 0xEA(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bOverrideTeamAttackEffectivity;                    // 0xEB(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        OverrideTeamAttackEffectivity;                     // 0xEC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bOverrideCautionReaction;                          // 0xF0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ESensesActivationReaction         OverrideCautionReaction;                           // 0xF1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bOverrideFoundReaction;                            // 0xF2(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ESensesActivationReaction         OverrideFoundReaction;                             // 0xF3(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bOverrideForceHighQuality;                         // 0xF4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2FD3[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FHexBattleEffectIdentifier>    BattleEffects;                                     // 0xF8(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bEnablePreSpawnMovementModeOverride;               // 0x108(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EMovementMode                     NewPreSpawnMovementMode;                           // 0x109(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2FD4[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  LevelRegionScaler;                                 // 0x10C(0x8)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  OverrideRegionScaler;                              // 0x114(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2FD5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 InitialExtraTags;                                  // 0x120(0x20)(Edit, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UHexSpawnerConfigComponent* GetDefaultObj();

	TArray<class FName> UI_GetAvailableRegionScalers();
};

// 0x10 (0x2C0 - 0x2B0)
// Class LOTF2.HexSpawnerDummyDebugComponent
class UHexSpawnerDummyDebugComponent : public USceneComponent
{
public:
	bool                                         bDrawAIDebugInfo;                                  // 0x2B0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDrawTetheringConnection;                          // 0x2B1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2FD6[0xE];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexSpawnerDummyDebugComponent* GetDefaultObj();

};

// 0x0 (0x2B0 - 0x2B0)
// Class LOTF2.HexSpawnPoolDummyDebugComponent
class UHexSpawnPoolDummyDebugComponent : public USceneComponent
{
public:

	static class UClass* StaticClass();
	static class UHexSpawnPoolDummyDebugComponent* GetDefaultObj();

};

// 0x0 (0x350 - 0x350)
// Class LOTF2.HexSpectatorPawn
class AHexSpectatorPawn : public ASpectatorPawn
{
public:

	static class UClass* StaticClass();
	static class AHexSpectatorPawn* GetDefaultObj();

};

// 0x18 (0x50 - 0x38)
// Class LOTF2.HexStateTreeBlueprintEvaluator
class UHexStateTreeBlueprintEvaluator : public UStateTreeEvaluatorBlueprintBase
{
public:
	class ABaseAICharacter*                      ActorCharacter;                                    // 0x38(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCharacterAIData*                      ActorAIData;                                       // 0x40(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHexAICharacterMovementComponent*      ActorMovementComponent;                            // 0x48(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UHexStateTreeBlueprintEvaluator* GetDefaultObj();

};

// 0x40 (0x1A8 - 0x168)
// Class LOTF2.HexStateTreeComponent
class UHexStateTreeComponent : public UStateTreeComponent
{
public:
	FMulticastInlineDelegateProperty_            OnStateBegin;                                      // 0x168(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnStateEnd;                                        // 0x178(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 CurrentStateTags;                                  // 0x188(0x20)(Transient, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UHexStateTreeComponent* GetDefaultObj();

};

// 0x20 (0x58 - 0x38)
// Class LOTF2.HexStateTreeTaskBlueprintBase
class UHexStateTreeTaskBlueprintBase : public UStateTreeTaskBlueprintBase
{
public:
	bool                                         bEnableDebug;                                      // 0x38(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2FD7[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                DebugText;                                         // 0x40(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FColor                                DebugTextColor;                                    // 0x50(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DebugTexFontScale;                                 // 0x54(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UHexStateTreeTaskBlueprintBase* GetDefaultObj();

};

// 0x28 (0x80 - 0x58)
// Class LOTF2.HexStateTreeTask_ApplyLooseGamplayTags
class UHexStateTreeTask_ApplyLooseGamplayTags : public UHexStateTreeTaskBlueprintBase
{
public:
	struct FGameplayTagContainer                 TagsToApply;                                       // 0x58(0x20)(Edit, NativeAccessSpecifierPublic)
	bool                                         bRemoveOnExit;                                     // 0x78(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2FD8[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexStateTreeTask_ApplyLooseGamplayTags* GetDefaultObj();

};

// 0x28 (0x80 - 0x58)
// Class LOTF2.HexStateTreeTask_StateEvent
class UHexStateTreeTask_StateEvent : public UHexStateTreeTaskBlueprintBase
{
public:
	class UHexStateTreeComponent*                ActorStateTreeComponent;                           // 0x58(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 EventTag;                                          // 0x60(0x20)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UHexStateTreeTask_StateEvent* GetDefaultObj();

};

// 0x40 (0x70 - 0x30)
// Class LOTF2.SteamUtilsSubsystem
class USteamUtilsSubsystem : public UGameInstanceSubsystem
{
public:
	uint8                                        Pad_2FD9[0x40];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USteamUtilsSubsystem* GetDefaultObj();

};

// 0x8 (0x38 - 0x30)
// Class LOTF2.HexSubtitleSubsystem
class UHexSubtitleSubsystem : public UWorldSubsystem
{
public:
	uint8                                        Pad_2FDA[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexSubtitleSubsystem* GetDefaultObj();

	void SetSubtitlesEnabled(bool bEnabled);
	void QueueSubtitleForEvent(class UAkAudioEvent* AkEvent);
	void KillAllSubtitles();
};

// 0x0 (0x28 - 0x28)
// Class LOTF2.HexSyncedAnimStartRequirement
class UHexSyncedAnimStartRequirement : public UObject
{
public:

	static class UClass* StaticClass();
	static class UHexSyncedAnimStartRequirement* GetDefaultObj();

	bool CanStartSyncAnim(class AActor* ActiveParticipant, class AActor* PassiveParticipant);
};

// 0x0 (0x28 - 0x28)
// Class LOTF2.HexSyncedAnimStartRequirement_PassiveIsHost
class UHexSyncedAnimStartRequirement_PassiveIsHost : public UHexSyncedAnimStartRequirement
{
public:

	static class UClass* StaticClass();
	static class UHexSyncedAnimStartRequirement_PassiveIsHost* GetDefaultObj();

};

// 0x78 (0xA8 - 0x30)
// Class LOTF2.HexSyncedAnimationDataAsset
class UHexSyncedAnimationDataAsset : public UDataAsset
{
public:
	enum class ESyncedAttachmentMode             AttachmentMode;                                    // 0x30(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDelayedAttachment;                                // 0x31(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDelayAttachmentOneFrame;                          // 0x32(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bApplySpineRotationOffset;                         // 0x33(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AngleToApplySpineRotation;                         // 0x34(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpineOffsetAngleLimit;                             // 0x38(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bGetAnimationFromEquippedWeapon;                   // 0x3C(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldSnapedLocationToFloor;                      // 0x3D(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldCheckCollisionsBetweenParticipants;         // 0x3E(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldOverrideMovementMode;                       // 0x3F(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldInterpolateActiveParticipant;               // 0x40(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldEaseIn;                                     // 0x41(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldEaseOut;                                    // 0x42(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldForceShortestPath;                          // 0x43(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InterpolationTime;                                 // 0x44(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BlendOutTime;                                      // 0x48(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlayRate;                                          // 0x4C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FHexSyncedAnimParticipantData         ActiveParticipant;                                 // 0x50(0x20)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FHexSyncedAnimParticipantData         PassiveParticipant;                                // 0x70(0x20)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class UHexSyncedAnimStartRequirement>> StartRequirements;                                 // 0x90(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, AdvancedDisplay, UObjectWrapper, NativeAccessSpecifierPublic)
	bool                                         bDisablePassiveParticipantRootMotionDuringAttachment; // 0xA0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2FDC[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexSyncedAnimationDataAsset* GetDefaultObj();

};

// 0x158 (0x208 - 0xB0)
// Class LOTF2.HexSyncedAnimComponent
class UHexSyncedAnimComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnSyncedAnimationEnded;                            // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMap<class FName, class UHexSyncedAnimationDataAsset*> SyncedAnimations;                                  // 0xC0(0x50)(Edit, NativeAccessSpecifierPrivate)
	struct FHexSyncAnimRawData                   SyncAnimRawData;                                   // 0x110(0x18)(Net, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2FDF[0xE0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexSyncedAnimComponent* GetDefaultObj();

	void PlaySyncedAnimationByName(class FName& SyncedAnimationName, class AActor* ActiveParticipant, class AActor* PassiveParticipant, float StartTime);
	void PlaySyncedAnimation(class UHexSyncedAnimationDataAsset* SyncAnimData, class AActor* ActiveParticipant, class AActor* PassiveParticipant, float StartTime);
	void OnSyncAnimationFinishedCallback();
	void OnRep_SyncAnimRawData(struct FHexSyncAnimRawData& OldData);
	bool IsPlayingSyncedAnim();
	void DettachFollowerFromLeader();
};

// 0xB0 (0x358 - 0x2A8)
// Class LOTF2.HexSyncWeaponItemVisual
class AHexSyncWeaponItemVisual : public AItemVisual
{
public:
	class USyncAnimMontagesComponent*            SyncAnimMontagesComponent;                         // 0x2A8(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<TSoftObjectPtr<class UAnimMontage>, class UAnimMontage*> RightHandSyncMontagesMap;                          // 0x2B0(0x50)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TMap<TSoftObjectPtr<class UAnimMontage>, class UAnimMontage*> LeftHandSyncMontagesMap;                           // 0x300(0x50)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class USkeletalMeshComponentBudgeted*        WeaponSkeletalMesh;                                // 0x350(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AHexSyncWeaponItemVisual* GetDefaultObj();

};

// 0x58 (0x98 - 0x40)
// Class LOTF2.HexTickAggregatorSubsystem
class UHexTickAggregatorSubsystem : public UTickableWorldSubsystem
{
public:
	uint8                                        Pad_2FE0[0x58];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexTickAggregatorSubsystem* GetDefaultObj();

};

// 0x50 (0xC90 - 0xC40)
// Class LOTF2.HexTileView
class UHexTileView : public UTileView
{
public:
	bool                                         bEnableCustomNavigation;                           // 0xC40(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2FE1[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FMargin                               ScrollbarPadding;                                  // 0xC44(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2FE2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector2D                             ScrollbarThickness;                                // 0xC58(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumColumns;                                        // 0xC68(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ItemWidth;                                         // 0xC6C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ItemHeight;                                        // 0xC70(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2FE3[0x1C];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexTileView* GetDefaultObj();

	void SetScrollbarThickness(struct FVector2D& NewScrollbarThickness);
	void SetScrollbarPadding(struct FMargin& NewScrollbarPadding);
	void SetItemWidth(float ItemWidth);
	void SetItemHeight(float ItemHeight);
	void SetColumns(int32 NumColumns);
	class UUserWidget* GetWidgetFromItem(class UObject* Item);
	int32 GetDesiredColumnCount();
};

// 0x70 (0xA0 - 0x30)
// Class LOTF2.HexTraverseDataAssetsAsyncAction
class UHexTraverseDataAssetsAsyncAction : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_            OnAssetFound;                                      // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnDone;                                            // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UObject*                               WorldContextObject;                                // 0x50(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2FE4[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FDelegateProperty_                           FilterAssetData;                                   // 0x90(0x10)(ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UHexTraverseDataAssetsAsyncAction* GetDefaultObj();

	class UHexTraverseDataAssetsAsyncAction* TraverseDataAssets(class UObject* WorldContextObject, TArray<class FString>& PackagePaths, TSubclassOf<class UObject> ObjectClass, FDelegateProperty_& FilterAssetData, double MaxTimePerUpdate);
	void KillTask();
};

// 0x0 (0x158 - 0x158)
// Class LOTF2.HexUIActionRouter
class UHexUIActionRouter : public UCommonUIActionRouterBase
{
public:

	static class UClass* StaticClass();
	static class UHexUIActionRouter* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class LOTF2.HexUIExtensions
class UHexUIExtensions : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UHexUIExtensions* GetDefaultObj();

	class FName SuspendInputForPlayer(class APlayerController* PlayerController, class FName SuspendReason);
	void SetExtensionPointVisibility(class UHexLocalPlayer* LocalPlayer, struct FGameplayTag& LayerTag, enum class ESlateVisibility Visibility);
	void RestoreInputForPlayer(class APlayerController* PlayerController, class FName SuspendToken);
	void ResetLayer(class UHexLocalPlayer* LocalPlayer, struct FGameplayTag& LayerTag);
	void ResetExtensionPoint(class UHexLocalPlayer* LocalPlayer, struct FGameplayTag& LayerTag);
	void ResetAllLayers(class UHexLocalPlayer* LocalPlayer);
	void ResetAllExtensionPoints(class UHexLocalPlayer* LocalPlayer);
	class UExtensionPointEntryWidget* PushHUDNotification_ForPlayer(class UHexLocalPlayer* LocalPlayer, const struct FGameplayTag& ExtensionPointName, TSubclassOf<class UExtensionPointEntryWidget> WidgetClass);
	class UExtensionPointEntryWidget* PushHUD_Timed_Notification_ForPlayer(class UHexLocalPlayer* LocalPlayer, const struct FGameplayTag& ExtensionPointName, TSubclassOf<class UExtensionPointEntryWidget> WidgetClass, float Duration);
	class UCommonActivatableWidget* PushContentToLayer_ForPlayerController(class APlayerController* PlayerController, const struct FGameplayTag& LayerName, TSubclassOf<class UCommonActivatableWidget> WidgetClass);
	class UCommonActivatableWidget* PushContentToLayer_ForPlayer(class UHexLocalPlayer* LocalPlayer, const struct FGameplayTag& LayerName, TSubclassOf<class UCommonActivatableWidget> WidgetClass);
	void PushAsyncContentToLayer_ForPlayer(class UHexLocalPlayer* LocalPlayer, const struct FGameplayTag& LayerName, TSoftClassPtr<class UCommonActivatableWidget> WidgetClass);
	void PerformFadeOut_ForPlayerController(class APlayerController* PlayerController, float FadeDuration, bool bFadeAudio, bool bInHoldWhenFinished);
	void PerformFadeIn_ForPlayerController(class APlayerController* PlayerController, float FadeDuration, bool bFadeAudio, bool bInHoldWhenFinished);
};

// 0x58 (0x88 - 0x30)
// Class LOTF2.HexUIManager
class UHexUIManager : public UGameInstanceSubsystem
{
public:
	class UHexUIPolicy*                          CurrentPolicy;                                     // 0x30(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UHexUIPolicy>            DefaultPolicyClass;                                // 0x38(0x30)(Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2FE9[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexUIManager* GetDefaultObj();

};

// 0x8 (0x38 - 0x30)
// Class LOTF2.HexUIMessaging
class UHexUIMessaging : public ULocalPlayerSubsystem
{
public:
	TSubclassOf<class UHexGameDialog>            OkCancelDialogPtr;                                 // 0x30(0x8)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UHexUIMessaging* GetDefaultObj();

};

// 0x40 (0x68 - 0x28)
// Class LOTF2.HexUIPolicy
class UHexUIPolicy : public UObject
{
public:
	TSoftClassPtr<class UHexGameLayout>          LayoutClass;                                       // 0x28(0x30)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FRootViewportLayoutInfo>       RootViewportLayouts;                               // 0x58(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UHexUIPolicy* GetDefaultObj();

};

// 0x920 (0x958 - 0x38)
// Class LOTF2.HexUISettings
class UHexUISettings : public UHexDeveloperSettings
{
public:
	TSubclassOf<class UHexUIPolicy>              UIPolicy;                                          // 0x38(0x8)(Edit, ZeroConstructor, Config, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UHexGameDialog>            OkCancelDialog;                                    // 0x40(0x8)(Edit, ZeroConstructor, Config, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UHexGameDialog>            UnlockClassDialog;                                 // 0x48(0x8)(Edit, ZeroConstructor, Config, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UHexGameDialog>            NewGamePlusDialog;                                 // 0x50(0x8)(Edit, ZeroConstructor, Config, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UInGameMessageNotification> InGameMessageClass;                                // 0x58(0x8)(Edit, ZeroConstructor, Config, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UExtensionPointEntryWidget> LegendaryEdUnlockClass;                            // 0x60(0x8)(Edit, ZeroConstructor, Config, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UHexActivatableWidget>   CreditsScreen;                                     // 0x68(0x30)(Edit, Config, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UHexActivatableWidget>   NPCQuestionDialog;                                 // 0x98(0x30)(Edit, Config, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UHexActivatableWidget>   NPCMessageDialog;                                  // 0xC8(0x30)(Edit, Config, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UExtensionPointEntryWidget> ClientNPCMessageClass;                             // 0xF8(0x8)(Edit, ZeroConstructor, Config, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UHexActivatableWidget>   NPCInteractionScreen;                              // 0x100(0x30)(Edit, Config, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                  NewClassUnlocked;                                  // 0x130(0x18)(Edit, Config, Protected, NativeAccessSpecifierProtected)
	class FText                                  NewJourneyTitle;                                   // 0x148(0x18)(Edit, Config, Protected, NativeAccessSpecifierProtected)
	class FText                                  NewJourneyDescription;                             // 0x160(0x18)(Edit, Config, Protected, NativeAccessSpecifierProtected)
	class FText                                  NewJourneyStart;                                   // 0x178(0x18)(Edit, Config, Protected, NativeAccessSpecifierProtected)
	class FText                                  NewGamePlusTitle;                                  // 0x190(0x18)(Edit, Config, Protected, NativeAccessSpecifierProtected)
	class FText                                  NewGamePlusDescription;                            // 0x1A8(0x18)(Edit, Config, Protected, NativeAccessSpecifierProtected)
	class FText                                  NewGamePlusStart;                                  // 0x1C0(0x18)(Edit, Config, Protected, NativeAccessSpecifierProtected)
	class FText                                  NewGamePlusRestartJourney;                         // 0x1D8(0x18)(Edit, Config, Protected, NativeAccessSpecifierProtected)
	TMap<enum class EVendorTransactionCode, class FText> TransactionErrorMessages;                          // 0x1F0(0x50)(Edit, Config, Protected, NativeAccessSpecifierProtected)
	TMap<enum class EHexAttackTypeEffectivenes, struct FAttackEffectivenessUIStyle> AttackEffectivenessStyles;                         // 0x240(0x50)(Edit, Config, Protected, NativeAccessSpecifierProtected)
	TMap<struct FGameplayTag, class FText>       AttackTypeDefinitions;                             // 0x290(0x50)(Edit, Config, Protected, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UDataTable>             StatScalarUIDefinition;                            // 0x2E0(0x30)(Edit, Config, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<enum class EMagicFamily, struct FMagicCatalystRequirementInfo> MagicFamilyTags;                                   // 0x310(0x50)(Edit, Config, Protected, NativeAccessSpecifierProtected)
	TMap<enum class EHexEquipmentLoadTier, struct FLinearColor> WeightColors;                                      // 0x360(0x50)(Edit, Config, Protected, NativeAccessSpecifierProtected)
	TArray<TSoftClassPtr<class UGameplayEffectUIData_StatusEffect>> StatusEffectsUIConfig;                             // 0x3B0(0x10)(Edit, ZeroConstructor, Config, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	bool                                         bDialoguesCanBeSkipped;                            // 0x3C0(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bDialoguesShouldAutoAdvance;                       // 0x3C1(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2FEA[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DefaultTimeoutForDialogues;                        // 0x3C4(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DefaultTimeoutForSkippingDialogues;                // 0x3C8(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ClientDialoguePopupMaxDistance;                    // 0x3CC(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          MainMenuId;                                        // 0x3D0(0x8)(Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          TintsScreenId;                                     // 0x3D8(0x8)(Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FAnathemaQuery                        TintsMenuAvailableQuery;                           // 0x3E0(0x50)(Edit, Config, Protected, NativeAccessSpecifierProtected)
	class FText                                  DefaultCharacterName;                              // 0x430(0x18)(Edit, Config, Protected, NativeAccessSpecifierProtected)
	int32                                        MaxCharNameLen;                                    // 0x448(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          GameplayTagPresentWhileInGameMenuIsOpen;           // 0x44C(0x8)(Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2FEB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGameplayTag>                  WidgetInterruptibleGameplayTags;                   // 0x458(0x10)(Edit, ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTag                          DoNotCloseUITag;                                   // 0x468(0x8)(Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          AnimTagClassSelection;                             // 0x470(0x8)(Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          AnimTagMainMenu;                                   // 0x478(0x8)(Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          AnimTagHeadCustomization;                          // 0x480(0x8)(Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          AnimTagBodyCustomization;                          // 0x488(0x8)(Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          AnimTagReviewScreen;                               // 0x490(0x8)(Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          AnimTagLoadGameScreen;                             // 0x498(0x8)(Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          AnimTagLegendaryEdScreen;                          // 0x4A0(0x8)(Edit, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<enum class EUIOnlineMsgCode, class FText> OnlineMessages;                                    // 0x4A8(0x50)(Edit, Config, Protected, NativeAccessSpecifierProtected)
	TMap<enum class EDLCName, struct FDLCOwnedMessage> DLCMessages;                                       // 0x4F8(0x50)(Edit, Config, Protected, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UDataTable>             SubtitlesDefinitions;                              // 0x548(0x30)(Edit, Config, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UDataTable>             LoadingTipsTable;                                  // 0x578(0x30)(Edit, Config, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UInputKeyBasedControllerIcons> InputIcons;                                        // 0x5A8(0x30)(Edit, Config, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TSoftObjectPtr<class UInputMappingContext>> InputIconsMappingContexts;                         // 0x5D8(0x10)(Edit, ZeroConstructor, Config, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	float                                        InputIconScale;                                    // 0x5E8(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2FEC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UAkAudioEvent>          MagicCircleRangedSlotSelectSound;                  // 0x5F0(0x30)(Edit, Config, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UAkAudioEvent>          SplashScreenContinueSound;                         // 0x620(0x30)(Edit, Config, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UAkAudioEvent>          SettingsTabSelectSound;                            // 0x650(0x30)(Edit, Config, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UAkAudioEvent>          SettingsListEntrySelectSound;                      // 0x680(0x30)(Edit, Config, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UAkAudioEvent>          FocusableButtonWidgetHoverSound;                   // 0x6B0(0x30)(Edit, Config, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UAkAudioEvent>          FocusableButtonWidgetClickSound;                   // 0x6E0(0x30)(Edit, Config, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UAkAudioEvent>          DialogueQuestionButtonHoverSound;                  // 0x710(0x30)(Edit, Config, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UAkAudioEvent>          DialogueQuestionButtonClickSound;                  // 0x740(0x30)(Edit, Config, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UAkAudioEvent>          HoldButtonHoverSound;                              // 0x770(0x30)(Edit, Config, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UAkAudioEvent>          HoldButtonClickSound;                              // 0x7A0(0x30)(Edit, Config, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UAkAudioEvent>          HoldButtonProgressSound;                           // 0x7D0(0x30)(Edit, Config, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UAkAudioEvent>          HoldButtonFinishedSound;                           // 0x800(0x30)(Edit, Config, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UAkAudioEvent>          InventoryCategoryIconHoverSound;                   // 0x830(0x30)(Edit, Config, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UAkAudioEvent>          InventoryCategoryIconClickSound;                   // 0x860(0x30)(Edit, Config, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UAkAudioEvent>          InventoryGridItemHoverSound;                       // 0x890(0x30)(Edit, Config, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UAkAudioEvent>          InventoryGridItemClickSound;                       // 0x8C0(0x30)(Edit, Config, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FDataTableRowHandle                   HoverFeedback;                                     // 0x8F0(0x10)(Edit, Config, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FDataTableRowHandle                   ClickFeedback;                                     // 0x900(0x10)(Edit, Config, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FDataTableRowHandle                   HoldProgressFeedback;                              // 0x910(0x10)(Edit, Config, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FDataTableRowHandle                   HoldFinishedFeedback;                              // 0x920(0x10)(Edit, Config, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FGameplayTag>                  ItemSortingOrder;                                  // 0x930(0x10)(Edit, ZeroConstructor, Config, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class UItemData>                 SocialCoinItems[0x3];                              // 0x940(0x18)(Edit, ZeroConstructor, Config, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UHexUISettings* GetDefaultObj();

};

// 0x30 (0x60 - 0x30)
// Class LOTF2.HexUmbralAttributeSet
class UHexUmbralAttributeSet : public UAttributeSet
{
public:
	struct FGameplayAttributeData                DeathWishProvisionalDamagePercentage;              // 0x30(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                FirstDeathProvisionalDamagePercentage;             // 0x40(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                DeathWishRefillHpPercentage;                       // 0x50(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UHexUmbralAttributeSet* GetDefaultObj();

};

// 0x58 (0x108 - 0xB0)
// Class LOTF2.HexUmbrieHeadAkComponentUpdater
class UHexUmbrieHeadAkComponentUpdater : public UActorComponent
{
public:
	class UMaterialParameterCollection*          UmbralMaterialParameterCollection;                 // 0xB0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkRtpc*                               UmbralVisibilityRTPC;                              // 0xB8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  LanternPositionName;                               // 0xC0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  LanternForwardVectorName;                          // 0xC8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  InitRadiusName;                                    // 0xD0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  EndRadiusName;                                     // 0xD8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  ConeLengthName;                                    // 0xE0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  RadiusFadeInName;                                  // 0xE8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  FadeOutDistanceName;                               // 0xF0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  InnerUmbralMaskName;                               // 0xF8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UAkAnathemaComponent>   AkComponentHead;                                   // 0x100(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UHexUmbrieHeadAkComponentUpdater* GetDefaultObj();

	void SetAkComponentHead(class UAkAnathemaComponent* NewAkComponentHead);
};

// 0x0 (0x28 - 0x28)
// Class LOTF2.HexValidationTestInterface
class IHexValidationTestInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IHexValidationTestInterface* GetDefaultObj();

};

// 0x88 (0x168 - 0xE0)
// Class LOTF2.HexWavesSpawnerComponent
class UHexWavesSpawnerComponent : public UHexApplySpawnConfigComponent
{
public:
	TSoftObjectPtr<class ASimpleCharacterSpawner> LinkedSpawner;                                     // 0xE0(0x30)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFloatRange                           RespawnDelay;                                      // 0x110(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxNumRespawns;                                    // 0x120(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ForcedTargetTime;                                  // 0x124(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DelayForFirstSpawn;                                // 0x128(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bKillSpawnedCharacterWhenLeaderDies;               // 0x12C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCheckForQueryWhenSpawning;                        // 0x12D(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2FED[0x1A];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ASimpleCharacterSpawner*               OwnerSpawner;                                      // 0x148(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2FEE[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexWavesSpawnerComponent* GetDefaultObj();

	void OnRespawnTimerFinished();
	void OnLinkedSpawnerCharacterSpawned(class ASimpleCharacterSpawner* Spawner, class ALOTF2Character* Character);
	void OnLinkedSpawnerCharacterDied(class ASimpleCharacterSpawner* Spawner, class ALOTF2Character* Character);
	void OnDelayFirstSpawnTimerFinished();
};

// 0x28 (0x58 - 0x30)
// Class LOTF2.HexWorldState
class UHexWorldState : public UWorldSubsystem
{
public:
	uint8                                        Pad_2FEF[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexWorldState* GetDefaultObj();

	void SetIntValue(class FName Key, int32 ValueToSet);
	int32 GetIntValue(class FName Key);
};

// 0x0 (0xB0 - 0xB0)
// Class LOTF2.HiddenInCinematicsComponent
class UHiddenInCinematicsComponent : public UActorComponent
{
public:

	static class UClass* StaticClass();
	static class UHiddenInCinematicsComponent* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class LOTF2.HitBoxDebugDrawData
class UHitBoxDebugDrawData : public UDataAsset
{
public:
	uint8                                        Pad_2FF0[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHitBoxDebugDrawData* GetDefaultObj();

};

// 0x28 (0x378 - 0x350)
// Class LOTF2.HitBoxesActor
class AHitBoxesActor : public AGameplayEffectsAreaActor
{
public:
	uint8                                        Pad_2FF1[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AHitBoxesActor* GetDefaultObj();

};

// 0x60 (0x310 - 0x2B0)
// Class LOTF2.HitBoxesComponent
class UHitBoxesComponent : public USceneComponent
{
public:
	TArray<struct FHitBoxDefinition>             HitBoxes;                                          // 0x2B0(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2FF6[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHitBoxesComponent* GetDefaultObj();

	void SetHitBoxCollisionEnabled(class FName BoneName, bool bEnable);
	void SetAllHitBoxesCollisionEnabled(bool bEnable);
	bool HitBoxCollisionExists(class FName BoneName);
	bool GetHitBoxCollisionEnabled(class FName BoneName);
};

// 0x0 (0x28 - 0x28)
// Class LOTF2.HitComponentInterface
class IHitComponentInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IHitComponentInterface* GetDefaultObj();

};

// 0x38 (0x5C0 - 0x588)
// Class LOTF2.HitBoxComponent
class UHitBoxComponent : public UBoxComponent
{
public:
	uint8                                        Pad_2FF7[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnHit;                                             // 0x590(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_            OnNearHit;                                         // 0x5A0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	bool                                         CanForwardHitToOwner;                              // 0x5B0(0x1)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         ReportHitEvents;                                   // 0x5B1(0x1)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         ReportNearHitEvents;                               // 0x5B2(0x1)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2FF8[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DamageModifier;                                    // 0x5B4(0x4)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2FF9[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHitBoxComponent* GetDefaultObj();

};

// 0x30 (0x5A0 - 0x570)
// Class LOTF2.HitSphereComponent
class UHitSphereComponent : public USphereComponent
{
public:
	uint8                                        Pad_2FFA[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnHit;                                             // 0x578(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_            OnNearHit;                                         // 0x588(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	bool                                         CanForwardHitToOwner;                              // 0x598(0x1)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         ReportHitEvents;                                   // 0x599(0x1)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         ReportNearHitEvents;                               // 0x59A(0x1)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2FFB[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DamageModifier;                                    // 0x59C(0x4)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UHitSphereComponent* GetDefaultObj();

};

// 0x30 (0x5A0 - 0x570)
// Class LOTF2.HitCapsuleComponent
class UHitCapsuleComponent : public UCapsuleComponent
{
public:
	uint8                                        Pad_2FFC[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnHit;                                             // 0x578(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_            OnNearHit;                                         // 0x588(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	bool                                         CanForwardHitToOwner;                              // 0x598(0x1)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         ReportHitEvents;                                   // 0x599(0x1)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         ReportNearHitEvents;                               // 0x59A(0x1)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2FFD[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DamageModifier;                                    // 0x59C(0x4)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UHitCapsuleComponent* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class LOTF2.HolsterableItem
class IHolsterableItem : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IHolsterableItem* GetDefaultObj();

	void SetIsHolstered(bool bHolstered);
	void RemoveHolsteredVisualOverride(class FName ID, bool bChecked);
	void RemoveHolsteredLogicOverride(class FName ID, bool bChecked);
	bool IsHolsteredVisual();
	bool IsHolsteredLogic();
	bool ContainsHolsteredVisualOverride(class FName ID);
	bool ContainsHolsteredLogicOverride(class FName ID);
	void AddHolsteredVisualOverride(bool bHolstered, class FName ID, int32 Priority);
	void AddHolsteredLogicOverride(bool bHolstered, class FName ID, int32 Priority);
};

// 0x98 (0xC0 - 0x28)
// Class LOTF2.HolsterableItemHelper
class UHolsterableItemHelper : public UObject
{
public:
	uint8                                        Pad_300D[0x98];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHolsterableItemHelper* GetDefaultObj();

	void SetIsHolstered(bool bHolstered);
	void RemoveHolsteredVisualOverride(class FName ID, bool bChecked);
	void RemoveHolsteredLogicOverride(class FName ID, bool bChecked);
	bool IsHolsteredVisual();
	bool IsHolsteredLogic();
	bool ContainsHolsteredVisualOverride(class FName ID);
	bool ContainsHolsteredLogicOverride(class FName ID);
	void AddHolsteredVisualOverride(bool bHolstered, class FName ID, int32 Priority);
	void AddHolsteredLogicOverride(bool bHolstered, class FName ID, int32 Priority);
};

// 0x18 (0x358 - 0x340)
// Class LOTF2.HorizontalOptionSelector
class UHorizontalOptionSelector : public UOptionSelectorBaseWidget
{
public:
	TArray<class FString>                        Options;                                           // 0x340(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class UCustomizationFeatureLabelWidget> LabelClass;                                        // 0x350(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UHorizontalOptionSelector* GetDefaultObj();

	void AddOptions(TArray<class FString>& Options);
};

// 0xA8 (0x370 - 0x2C8)
// Class LOTF2.HSVColorSliderWidget
class UHSVColorSliderWidget : public UCustomizationUserWidget
{
public:
	FMulticastInlineDelegateProperty_            OnColorChanged;                                    // 0x2C8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	class FString                                FeatureName;                                       // 0x2D8(0x10)(BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHasIntensity;                                     // 0x2E8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3016[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MinIntensity;                                      // 0x2EC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxIntensity;                                      // 0x2F0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EBodyShapeAttributeType           IntensityAttribute;                                // 0x2F4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHasTint;                                          // 0x2F5(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3017[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MinTint;                                           // 0x2F8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxTint;                                           // 0x2FC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EBodyShapeAttributeType           TintAmountAttribute;                               // 0x300(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3018[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UColorPreviewWidget*                   Preview;                                           // 0x308(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UColorBarWidget*                       Hue_Slider;                                        // 0x310(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonNumericTextBlock*               Hue_Value;                                         // 0x318(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UColorBarWidget*                       Saturation_Slider;                                 // 0x320(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonNumericTextBlock*               Saturation_Value;                                  // 0x328(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UColorBarWidget*                       Value_Slider;                                      // 0x330(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonNumericTextBlock*               Brightness_Value;                                  // 0x338(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHexGenericSlider*                     Intensity_Slider;                                  // 0x340(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonNumericTextBlock*               Intensity_Value;                                   // 0x348(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHexGenericSlider*                     Tint_Slider;                                       // 0x350(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonNumericTextBlock*               Tint_Value;                                        // 0x358(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3019[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHSVColorSliderWidget* GetDefaultObj();

	void UpdateSaturationBarAppearance();
	void UpdatePreviewColor(struct FLinearColor& Color);
	void UpdateBrightnessBarAppearance();
	void SetTint(float TintAmount);
	void SetSliderValues(struct FLinearColor& Color);
	void SetIntensity(float Intensity);
	void SetColor(struct FLinearColor& Color);
	void OnTintAmountChanged(float Value);
	void OnSaturationChanged(float Value);
	void OnIntensityChanged(float Value);
	void OnHueChanged(float Value);
	void OnBrightnessChanged(float Value);
	float GetIntensity();
	struct FLinearColor GetColor();
};

// 0xA0 (0x5E0 - 0x540)
// Class LOTF2.HudWidget
class UHudWidget : public UHexHUDLayout
{
public:
	class UPlayerStatsWidget*                    PlayerStatsWidget;                                 // 0x540(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOnlineHUDWidget*                      OnlineHUDWidget;                                   // 0x548(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DefaultToastLifetime;                              // 0x550(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_301F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  ForgeAnchorInsufficientResourcesToForgeText;       // 0x558(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class FText                                  FailedToUnlockDoorText;                            // 0x570(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class FText                                  OpenDoorIncorrectSideText;                         // 0x588(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3020[0x40];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHudWidget* GetDefaultObj();

	void ShowHUD();
	void OnOpenDoorIncorrectSide_BP();
	void OnForgeAnchorFailedToForge_BP(enum class EForgeAnchorFailReason FailReason);
	void OnFailedToUnlockDoor_BP(class UItemData* LockFailItem);
	void HideHUD();
	class FText GetOnOpenDoorIncorrectSideText();
	class FText GetOnFailedToUnlockDoorText();
	class FText GetForgeAnchorInsufficientResourcesToForgeText();
	void AddToastMessage(class FText& ToastMessageText);
};

// 0x0 (0x28 - 0x28)
// Class LOTF2.AIFactionInterface
class IAIFactionInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IAIFactionInterface* GetDefaultObj();

};

// 0x68 (0x308 - 0x2A0)
// Class LOTF2.IncreaseAttributeWidget
class UIncreaseAttributeWidget : public UCommonUserWidget
{
public:
	uint8                                        Pad_3024[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayAttribute                    GameplayAttribute;                                 // 0x2C0(0x38)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        OriginalValue;                                     // 0x2F8(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        CurrentValue;                                      // 0x2FC(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        IncrementValue;                                    // 0x300(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3025[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UIncreaseAttributeWidget* GetDefaultObj();

	void UpdateStats(bool bInitialStats);
	void SetValue(int32 CurrentValue);
	void SetCanIncreaseStat(bool CanIncrease);
	void PlayFeedback_CantIncreaseValue();
	void PlayFeedback_CantDecreaseValue();
	void PlayFeedback_ApplyChanges();
	void IncreaseStat();
	int32 GetIncrement();
	class UWidget* GetFocusTarget();
	void DecreaseStat();
};

// 0x58 (0x548 - 0x4F0)
// Class LOTF2.InGameBottomBarPanel
class UInGameBottomBarPanel : public UInGameMenuPanel
{
public:
	class UNavigationBoxWidget*                  NavigationBox;                                     // 0x4F0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<struct FGameplayTag, class FText>       CustomActions;                                     // 0x4F8(0x50)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UInGameBottomBarPanel* GetDefaultObj();

	void SetSwitchPercent(enum class ENavigationBoxOptions NavOption, float Progress);
	void SetOptionVisibility(enum class ENavigationBoxOptions NavigationBoxOptions, bool bVisible);
	void SetOptionName(enum class ENavigationBoxOptions Option, class FText& OptionName);
	void SetNavigationBoxOptions(uint8 InNavigationOptions);
	void SetCustomActions(TMap<struct FGameplayTag, class FText>& CustomActions);
	void RestoreOptions();
};

// 0x128 (0x600 - 0x4D8)
// Class LOTF2.InGameMenu
class UInGameMenu : public UHexActivatableWidget
{
public:
	class UFocusableButtonWidget*                Button_Back;                                       // 0x4D8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                      Text_LeaveSession;                                 // 0x4E0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UHexActivatableWidget>   EquipmentScreenClass;                              // 0x4E8(0x30)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UHexActivatableWidget>   InventoryScreenClass;                              // 0x518(0x30)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class USettingsMenuWidget>     SettingsMenuClass;                                 // 0x548(0x30)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UGamesListWidget>        GamesListClass;                                    // 0x578(0x30)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFocusableButtonWidget*                Button_Equipment;                                  // 0x5A8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFocusableButtonWidget*                Button_Inventory;                                  // 0x5B0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFocusableButtonWidget*                Button_Settings;                                   // 0x5B8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFocusableButtonWidget*                Button_QuitGame;                                   // 0x5C0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonLazyImage*                      Umbral_Patch;                                      // 0x5C8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UWorld>                 MainMenuLevel;                                     // 0x5D0(0x30)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UInGameMenu* GetDefaultObj();

	void UpdateRealm(enum class EGameRealm OldRealm, enum class EGameRealm NewRealm, enum class EActivateRealmReason Reason);
	void QuitGame();
	void OnSettingsButtonPressed();
	void OnQuitGameButtonPressed();
	void OnQuitGame(bool bQuitGame);
	void OnInventoryButtonPressed();
	void OnEquipmentButtonPressed();
	void OnBackPressed();
};

// 0xA8 (0x580 - 0x4D8)
// Class LOTF2.InGameMessageEventsWidget
class UInGameMessageEventsWidget : public UHexActivatableWidget
{
public:
	class UPlayerJoinedMessageWidget*            PlayerJoinedMessage;                               // 0x4D8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UItemPickupMessageWidget> ItemPickupMessageClass;                            // 0x4E0(0x30)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HideItemPickupMessageDelay;                        // 0x510(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  SkipPickupMessageActionName;                       // 0x514(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3030[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FDelegateProperty_                           InputActionEvent;                                  // 0x55C(0x10)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3031[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FItemPickupMessageInfo>        PickUpMessagesQueue;                               // 0x570(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UInGameMessageEventsWidget* GetDefaultObj();

	void ShowPlayerJoinedMessage(const class FString& PlayerName);
	void PlayShowItemPickupMessageAnimation();
	void PlayHideItemPickupMessageAnimation();
	void OnSkipMessage();
};

// 0x18 (0x2D8 - 0x2C0)
// Class LOTF2.InGameMessageNotification
class UInGameMessageNotification : public UExtensionPointEntryWidget
{
public:
	uint8                                        Pad_3032[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UInGameMessageNotification* GetDefaultObj();

	void SetMessage(class FText& Message);
	class FText GetMessage();
};

// 0xF8 (0x5E8 - 0x4F0)
// Class LOTF2.InGameTopBarPanel
class UInGameTopBarPanel : public UInGameMenuPanel
{
public:
	FMulticastInlineDelegateProperty_            OnSwitchToCategory;                                // 0x4F0(0x10)(ZeroConstructor, InstancedReference, BlueprintCallable, NativeAccessSpecifierPublic)
	class UDataTable*                            TopBarButtonsDefinition;                           // 0x500(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                               Container_LeaveSession;                            // 0x508(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                          Button_Box;                                        // 0x510(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                               Container_Button_Next;                             // 0x518(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                               Container_Button_Prev;                             // 0x520(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UTopBarButton>             ButtonClass;                                       // 0x528(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                  KickText;                                          // 0x530(0x18)(Edit, Protected, NativeAccessSpecifierProtected)
	class FText                                  LeaveSessionText;                                  // 0x548(0x18)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTag                          Tag_MoveToPrevSection;                             // 0x560(0x8)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          Tag_MoveToNextSection;                             // 0x568(0x8)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3041[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGameplayTag>                  ActiveCategories;                                  // 0x580(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TMap<struct FGameplayTag, class UTopBarButton*> ActiveButtons;                                     // 0x590(0x50)(ExportObject, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3042[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UInGameTopBarPanel* GetDefaultObj();

	void SetVisibilityOptions(bool bButtonsVisible, bool bNavigationVisible, bool bTitleVisible, class FText& Title);
	void SetPanelTitle(class FText& Title);
	void SetOnlineText(class FText& OnlineText);
	void SetCurrentCategory(const struct FGameplayTag& Category, bool bBroadcast);
	void SetButtonVisibility(const struct FGameplayTag& buttonId, bool bShouldBeVisible);
	void OnButtonRequestBack();
	void OnButtonPressed(const struct FGameplayTag& Identifier);
};

// 0x50 (0x308 - 0x2B8)
// Class LOTF2.InputActionButton
class UInputActionButton : public ULOTF2UserWidget
{
public:
	FMulticastInlineDelegateProperty_            OnInputActionComplete;                             // 0x2B8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UFocusableButtonWidget*                Root_Button;                                       // 0x2C8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInputActionImage*                     Image_Input;                                       // 0x2D0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bInteractable;                                     // 0x2D8(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3043[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          Action;                                            // 0x2DC(0x8)(Edit, BlueprintVisible, DisableEditOnTemplate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3044[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  TextDescription;                                   // 0x2E8(0x18)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	bool                                         IsBindingPersistent;                               // 0x300(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3045[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UInputActionButton* GetDefaultObj();

	void SetInputAction(const struct FGameplayTag& GameplayTag);
	void SetCanBeInteracted(bool bCanBeInteracted);
	void OnButtonPress();
	void BP_OnButtonPressed();
};

// 0x8 (0x2B0 - 0x2A8)
// Class LOTF2.InputActionImage
class UInputActionImage : public UImage
{
public:
	struct FGameplayTag                          Action;                                            // 0x2A8(0x8)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UInputActionImage* GetDefaultObj();

	void SetInputAction(struct FGameplayTag& GameplayTag);
	struct FGameplayTag GetInputAction();
};

// 0x18 (0x2B8 - 0x2A0)
// Class LOTF2.InteractableDoor
class AInteractableDoor : public AActor
{
public:
	class ULockComponent*                        LockComponent;                                     // 0x2A0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInteractionComponent*                 InteractionComponent;                              // 0x2A8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanOpen;                                          // 0x2B0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanClose;                                         // 0x2B1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShowWrongWayInteraction;                          // 0x2B2(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EDoorOpenRule                     DoorOpenRule;                                      // 0x2B3(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EDoorAxis                         ForwardAxis;                                       // 0x2B4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsOpen;                                           // 0x2B5(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_304A[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AInteractableDoor* GetDefaultObj();

	void Reset();
	bool Open(const TArray<class UItemData*>& Keys, class UInteractionContext* InteractionContext);
	void MulticastHandleOpen(const struct FDoorActionContext& DoorActionContext);
	void MulticastHandleClose(const struct FDoorActionContext& DoorActionContext);
	bool IsValidInteractionPosition(const struct FVector& InteractorPosition);
	void HandleOpen(const struct FDoorActionContext& DoorActionContext);
	void HandleClose(const struct FDoorActionContext& DoorActionContext);
	class ULockComponent* GetLockComponent();
	struct FVector GetInteractionForward();
	struct FVector GetAxisDirection(enum class EDoorAxis Axis);
	void ForceOpen();
	void Close();
	bool CanInteract(class UInteractionContext* InteractionContext);
};

// 0x2F8 (0x598 - 0x2A0)
// Class LOTF2.InteractableLadder
class AInteractableLadder : public AActor
{
public:
	class UChildActorComponent*                  HexNavLinkChildActor;                              // 0x2A0(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                       LadderRootComponent;                               // 0x2A8(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInteractionComponent*                 BottomClimbUpInteractionComponent;                 // 0x2B0(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInteractionComponent*                 TopClimbDownInteractionComponent;                  // 0x2B8(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UStaticMesh*>                   LadderEndStaticMeshes;                             // 0x2C0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UMaterialInterface*>            LadderEndMaterials;                                // 0x2D0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UInstancedStaticMeshComponent*> LadderEndInstancedMeshes;                          // 0x2E0(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class UStaticMesh*>                   LadderSideStaticMeshes;                            // 0x2F0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UMaterialInterface*>            LadderSideMaterials;                               // 0x300(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UInstancedStaticMeshComponent*> LadderSideInstancedMeshes;                         // 0x310(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class UStaticMesh*>                   LadderRungStaticMeshes;                            // 0x320(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UMaterialInterface*>            LadderRungMaterials;                               // 0x330(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class UInstancedStaticMeshComponent*> LadderRungInstancedMeshes;                         // 0x340(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class USceneComponent*                       LadderInstancedMeshesRoot;                         // 0x350(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        RandomSeedOverride;                                // 0x358(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        LadderLength;                                      // 0x35C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        BottomHeightOffset;                                // 0x360(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        TopHeightOffset;                                   // 0x364(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        LadderRungsBottomHeightOffset;                     // 0x368(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        LadderRungsTopHeightOffset;                        // 0x36C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        LadderRungsInbetweenDistance;                      // 0x370(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        LadderEndMeshLength;                               // 0x374(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        BottomRungHeight;                                  // 0x378(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_304B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USceneComponent*                       LadderBottom;                                      // 0x380(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USceneComponent*                       LadderTop;                                         // 0x388(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPrimitiveComponent*                   BottomInteractionTrigger;                          // 0x390(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPrimitiveComponent*                   TopInteractionTrigger;                             // 0x398(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USceneComponent*                       BottomUIRoot;                                      // 0x3A0(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USceneComponent*                       TopUIRoot;                                         // 0x3A8(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnchorForbiddenAreaComponent*         AnchorForbiddenAreaBottom;                         // 0x3B0(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnchorForbiddenAreaComponent*         AnchorForbiddenAreaTop;                            // 0x3B8(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UItemDropForbiddenAreaComponent*       ItemDropForbiddenAreaBottom;                       // 0x3C0(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UItemDropForbiddenAreaComponent*       ItemDropForbiddenAreaTop;                          // 0x3C8(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USceneComponent*                       PlayerLandingBottom;                               // 0x3D0(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USceneComponent*                       PlayerLandingTop;                                  // 0x3D8(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USceneComponent*                       PlayerEnterBottom;                                 // 0x3E0(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USceneComponent*                       PlayerEnterTop;                                    // 0x3E8(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bOverrideMeshCollisionSettings;                    // 0x3F0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_304C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBodyInstance                         BodyInstanceOverride;                              // 0x3F8(0x190)(Edit, NativeAccessSpecifierPrivate)
	TArray<class ALOTF2Character*>               OccupiedRungs;                                     // 0x588(0x10)(Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AInteractableLadder* GetDefaultObj();

	void SetLadderInteractionEnabled(bool bValue);
	void OnRep_OccupiedRungs();
	int32 GetTotalRungCount();
	class UInteractionComponent* GetTopInteractionComponent();
	struct FTransform GetLandingTopTransform();
	struct FTransform GetLandingBottomTransform();
	struct FTransform GetLadderBaseTransform();
	struct FTransform GetEnterTopTransform();
	struct FTransform GetEnterBottomTransform();
	float GetDistanceBetweenRungs();
	float GetBottomRungHeight();
	class UInteractionComponent* GetBottomInteractionComponent();
};

// 0xF8 (0x1B8 - 0xC0)
// Class LOTF2.InteractionComponent
class UInteractionComponent : public UDualRealmConfigurableComponent
{
public:
	FMulticastInlineDelegateProperty_            OnInteractionOverlapChanged;                       // 0xC0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnInteractionActivate;                             // 0xD0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnInteractionOccupiedChanged;                      // 0xE0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        MultiplayerValidInteractorsMask;                   // 0xF0(0x1)(Edit, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_304F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LookAngleThreshold;                                // 0xF4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FText                                  ActionText;                                        // 0xF8(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  OccupiedText;                                      // 0x110(0x18)(Edit, NativeAccessSpecifierPrivate)
	TMap<class FName, class UPrimitiveComponent*> ActivationBounds;                                  // 0x128(0x50)(ExportObject, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class USceneComponent*                       InteractionTransformComponent;                     // 0x178(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USceneComponent*                       InteractionUIRootComponent;                        // 0x180(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bOccupied;                                         // 0x188(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3050[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          GameplayEventToTrigger;                            // 0x18C(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          QuestTag;                                          // 0x194(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bInvisibleUI;                                      // 0x19C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3051[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                DisabledPlayerControllers;                         // 0x1A0(0x10)(Net, ZeroConstructor, NativeAccessSpecifierPrivate)
	bool                                         bInteractionEnabled;                               // 0x1B0(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3052[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UInteractionComponent* GetDefaultObj();

	void SetOccupiedText(class FText Text);
	void SetOccupied(bool bInOccupied);
	void SetMultiplayerValidInteractorsMask(uint8 MultiplayerValidInteractorsMask);
	void SetInteractionUIRootComponent(class USceneComponent* InteractionUIRootComponent);
	void SetInteractionTransformComponent(class USceneComponent* InteractionTransformComponent);
	void SetActivationBounds(class UPrimitiveComponent* ActivationBounds, class FName ActivationSlot);
	void SetActionText(class FText Text);
	void OnRep_Occupied();
	void OnRep_MultiplayerValidInteractorsMask(uint8 OldMultiplayerValidInteractorsMask);
	void OnActivationEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnActivationBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void NotifyOnInteractionActivate(class UInteractionContext* Context);
	bool IsOccupied();
	bool IsInvisibleUI();
	class FText GetOccupiedText();
	uint8 GetMultiplayerValidInteractorsMask();
	float GetLookAngleThreshold();
	class USceneComponent* GetInteractionUIRootComponent(class FName& Slot);
	class FText GetActionText();
	bool CanBeInteracted();
};

// 0x28 (0x50 - 0x28)
// Class LOTF2.InteractionContext
class UInteractionContext : public UObject
{
public:
	uint8                                        Pad_3053[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                Interactor;                                        // 0x30(0x8)(Net, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                InteractableObject;                                // 0x38(0x8)(Net, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInteractionComponent*                 Interaction;                                       // 0x40(0x8)(ExportObject, Net, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3054[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UInteractionContext* GetDefaultObj();

	class FName GetSlot();
	class AActor* GetInteractor();
	class UInteractionComponent* GetInteraction();
	class AActor* GetInteractableObject();
};

// 0x0 (0x28 - 0x28)
// Class LOTF2.CommandableInterface
class ICommandableInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class ICommandableInterface* GetDefaultObj();

	bool SendCommand(const class FString& Command);
};

// 0x0 (0x28 - 0x28)
// Class LOTF2.OpenableInterface
class IOpenableInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IOpenableInterface* GetDefaultObj();

	bool TriggerUnlock();
	bool TriggerOpen();
	bool TriggerLock();
	bool TriggerClose();
};

// 0x78 (0x128 - 0xB0)
// Class LOTF2.InteractionSystemComponent
class UInteractionSystemComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnCurrentInteractionChanged;                       // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnAvailableInteractionActivationProgressChanged;   // 0xC0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_305A[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FInteractionEntry>             PotentialInteractions;                             // 0x110(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_305B[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UInteractionSystemComponent* GetDefaultObj();

	void RemoveInteractionsFilter(class FName& FilterId, bool bChecked);
	void RemoveInteractionsEnabledOverride(class FName ID, bool bChecked);
	bool ContainsInteractionsEnabledOverride(class FName ID);
	bool AreInteractionsEnabled();
	void AddInteractionsFilter(class FName& FilterId, struct FGameplayTagQuery& Query);
	void AddInteractionsEnabledOverride(bool bInteractionsEnabled, class FName ID, int32 Priority);
};

// 0x10 (0x2C8 - 0x2B8)
// Class LOTF2.InteractionUIWidget
class UInteractionUIWidget : public ULOTF2UserWidget
{
public:
	class URichTextBlock*                        Interaction_Input_RichText;                        // 0x2B8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInputAction*                          InputAction_Interact;                              // 0x2C0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UInteractionUIWidget* GetDefaultObj();

	void OnKeyBindingChanged(class FName& Name);
};

// 0xA0 (0x578 - 0x4D8)
// Class LOTF2.IntroVideoPlayerWidget
class UIntroVideoPlayerWidget : public UHexActivatableWidget
{
public:
	TMap<class UMediaSource*, class UCommonVideoSubtitleAsset*> SubtitlesAssets;                                   // 0x4D8(0x50)(Edit, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	class UMediaPlaylist*                        Playlist;                                          // 0x528(0x8)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_305C[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USizeBox*                              VideoPlayerBox;                                    // 0x540(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                           SubtitlesWidget;                                   // 0x548(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonVideoPlayer*                    VideoPlayer;                                       // 0x550(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                         SplashScreenConfirmSound;                          // 0x558(0x8)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDataTableRowHandle                   GamepadRumbleFeedback;                             // 0x560(0x10)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_305D[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UIntroVideoPlayerWidget* GetDefaultObj();

	void SetReadyToFinish();
	void OnSkipMovie();
	void MoviesStarted();
	void FinalMovieStarted();
	void BP_StartMovies();
	void BP_PlayLogosAnimation();
	void AllMoviesFinished();
};

// 0x48 (0x2E8 - 0x2A0)
// Class LOTF2.InvasionArea
class AInvasionArea : public AActor
{
public:
	class USceneComponent*                       InnerColliders;                                    // 0x2A0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                       OuterColliders;                                    // 0x2A8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                         InnerCollisionBox;                                 // 0x2B0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                         OuterCollisionBox;                                 // 0x2B8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TSoftObjectPtr<class ATargetPoint>>   InvasionPlayerStartPositions;                      // 0x2C0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<TSoftObjectPtr<class ALOTF2FogGate>>  FogGatesWhenInvasionStarted;                       // 0x2D0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	struct FGameplayTag                          TriggerTag;                                        // 0x2E0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AInvasionArea* GetDefaultObj();

	void OnOuterCollisionEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnInnerCollisionBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void HandleQuestCompletedTagsAdded(struct FGameplayTagContainer& QuestTags);
};

// 0x98 (0xC8 - 0x30)
// Class LOTF2.InvasionDirector
class UInvasionDirector : public UWorldSubsystem
{
public:
	uint8                                        Pad_3060[0x60];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AInvasionArea*>                 AvailableInvasionAreas;                            // 0x90(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	class AInvasionArea*                         ActiveInvasionArea;                                // 0xA0(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3061[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UInvasionDirector* GetDefaultObj();

	void ShowInvasionMessageForInvaderWhenAllyJoined();
	void ShowInvasionMessageForAllyWhenInvaderJoined();
	void OnSearchingForInvasionChanged(class ALOTF2WorldGameSession* GameSession);
	void HandlePlayerRemovedForAlly(class APlayerState* PlayerState);
	void HandlePlayerAddedForInvader(class APlayerState* PlayerState);
	void HandlePlayerAddedForAlly(class APlayerState* PlayerState);
	void HandleNewPawn(class APawn* OldPawn, class APawn* NewPawn);
	void HandleInvaderPawnSetForAlly(class APlayerState* Player, class APawn* NewPawn, class APawn* OldPawn);
	void HandleInvaderPawnReady(class APlayerState* Player, class APawn* NewPawn, class APawn* OldPawn);
	void HandleInvaderFullyLoadedForInvader();
	void HandleAllyPawnSetForInvader(class APlayerState* Player, class APawn* NewPawn, class APawn* OldPawn);
	void HandleAllyPawnReady(class APlayerState* Player, class APawn* NewPawn, class APawn* OldPawn);
};

// 0x0 (0x28 - 0x28)
// Class LOTF2.InvasionNotActivePrecondition
class UInvasionNotActivePrecondition : public UItemActivationPrecondition
{
public:

	static class UClass* StaticClass();
	static class UInvasionNotActivePrecondition* GetDefaultObj();

};

// 0xD0 (0x388 - 0x2B8)
// Class LOTF2.InventoryItemPanel
class UInventoryItemPanel : public ULOTF2UserWidget
{
public:
	class UInventoryItemName*                    Item_Name;                                         // 0x2B8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShowFullImage;                                    // 0x2C0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3062[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          ShardIdentifierTag;                                // 0x2C4(0x8)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3063[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  MainShardEffect;                                   // 0x2D0(0x18)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class FText                                  SecondaryShardEffect;                              // 0x2E8(0x18)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class FText                                  ShardFormatEffects;                                // 0x300(0x18)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_3064[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UInventoryItem*                        InventoryItemToCompare;                            // 0x320(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3065[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UInventoryStatRow*                     STR_Scaling;                                       // 0x330(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryStatRow*                     AGI_Scaling;                                       // 0x338(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryStatRow*                     RAD_Scaling;                                       // 0x340(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryStatRow*                     INF_Scaling;                                       // 0x348(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryGenericInfoPanel*            Panel_GeneralInfo;                                 // 0x350(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStatRequirementsWidget*               Stat_Requirements;                                 // 0x358(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryStatRow*                     Stat_Weight;                                       // 0x360(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryItemImage*                   Item_Image;                                        // 0x368(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonRichTextBlock*                  Text_Long_Description;                             // 0x370(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonRichTextBlock*                  Text_Type;                                         // 0x378(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInventoryItem*                        InventoryItem;                                     // 0x380(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UInventoryItemPanel* GetDefaultObj();

};

// 0x20 (0x3A8 - 0x388)
// Class LOTF2.InventoryAmmunitionPanel
class UInventoryAmmunitionPanel : public UInventoryItemPanel
{
public:
	class UInventoryStatRow*                     Stat_AmmoCost;                                     // 0x388(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                          Panel_AttackPower;                                 // 0x390(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryStatRow*                     Stat_AttackPower;                                  // 0x398(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                          Panel_StatusEffects;                               // 0x3A0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UInventoryAmmunitionPanel* GetDefaultObj();

};

// 0x28 (0x3B0 - 0x388)
// Class LOTF2.InventoryArmorPanel
class UInventoryArmorPanel : public UInventoryItemPanel
{
public:
	class UPanelWidget*                          Panel_DamageMitigation;                            // 0x388(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPanelWidget*                          Panel_Resistances;                                 // 0x390(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidgetSwitcher*                       Description_Switcher;                              // 0x398(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class URuneEffectSummaryWidget*              RuneSummary;                                       // 0x3A0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3066[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UInventoryArmorPanel* GetDefaultObj();

};

// 0x18 (0x3A0 - 0x388)
// Class LOTF2.InventoryCatalystPanel
class UInventoryCatalystPanel : public UInventoryItemPanel
{
public:
	class UInventoryStatRow*                     Stat_SpellPower;                                   // 0x388(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryStatRow*                     Stat_SpellSlots;                                   // 0x390(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryStatRow*                     Stat_CatalystType;                                 // 0x398(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UInventoryCatalystPanel* GetDefaultObj();

};

// 0x28 (0x2C8 - 0x2A0)
// Class LOTF2.InventoryCategoryIcon
class UInventoryCategoryIcon : public UCommonUserWidget
{
public:
	uint8                                        Pad_3067[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFocusableButtonWidget*                Background_Button;                                 // 0x2B0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonLazyImage*                      Icon_Image;                                        // 0x2B8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3068[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UInventoryCategoryIcon* GetDefaultObj();

	void SetSelected(bool bSelected);
	void SetFocusable(bool bFocusable);
	void OnCategorySelected();
	struct FGameplayTag GetCategory();
};

// 0x120 (0x3C0 - 0x2A0)
// Class LOTF2.InventoryCharacterStatusPanel
class UInventoryCharacterStatusPanel : public UCommonUserWidget
{
public:
	TSoftClassPtr<class UItemData>               UmbralMemoriesClass;                               // 0x2A0(0x30)(Edit, BlueprintVisible, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUsePlayerLevelPrefix;                             // 0x2D0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_306A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  PlayerLevelPrefix;                                 // 0x2D8(0x18)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class UCommonTextStyle>          NormalValueStyle;                                  // 0x2F0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UCommonTextStyle>          IncreaseValueStyle;                                // 0x2F8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UCommonTextStyle>          DecreaseValueStyle;                                // 0x300(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                      Text_Weight;                                       // 0x308(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                      Text_PlayerLevel;                                  // 0x310(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonNumericTextBlock*               Text_PlayerVigor;                                  // 0x318(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonNumericTextBlock*               Text_NextLevelVigorRequirement;                    // 0x320(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UProgressBar*                          Level_Progress;                                    // 0x328(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                      Text_PlayerStrength;                               // 0x330(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                      Text_PlayerAgility;                                // 0x338(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                      Text_PlayerEndurance;                              // 0x340(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                      Text_PlayerVitality;                               // 0x348(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                      Text_PlayerFaith;                                  // 0x350(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                      Text_PlayerChaos;                                  // 0x358(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                      Text_PlayerCurrentHealth;                          // 0x360(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                      Text_PlayerCurrentMana;                            // 0x368(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                      Text_PlayerMaxStamina;                             // 0x370(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                      Text_PlayerEncumbranceLevel;                       // 0x378(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                      Text_PlayerItemDiscovery;                          // 0x380(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                      Text_PlayerCurrentPoiseLevel;                      // 0x388(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                      Text_PlayerMaxPoise;                               // 0x390(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                      Text_PlayerMaxPosture;                             // 0x398(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                      Text_RedOnlineCoins;                               // 0x3A0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                      Text_BlueOnlineCoins;                              // 0x3A8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                      Text_YellowOnlineCoins;                            // 0x3B0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                      Text_UmbralMemories;                               // 0x3B8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UInventoryCharacterStatusPanel* GetDefaultObj();

	void UpdateStats();
	void OnVigorChanged(int32 NewVigor);
	void OnInventoryItemEquipped(class UInventoryItem* EquippedItem, int32 ItemSlot);
	void OnInventoryItemChanged(class UInventoryItem* InventoryItem);
	void BP_UpdateWeight(float Percent, float MediumThreshold, float HeavyThreshold, float EncumberedThreshold, struct FLinearColor& WeightColor);
};

// 0x3E0 (0x490 - 0xB0)
// Class LOTF2.InventoryComponent
class UInventoryComponent : public UActorComponent
{
public:
	uint8                                        Pad_3086[0x70];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnItemAdded;                                       // 0x120(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnItemRemoved;                                     // 0x130(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnInventoryMassChanged;                            // 0x140(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnEquippedItemChanged;                             // 0x150(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnInventoryDirtied;                                // 0x160(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnContentChangedOnClient;                          // 0x170(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnItemEquipped;                                    // 0x180(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_3087[0x60];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCurveTableRowHandle                  PotionChargesCurve;                                // 0x1F0(0x10)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  PotionHealingMultiplierCurve;                      // 0x200(0x10)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<TSubclassOf<class UUpgradeMaterialItemData>, struct FPerLevelUpgradeCurveDefinition> PotionUpgradeCosts;                                // 0x210(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TMap<TSubclassOf<class UUpgradeMaterialItemData>, struct FPerLevelUpgradeCurveDefinition> LanternUpgradeCosts;                               // 0x260(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	int32                                        MaxInventorySize;                                  // 0x2B0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        ItemEquipSize;                                     // 0x2B4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UInventoryItem*>                Content;                                           // 0x2B8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPrivate)
	TArray<class UInventoryItem*>                OwningClientContentSent;                           // 0x2C8(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, NativeAccessSpecifierPrivate)
	TArray<class UInventoryItem*>                OwningClientContentNextBatch;                      // 0x2D8(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, RepNotify, NativeAccessSpecifierPrivate)
	TArray<class UInventoryItem*>                MinimalClientContent;                              // 0x2E8(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, RepNotify, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3088[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        EquippedItemSlotIndex;                             // 0x348(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3089[0x44];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FRunesSlottedToItem>           RunesSlottedToItems;                               // 0x390(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, NativeAccessSpecifierPrivate)
	TArray<class UInventoryItem*>                EquippedItems;                                     // 0x3A0(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, RepNotify, NativeAccessSpecifierPrivate)
	TArray<class UEquipableInventoryItem*>       EquippedGear;                                      // 0x3B0(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, RepNotify, NativeAccessSpecifierPrivate)
	TArray<struct FWeaponHolster>                HolsteredAmmo;                                     // 0x3C0(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, NativeAccessSpecifierPrivate)
	struct FWeaponHolster                        HolsteredMagic;                                    // 0x3D0(0x18)(Edit, Net, DisableEditOnTemplate, EditConst, NativeAccessSpecifierPrivate)
	TArray<class UInventoryItem*>                EquippedGestures;                                  // 0x3E8(0x10)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, NativeAccessSpecifierPrivate)
	class FText                                  ItemRewardFeedbackText;                            // 0x3F8(0x18)(Edit, NativeAccessSpecifierPrivate)
	enum class EFEquipmentSlot                   RangedAmmoSlot;                                    // 0x410(0x1)(Edit, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class ESelectedRangedOption             SelectedRangedOption;                              // 0x411(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_308A[0x1E];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          RemembranceItems;                                  // 0x430(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class FName>                          UniqueItems;                                       // 0x440(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                 InventoryTags;                                     // 0x450(0x20)(Net, NativeAccessSpecifierPrivate)
	bool                                         bNeedsContentReplicationActiveOverride;            // 0x470(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bContentFullyReplicated;                           // 0x471(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_308B[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bUseLootDropLocationOverride;                      // 0x473(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_308C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               LootDropLocationOverride;                          // 0x478(0x18)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UInventoryComponent* GetDefaultObj();

	void UnequipItemFromSlot(int32 Slot);
	void UnequipItem(class UInventoryItem* ItemToUnequip);
	void SetCurrentEquippedItemSlot(int32 Slot);
	void ServerUnequipItem(class UInventoryItem* ItemToUnequip);
	void ServerTryToUpgradePotion(class UInventoryItem* InventoryItem);
	void ServerTryToUpgradeLantern(class UInventoryItem* InventoryItem);
	void ServerTryToUpgradeItem(class UEquipableInventoryWeapon* WeaponItem);
	void ServerSetCurrentEquippedItemSlot(int32 Index);
	void ServerEquipItemToSlot(class UInventoryItem* Item, int32 Slot);
	void ServerConfirmContentReceived();
	void ServerAssignRuneToSlot(class UEquipableInventoryItem* AffectedItem, class ALOTF2Character* LOTF2Character, int32 SlotIndex, class UHexRuneInventoryItem* RuneToAssign);
	void RewardItemLootTableToPlayer(struct FDataTableRowHandle& LootTable);
	void RewardItem_BP(class UInventoryItem* InventoryItem);
	bool RemoveItemStock(class UInventoryItem* Item, int32 StockToRemove);
	void RemoveItemBySoftPath(struct FSoftObjectPath& ItemDataSoftPath, int32 StockToRemove);
	void RemoveItemByData(class UItemData* ItemData, int32 StockToRemove);
	bool RemoveItem(class UInventoryItem* Item);
	void RefillItemFromSoftPath(struct FSoftObjectPath& ItemDataSoftPath);
	void RefillItemFromItemData(class UItemData* ItemData);
	void RefillItemFromClass(TSubclassOf<class UItemData> ItemDataClass);
	void ReactOnInventoryMassChanged();
	bool Pay(TMap<class UItemData*, int32>& ItemsCost);
	void OverrideLootDropLocation(struct FVector& LootDropLocationOverride);
	void OnRep_SelectedRangedOption();
	void OnRep_RangedAmmoSlot(enum class EFEquipmentSlot& Prev);
	void OnRep_OwningClientContentNextBatch();
	void OnRep_MinimalClientContent();
	void OnRep_EquippedItemSlotIndex();
	void OnRep_EquippedItem();
	void OnRep_EquippedGear(TArray<class UEquipableInventoryItem*>& PrevEquippedGear);
	void OnRep_Content();
	void OnPawnSet(class APlayerState* PlayerState, class APawn* NewPawn, class APawn* OldPawn);
	void OnOwnerDeath(class AActor* InstigatorActor, struct FGameplayTagContainer& InstigatorTags, bool bDeathWasObserved);
	bool IsItemAlreadyEquipped(class UInventoryItem* Item, int32* Slot);
	bool IsInventoryFull();
	bool IsGearAlreadyEquipped(class UInventoryItem* Item, enum class EFEquipmentSlot* EquipmentSlot);
	bool HasItemFromSoftPath(struct FSoftObjectPath& ItemDataSoftPath);
	bool HasItemFromClass(TSubclassOf<class UItemData> ItemDataClass);
	bool HasItemAndStock(class UItemData* Item);
	bool HasItem(class UItemData* Item);
	bool HasCurrencyEnoughToBuy(class UInventoryItem* VendorInventoryItem, int32 AmountToBuy, bool UseSocialCurrencyPrice);
	void HandleContentChangedForClient();
	int32 GetMaxInventorySize();
	int32 GetLocalEquippedItemIndex();
	int32 GetItemEquipSize();
	class UInventoryItem* GetInventoryItemFromSoftPath(struct FSoftObjectPath& ItemDataSoftPath);
	class UInventoryItem* GetInventoryItemFromItemData(class UItemData* ItemData);
	class UInventoryItem* GetInventoryItemFromClass(TSubclassOf<class UItemData> ItemDataClass);
	TArray<class UInventoryItem*> GetFilteredContent(const struct FGameplayTag& CategoryFilter);
	int32 GetEquippedItemIndex();
	class UInventoryItem* GetEquippedItem();
	class UInventoryItem* GetEquipItemAtSlot(int32 Slot);
	TArray<class UInventoryItem*> GetContent();
	void EquipItemToSlot(class UInventoryItem* Item, int32 Slot);
	void DEBUG_SeverUpgradeAllEquippedItemsToLevel(TArray<enum class EFEquipmentSlot>& ItemSlots, int32 DesiredLevel);
	void DEBUG_SeverAddInventoryItem(TSubclassOf<class UItemData> ItemDataClass, int32 DesiredLevel, int32 AddUsableAmount);
	void DEBUG_ServerObtainAllWeapons(TArray<struct FEquipmentElement>& Items, int32 AddItemLevel);
	void DEBUG_ServerObtainAllUsables(TArray<struct FItemElement>& Usables);
	void DEBUG_ServerObtainAllUpgradeMaterials(TArray<struct FUpgradeMaterialElement>& UpgradeMaterialDatas);
	void DEBUG_ServerObtainAllTutorials(TArray<struct FItemElement>& Gestures);
	void DEBUG_ServerObtainAllTints(TArray<struct FItemElement>& Tints);
	void DEBUG_ServerObtainAllRunes(TArray<struct FItemElement>& Runes);
	void DEBUG_ServerObtainAllRangedWeapons(TArray<struct FEquipmentElement>& Items, int32 AddItemLevel);
	void DEBUG_ServerObtainAllMagicSpells(TArray<struct FEquipmentElement>& MagicSpells);
	void DEBUG_ServerObtainAllGestures(TArray<struct FItemElement>& Gestures);
	void DEBUG_ServerObtainAllArmorPieces(TArray<struct FEquipmentElement>& ArmorPieces);
	void DEBUG_ServerObtainAllAmmos(TArray<struct FEquipmentElement>& AmmoDatas);
	void ConsumeEquippedItem();
	void ClientWasRewarded(const struct FInventoryItemUIData& Data, bool PlayQuestItemSound);
	void ClearInventory();
	bool CanPay(TMap<class UItemData*, int32>& ItemsCost);
	bool CanBuild(class UItemData* Item);
	bool CanAffordToConsumeEquippedItem();
	bool Build(class UItemData* Item);
	class UInventoryItem* AddItemByData(class UItemData* Item, int32 Count);
	class UInventoryItem* AddItemByClass(TSubclassOf<class UItemData> ItemDataClass, int32 Count);
	class UInventoryItem* AddItem(class UInventoryItem* Item, bool bUsableNotAutoEquipable);
};

// 0x18 (0x2B8 - 0x2A0)
// Class LOTF2.InventoryGenericInfoPanel
class UInventoryGenericInfoPanel : public UCommonUserWidget
{
public:
	class UDataTable*                            ItemFamilyDefinition;                              // 0x2A0(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                          Panel_GeneralInfo;                                 // 0x2A8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UInventoryStatRow>         ItemStatsRowClass;                                 // 0x2B0(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UInventoryGenericInfoPanel* GetDefaultObj();

	void SetWeightDecreasedStatus(bool bWeightDecreased);
	class FText GetItemFamily(const struct FGameplayTag& ItemCategory);
};

// 0xA8 (0x5A0 - 0x4F8)
// Class LOTF2.InventoryInteractionPanel
class UInventoryInteractionPanel : public UGridInteractionPopupBase
{
public:
	uint8                                        Pad_308D[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFocusableButtonWidget*                Button_Use;                                        // 0x508(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UAmountSelectorWidget>   AmountSelectorWidgetClass;                         // 0x510(0x30)(Edit, DisableEditOnTemplate, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          UseInventoryItemTag;                               // 0x540(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          LeaveInventoryItemTag;                             // 0x548(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          DiscardInventoryItemTag;                           // 0x550(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                      Text_ItemName;                                     // 0x558(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInventoryItemImage*                   Item_Image;                                        // 0x560(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonLazyImage*                      Umbral_Patch;                                      // 0x568(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFocusableButtonWidget*                Button_UseSelected;                                // 0x570(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFocusableButtonWidget*                Button_Leave;                                      // 0x578(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFocusableButtonWidget*                Button_LeaveSelected;                              // 0x580(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFocusableButtonWidget*                Button_Discard;                                    // 0x588(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_308E[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UInventoryInteractionPanel* GetDefaultObj();

	void UpdateRealm(enum class EGameRealm OldRealm, enum class EGameRealm NewRealm, enum class EActivateRealmReason Reason);
	void RefreshItemOptions();
	void OnItemUseSelected();
	void OnItemUse();
	void OnItemLeaveSelected();
	void OnItemLeave();
	void OnItemDiscard();
	void OnItemAmountSelected(int32 Amount);
	void BP_RefreshOptions();
};

// 0x0 (0x28 - 0x28)
// Class LOTF2.InventoryItemFactory
class UInventoryItemFactory : public UObject
{
public:

	static class UClass* StaticClass();
	static class UInventoryItemFactory* GetDefaultObj();

};

// 0x48 (0x2E8 - 0x2A0)
// Class LOTF2.InventoryItemImage
class UInventoryItemImage : public UCommonUserWidget
{
public:
	class UCommonLazyImage*                      Item_Image;                                        // 0x2A0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTintGridItem*                         Item_Tint;                                         // 0x2A8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidgetSwitcher*                       Switcher_Item;                                     // 0x2B0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UTexture2D>             Icon;                                              // 0x2B8(0x30)(Edit, DisableEditOnTemplate, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UInventoryItemImage* GetDefaultObj();

	void SetItem(class UInventoryItem* InventoryItem, bool bFullItem);
	void SetIsEquipped(bool bEquipped);
	void SetImage(TSoftObjectPtr<class UTexture2D>& Image);
};

// 0x18 (0x2B8 - 0x2A0)
// Class LOTF2.InventoryItemName
class UInventoryItemName : public UCommonUserWidget
{
public:
	class UCommonTextBlock*                      Item_Name;                                         // 0x2A0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPanelWidget*                          Rune_Container;                                    // 0x2A8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class URuneSlotIcon>             RuneSlotClass;                                     // 0x2B0(0x8)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UInventoryItemName* GetDefaultObj();

};

// 0x10 (0x398 - 0x388)
// Class LOTF2.InventoryMagicPanel
class UInventoryMagicPanel : public UInventoryItemPanel
{
public:
	class UInventoryStatRow*                     Stat_ManaCost;                                     // 0x388(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryStatRow*                     Stat_CatalystType;                                 // 0x390(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UInventoryMagicPanel* GetDefaultObj();

};

// 0x18 (0x3A0 - 0x388)
// Class LOTF2.InventoryRangedPanel
class UInventoryRangedPanel : public UInventoryItemPanel
{
public:
	class UPanelWidget*                          Panel_AttackPower;                                 // 0x388(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryStatRow*                     Stat_AttackPower;                                  // 0x390(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                          Panel_StatusEffects;                               // 0x398(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UInventoryRangedPanel* GetDefaultObj();

};

// 0x10 (0x398 - 0x388)
// Class LOTF2.InventoryRunePanel
class UInventoryRunePanel : public UInventoryItemPanel
{
public:
	TSubclassOf<class URuneSocketWidget>         RuneSocketWidgetClass;                             // 0x388(0x8)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPanelWidget*                          Runes_Container;                                   // 0x390(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UInventoryRunePanel* GetDefaultObj();

};

// 0x150 (0x640 - 0x4F0)
// Class LOTF2.InventoryScreenWidget
class UInventoryScreenWidget : public UInGameMenuPanel
{
public:
	uint8                                        Pad_3090[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UInventoryTitle*                       Inventory_Title;                                   // 0x500(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShowItemComparison;                               // 0x508(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3091[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EItemInfoDisplayMode              ItemDisplayMode;                                   // 0x50C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonAnimatedSwitcher*               Switcher_ItemMode;                                 // 0x510(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEquipmentItemPanel*                   Item_Equipped;                                     // 0x518(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEquipmentItemPanel*                   Item_Comparison;                                   // 0x520(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                          Container_Lore;                                    // 0x528(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryItemPanel*                   Panel_Lore;                                        // 0x530(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          Tag_MoveToPrevSection;                             // 0x538(0x8)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          Tag_MoveToNextSection;                             // 0x540(0x8)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EItemInfoDisplayMode              DisplayMode;                                       // 0x548(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3092[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCommonTextBlock*                      Text_InventorySize;                                // 0x550(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FInventoryCategoryElement>     InventoryCategories;                               // 0x558(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class UItemGridPanel>            ItemGridPanelClass;                                // 0x568(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          CurrentCategory;                                   // 0x570(0x8)(BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          AllItemsCategory;                                  // 0x578(0x8)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryGridPanelBase*               ItemsPanel;                                        // 0x580(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPanelWidget*                          Panel_Focused_Item;                                // 0x588(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPanelWidget*                          Panel_Item_Grid;                                   // 0x590(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPanelWidget*                          Panel_Character_Status;                            // 0x598(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInventoryCharacterStatusPanel*        Character_Status;                                  // 0x5A0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonAnimatedSwitcher*               Item_Type_Switcher;                                // 0x5A8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonAnimatedSwitcher*               Lore_Switcher;                                     // 0x5B0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<struct FGameplayTag, class UInventoryItemPanel*> ItemTypePanels;                                    // 0x5B8(0x50)(ExportObject, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3093[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UInventoryScreenWidget* GetDefaultObj();

	void UpdateRealm(enum class EGameRealm OldRealm, enum class EGameRealm NewRealm, enum class EActivateRealmReason Reason);
	void RefreshFocus_BP();
	void RefreshFocus();
	void OnPrevCategorySelected();
	void OnNextCategorySelected();
	void OnItemFocused(class UObject* InventoryItem);
	void OnCycleVisualizationProgress(float Progress);
	void OnCycleVisualizationModes();
	void OnCycleInfoVisualizationModes();
	void OnCategorySelected(const struct FGameplayTag& CategoryTag);
	class UInventoryGridPanelBase* GetItemGridPanel();
	class UWidget* GetFocusTarget();
	void BP_SelectGrid();
};

// 0x0 (0x388 - 0x388)
// Class LOTF2.InventoryShardPanel
class UInventoryShardPanel : public UInventoryItemPanel
{
public:

	static class UClass* StaticClass();
	static class UInventoryShardPanel* GetDefaultObj();

};

// 0x50 (0x2F0 - 0x2A0)
// Class LOTF2.InventoryStatRow
class UInventoryStatRow : public UCommonUserWidget
{
public:
	bool                                         bUsePercentValue;                                  // 0x2A0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3094[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCommonTextBlock*                      Text_Stat;                                         // 0x2A8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                      Text_Value;                                        // 0x2B0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                      Text_ValueCompare;                                 // 0x2B8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UCommonTextStyle>          NormalValueStyle;                                  // 0x2C0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UCommonTextStyle>          IncreaseValueStyle;                                // 0x2C8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UCommonTextStyle>          DecreaseValueStyle;                                // 0x2D0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                  Percent_Format;                                    // 0x2D8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UInventoryStatRow* GetDefaultObj();

	void ShowBackground(bool bShowBackground);
	void SetStatRequirementsStatus(bool bPlayerHasStats, bool bRequirementsIgnored);
};

// 0x0 (0x3A8 - 0x3A8)
// Class LOTF2.InventoryThrowablePanel
class UInventoryThrowablePanel : public UInventoryAmmunitionPanel
{
public:

	static class UClass* StaticClass();
	static class UInventoryThrowablePanel* GetDefaultObj();

};

// 0x10 (0x2B0 - 0x2A0)
// Class LOTF2.InventoryTitle
class UInventoryTitle : public UCommonUserWidget
{
public:
	enum class ETitleScreenMode                  TitleMode;                                         // 0x2A0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3095[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCommonLazyImage*                      Umbral_Patch;                                      // 0x2A8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UInventoryTitle* GetDefaultObj();

	void UpdateRealm(enum class EGameRealm GameRealm);
	void SetMode(enum class ETitleScreenMode InventoryScreenMode);
};

// 0x60 (0x3E8 - 0x388)
// Class LOTF2.InventoryWeaponPanel
class UInventoryWeaponPanel : public UInventoryItemPanel
{
public:
	struct FGameplayTag                          ShieldIdentifier;                                  // 0x388(0x8)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                          Panel_AttackPower;                                 // 0x390(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInventoryStatRow*                     Stat_AttackPower;                                  // 0x398(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPanelWidget*                          Panel_StatusEffects;                               // 0x3A0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInventoryStatRow*                     Stat_RuneSlots;                                    // 0x3A8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGridPanel*                            Panel_Stats;                                       // 0x3B0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPanelWidget*                          Panel_GuardProtection;                             // 0x3B8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPanelWidget*                          Panel_ScalingRows;                                 // 0x3C0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPanelWidget*                          Container_AttackPower;                             // 0x3C8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPanelWidget*                          Container_GuardProtection;                         // 0x3D0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class URuneEffectSummaryWidget*              RuneSummary;                                       // 0x3D8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3096[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UInventoryWeaponPanel* GetDefaultObj();

};

// 0x0 (0xA8 - 0xA8)
// Class LOTF2.InvulnerableWindow
class UInvulnerableWindow : public UAnimNotifyState_GameplayEffect
{
public:

	static class UClass* StaticClass();
	static class UInvulnerableWindow* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class LOTF2.IsForgeAnchorAbilityInValidSpotPrecondition
class UIsForgeAnchorAbilityInValidSpotPrecondition : public UItemActivationPrecondition
{
public:

	static class UClass* StaticClass();
	static class UIsForgeAnchorAbilityInValidSpotPrecondition* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class LOTF2.IsHostPrecondition
class UIsHostPrecondition : public UItemActivationPrecondition
{
public:

	static class UClass* StaticClass();
	static class UIsHostPrecondition* GetDefaultObj();

};

// 0x18 (0x2D8 - 0x2C0)
// Class LOTF2.ItemCollectNotification
class UItemCollectNotification : public UExtensionPointEntryWidget
{
public:
	class UCommonTextBlock*                      Text_ItemPickupMessage;                            // 0x2C0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                      Text_ItemAmount;                                   // 0x2C8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Image_ItemIcon;                                    // 0x2D0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UItemCollectNotification* GetDefaultObj();

};

// 0x30 (0x2D0 - 0x2A0)
// Class LOTF2.ItemContainer
class AItemContainer : public AActor
{
public:
	TArray<class UItemData*>                     Contents;                                          // 0x2A0(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class USphereComponent*                      InteractionTrigger;                                // 0x2B0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInteractionComponent*                 InteractionComponent;                              // 0x2B8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHasBeenOpened;                                    // 0x2C0(0x1)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAutoAddItemToInventory;                           // 0x2C1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3098[0xE];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AItemContainer* GetDefaultObj();

	bool TryOpenInteraction(class AController* Interactor);
	void StartContainerOpen();
	void MulticastStartContainerOpen();
	bool GetHasBeenOpened();
	void AddItemToInventory();
};

// 0x8 (0x590 - 0x588)
// Class LOTF2.ItemDropForbiddenAreaComponent
class UItemDropForbiddenAreaComponent : public UBoxComponent
{
public:
	uint8                                        Pad_3099[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UItemDropForbiddenAreaComponent* GetDefaultObj();

};

// 0x0 (0x2D8 - 0x2D8)
// Class LOTF2.ItemDropForbiddenVolume
class AItemDropForbiddenVolume : public AVolume
{
public:

	static class UClass* StaticClass();
	static class AItemDropForbiddenVolume* GetDefaultObj();

};

// 0x30 (0x58 - 0x28)
// Class LOTF2.ItemDropManager
class UItemDropManager : public UObject
{
public:
	TSoftObjectPtr<class UDataTable>             DropTable;                                         // 0x28(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UItemDropManager* GetDefaultObj();

	void SetDropTable(class UDataTable* DataTable);
	class UItemData* GetItemDropFromRow(class FName RowName);
};

// 0x70 (0x98 - 0x28)
// Class LOTF2.ItemLoreDecorator
class UItemLoreDecorator : public URichTextBlockDecorator
{
public:
	TSubclassOf<class UCommonTextStyle>          HiddenTextStyle;                                   // 0x28(0x8)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UCommonTextStyle>          GreyTextStyle;                                     // 0x30(0x8)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStatsContainerComponent*              StatsContainerComponent;                           // 0x38(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_309A[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  NotEnoughFaithText;                                // 0x50(0x18)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class FText                                  NotEnoughChaosText;                                // 0x68(0x18)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class FText                                  NotEnoughChaosFaithText;                           // 0x80(0x18)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UItemLoreDecorator* GetDefaultObj();

	void SetPlayerStats(class UStatsContainerComponent* StatsContainerComponent, struct FItemLoreStatRequirements& ItemRequirements);
};

// 0x28 (0x50 - 0x28)
// Class LOTF2.ItemNameDecorator
class UItemNameDecorator : public URichTextBlockDecorator
{
public:
	TSubclassOf<class UCommonTextStyle>          ItemNameTextStyle;                                 // 0x28(0x8)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_309B[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UItemNameDecorator* GetDefaultObj();

	void SetItem(class FName& ItemId);
};

// 0x28 (0x500 - 0x4D8)
// Class LOTF2.ItemPickupMessageWidget
class UItemPickupMessageWidget : public UHexActivatableWidget
{
public:
	class UTextBlock*                            Text_ItemPickupMessage;                            // 0x4D8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            Text_ItemAmount;                                   // 0x4E0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Image_ItemIcon;                                    // 0x4E8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInputActionImage*                     Image_Enter;                                       // 0x4F0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonLazyImage*                      Umbral_Patch;                                      // 0x4F8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UItemPickupMessageWidget* GetDefaultObj();

	void UpdateRealm(enum class EGameRealm OldRealm, enum class EGameRealm NewRealm, enum class EActivateRealmReason Reason);
};

// 0x30 (0x2E8 - 0x2B8)
// Class LOTF2.ItemSlotWidget
class UItemSlotWidget : public ULOTF2UserWidget
{
public:
	class UImage*                                Image_Frame;                                       // 0x2B8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Image_Frame_Active;                                // 0x2C0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Image_Item;                                        // 0x2C8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            Text_Amount;                                       // 0x2D0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryItem*                        Item;                                              // 0x2D8(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_309C[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UItemSlotWidget* GetDefaultObj();

	void SetItemUsable(bool bUsable, bool bShouldUseAnimation);
};

// 0x70 (0x560 - 0x4F0)
// Class LOTF2.JournalSettingsSection
class UJournalSettingsSection : public UInGameMenuPanel
{
public:
	int32                                        CurrentPage_Id;                                    // 0x4F0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_309D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  PageNumberFormat;                                  // 0x4F8(0x18)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class UCommonLazyImage*                      Journal_Image;                                     // 0x510(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                      Page_Text;                                         // 0x518(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                      Text_PageNumber;                                   // 0x520(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidgetAnimation*                      PageSwitch;                                        // 0x528(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FJournalPageDefinition>        UnlockedPages;                                     // 0x530(0x10)(Edit, ZeroConstructor, EditConst, NativeAccessSpecifierPrivate)
	class UDataTable*                            Journal_DataTable;                                 // 0x540(0x8)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_309E[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          Tag_PreviousCategory;                              // 0x550(0x8)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          Tag_NextCategory;                                  // 0x558(0x8)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UJournalSettingsSection* GetDefaultObj();

	void ShowPage(int32 PageIndex);
	void OnPreviousPage();
	void OnNextPage();
};

// 0x10 (0xC0 - 0xB0)
// Class LOTF2.JumpForceComponent
class UJumpForceComponent : public UActorComponent
{
public:
	float                                        JumpHeight;                                        // 0xB0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JumpLength;                                        // 0xB4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ForceDuration;                                     // 0xB8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_309F[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UJumpForceComponent* GetDefaultObj();

};

// 0x38 (0x2F0 - 0x2B8)
// Class LOTF2.LandscapeCapture
class ALandscapeCapture : public ASceneCapture2D
{
public:
	class UMaterialParameterCollection*          MaterialParameters;                                // 0x2B8(0x8)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneCaptureComponent2D*              NormalCaptureComponent2D;                          // 0x2C0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RecaptureDistance;                                 // 0x2C8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_30A0[0x24];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ALandscapeCapture* GetDefaultObj();

};

// 0x8 (0x80 - 0x78)
// Class LOTF2.LanternLightDropInventoryItem
class ULanternLightDropInventoryItem : public UInventoryItem
{
public:
	int32                                        VigorQuantity;                                     // 0x78(0x4)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bHostDrop;                                         // 0x7C(0x1)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_30A1[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ULanternLightDropInventoryItem* GetDefaultObj();

	void SetVigorQuantity(int32 Value);
};

// 0x48 (0x460 - 0x418)
// Class LOTF2.LanternLightDropPickup
class ALanternLightDropPickup : public APickup
{
public:
	uint8                                        Pad_30A2[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector_NetQuantize                   TargetFallLocation;                                // 0x440(0x18)(BlueprintVisible, Net, SaveGame, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_30A3[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ALanternLightDropPickup* GetDefaultObj();

	void SetTargetFallLocation(struct FVector_NetQuantize& Location);
};

// 0x10 (0x2C8 - 0x2B8)
// Class LOTF2.LanternRangedItemWidget
class ULanternRangedItemWidget : public ULOTF2UserWidget
{
public:
	class UImage*                                Image_Ranged_Icon;                                 // 0x2B8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Image_Ranged_Background_Active;                    // 0x2C0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ULanternRangedItemWidget* GetDefaultObj();

	void SetWeaponUsable(bool bWeaponIsUsable);
	void SetImage(class UTexture2D* ItemTexture);
};

// 0x60 (0x550 - 0x4F0)
// Class LOTF2.RuneSocketScreen
class URuneSocketScreen : public UInGameMenuPanel
{
public:
	class UHexTileView*                          WeaponRunes_Grid;                                  // 0x4F0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URuneSocketGrid*                       Panel_Grid;                                        // 0x4F8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                      Text_ItemName;                                     // 0x500(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSelectingRune;                                    // 0x508(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_30A5[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CurrentWeaponRuneIdx;                              // 0x50C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          RuneItemTag;                                       // 0x510(0x8)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URuneInfoPanel*                        Panel_RuneInfo;                                    // 0x518(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URuneInfoPanel*                        Panel_RuneComparison;                              // 0x520(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Image_Comparison;                                  // 0x528(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URuneInfoPanel*                        Panel_Comparison;                                  // 0x530(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryItemImage*                   Item_Image;                                        // 0x538(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEquipableInventoryItem*               AffectedItem;                                      // 0x540(0x8)(BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_30A6[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class URuneSocketScreen* GetDefaultObj();

	void SelectWeaponRune(class UObject* InventoryItem);
	void OnUnequipSelectedRune();
	void OnRuneInteracted(class UObject* InventoryItem);
	void OnRuneFocused(class UObject* InventoryItem);
	void OnInteractionComplete(class UHexRuneInventoryItem* InventoryItem, int32 RuneIdx);
	void BP_SelectWeaponRune();
	void BP_SelectRuneListPanel();
	void BP_OnRuneInteracted(class UObject* InventoryItem);
	void BP_InventoryEmpty(bool bIsEmpty);
	void BP_ConfirmApplyRunes();
	void BP_CloseWithoutConfirm();
};

// 0x18 (0x568 - 0x550)
// Class LOTF2.LanternShardInspectPanel
class ULanternShardInspectPanel : public URuneSocketScreen
{
public:
	struct FGameplayCueTag                       GameplayCueTagOnShardAttached;                     // 0x550(0x8)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class UHexTileView*                          MainShard_Grid;                                    // 0x558(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHexTileView*                          SecondaryShard_Grid;                               // 0x560(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ULanternShardInspectPanel* GetDefaultObj();

	void OnShardAttached();
	void BP_OnShardSelected(class UHexTileView* ShardList);
};

// 0x100 (0x3B8 - 0x2B8)
// Class LOTF2.LanternStanceWidget
class ULanternStanceWidget : public ULOTF2UserWidget
{
public:
	struct FGameplayTag                          LanternHoldTag;                                    // 0x2B8(0x8)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          ForgedAnchorAvailableTag;                          // 0x2C0(0x8)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                Image_DeathWishLoading;                            // 0x2C8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                Image_DeathWishLoading_Background;                 // 0x2D0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UAnathemaGameplayAbility>  DeathWishTransitionAbility;                        // 0x2D8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>           DeathWishGameplayEffect;                           // 0x2E0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_30A7[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class UItemData>               AnchorSeedClass;                                   // 0x2F8(0x30)(Edit, BlueprintVisible, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bActionsAreVisible;                                // 0x328(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_30A8[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UInputAction*                          MatchingInputActionSoulflay;                       // 0x330(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInputAction*                          MatchingInputActionSyphon;                         // 0x338(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInputAction*                          MatchingInputActionAnchor;                         // 0x340(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInputAction*                          MatchingInputActionSuicide;                        // 0x348(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                          Container_AnchorSeeds;                             // 0x350(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                      Text_AnchorSeedsAmount;                            // 0x358(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URichTextBlock*                        InputActionTextSoulflay;                           // 0x360(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URichTextBlock*                        InputActionTextSyphon;                             // 0x368(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URichTextBlock*                        InputActionTextAnchor;                             // 0x370(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URichTextBlock*                        InputActionTextSuicide;                            // 0x378(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOverlay*                              Overlay_Left;                                      // 0x380(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOverlay*                              Overlay_Top;                                       // 0x388(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      OnForgedAnchorAvailableAnimation_Small;            // 0x390(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      OnForgedAnchorAvailableAnimation_Big;              // 0x398(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_30A9[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ULanternStanceWidget* GetDefaultObj();

	void UpdateMultiplayerVisibility();
	void UpdateAnchorSeeds();
	void SetActionsVisibility(bool bVisible, bool bForced);
	void OnPlayerCharacterSet(class APlayerCharacterController* PlayerController, class APlayerCharacter* PlayerCharacter, class APlayerCharacter* PrevPlayerCharacter);
	void OnKeyBindingChanged(class FName& KeyBindingName);
	void OnForgedAnchorPlanted(class ADualRealmAnchorActor* ForgedAnchor);
	bool GetActionsVisibility();
	void BP_UpdateAnchorSeeds(int32 Amount);
	void BP_UpdateActionsVisibility(bool bVisible);
	void BP_StopSmallWidgetAnimation();
	void BP_StopBigWidgetAnimation();
	void BP_PlaySmallWidgetAnimation();
	void BP_PlayBigWidgetAnimation();
};

// 0x10 (0x500 - 0x4F0)
// Class LOTF2.LanternUpgradeWidget
class ULanternUpgradeWidget : public UItemUpgradeWidgetBase
{
public:
	TArray<class FText>                          UpgradeDescriptions;                               // 0x4F0(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ULanternUpgradeWidget* GetDefaultObj();

};

// 0x40 (0x2F8 - 0x2B8)
// Class LOTF2.LegalTextWidget
class ULegalTextWidget : public ULOTF2UserWidget
{
public:
	FMulticastInlineDelegateProperty_            OnUserAcceptsLegalStuff;                           // 0x2B8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnUserDeclinesLegalStuff;                          // 0x2C8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	class UInputAction*                          ScrollTextInputAction;                             // 0x2D8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UScrollBox*                            Scroll_LegalStuff;                                 // 0x2E0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHoldButton*                           Button_Accept;                                     // 0x2E8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFocusableButtonWidget*                Button_Decline;                                    // 0x2F0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ULegalTextWidget* GetDefaultObj();

	void OnUserScrolled(float CurrentOffset);
};

// 0x28 (0x60 - 0x38)
// Class LOTF2.LegendaryEditionSettings
class ULegendaryEditionSettings : public UHexDeveloperSettings
{
public:
	struct FGameplayTagContainer                 FilterTagContainer;                                // 0x38(0x20)(Edit, Config, NativeAccessSpecifierPublic)
	float                                        NotificationLength;                                // 0x58(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_30AA[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ULegendaryEditionSettings* GetDefaultObj();

};

// 0xA0 (0xD0 - 0x30)
// Class LOTF2.LegendaryEditionManager
class ULegendaryEditionManager : public UGameInstanceSubsystem
{
public:
	TMap<struct FGameplayTag, bool>              UnlockedCharacterTags;                             // 0x30(0x50)(SaveGame, NativeAccessSpecifierPrivate)
	TMap<struct FGameplayTag, bool>              UnlockedAreasTags;                                 // 0x80(0x50)(SaveGame, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ULegendaryEditionManager* GetDefaultObj();

};

// 0x88 (0x578 - 0x4F0)
// Class LOTF2.LegendaryEditionPanel
class ULegendaryEditionPanel : public UInGameMenuPanel
{
public:
	class UFocusableButtonWidget*                Button_ArtBook;                                    // 0x4F0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFocusableButtonWidget*                Button_Gallery;                                    // 0x4F8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFocusableButtonWidget*                Button_OriginalSoundtrackPlayer;                   // 0x500(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UWorld>                 SoundtrackPlayerLevel;                             // 0x508(0x30)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  GalleryLevel;                                      // 0x538(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UWorld>                 ArtBookLevel;                                      // 0x540(0x30)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          MainMenuPanelTag;                                  // 0x570(0x8)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ULegendaryEditionPanel* GetDefaultObj();

	void OnOriginalSoundtrackPlayerButton();
	void OnGalleryButton();
	void OnArtBookButton();
};

// 0x60 (0x300 - 0x2A0)
// Class LOTF2.LevelUpStatRow
class ULevelUpStatRow : public UCommonUserWidget
{
public:
	class UCommonNumericTextBlock*               Text_PlayerMaxStat;                                // 0x2A0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UCommonTextStyle>          NormalValueStyle;                                  // 0x2A8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UCommonTextStyle>          IncreaseValueStyle;                                // 0x2B0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UCommonTextStyle>          DecreaseValueStyle;                                // 0x2B8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayAttribute                    GameplayAttribute;                                 // 0x2C0(0x38)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InitialValue;                                      // 0x2F8(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_30AB[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ULevelUpStatRow* GetDefaultObj();

	void BP_OnValueUpdated(float Value, float NewValue);
};

// 0x50 (0x130 - 0xE0)
// Class LOTF2.LinkSpawnersComponent
class ULinkSpawnersComponent : public UHexApplySpawnConfigComponent
{
public:
	TMap<TSoftObjectPtr<class ASimpleCharacterSpawner>, class FName> LinkedSpawnersWithBlackboardVariables;             // 0xE0(0x50)(Edit, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ULinkSpawnersComponent* GetDefaultObj();

};

// 0x58 (0x80 - 0x28)
// Class LOTF2.SaveGameSlotViewListData
class USaveGameSlotViewListData : public UObject
{
public:
	class FString                                SaveSlotName;                                      // 0x28(0x10)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                CharacterName;                                     // 0x38(0x10)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CharacterLevel;                                    // 0x48(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_30AC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                CharacterLocation;                                 // 0x50(0x10)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SlotIndex;                                         // 0x60(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasError;                                         // 0x64(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_30AD[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  ErrorMessage;                                      // 0x68(0x18)(BlueprintVisible, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USaveGameSlotViewListData* GetDefaultObj();

};

// 0xB0 (0x5A0 - 0x4F0)
// Class LOTF2.LoadGameWidget
class ULoadGameWidget : public UInGameMenuPanel
{
public:
	class UDataTable*                            AreaNamesDB;                                       // 0x4F0(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCircularThrobber*                     Throbber_Loading;                                  // 0x4F8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          DeleteSaveGameAction;                              // 0x500(0x8)(Edit, BlueprintVisible, DisableEditOnTemplate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          Tag_KeyboardInteractKey;                           // 0x508(0x8)(Edit, BlueprintVisible, DisableEditOnTemplate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHexListView*                          List_SavedGames;                                   // 0x510(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USaveGameStatsWidget*                  Panel_SaveStats;                                   // 0x518(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlayerEquipmentPanel*                 Panel_Equipment;                                   // 0x520(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                      Text_CharacterName;                                // 0x528(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHoldButton*                           Button_LoadGame;                                   // 0x530(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                          Container_PlayerName;                              // 0x538(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USizeBox*                              SizeBox_Inventory;                                 // 0x540(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UObject*                               InteractedItem;                                    // 0x548(0x8)(BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_30AE[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bPlayingFadeIn;                                    // 0x56C(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanGoBack;                                        // 0x56D(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bInteractionEnabled;                               // 0x56E(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCharacterWasHidden;                               // 0x56F(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShouldHideInventoryAndStats;                      // 0x570(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_30AF[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LoadGameDelayTime;                                 // 0x574(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USaveGameSlotViewListData*             CurrentSlotData;                                   // 0x578(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USaveGameSlotViewListData*             CurrentFocusedItem;                                // 0x580(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_30B0[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ULoadGameWidget* GetDefaultObj();

	void SelectCurrentItem();
	void RemoveSlot();
	void OnPlayerMeshChangeRequested(bool bIsBlocking);
	void OnPlayerMeshChanged();
	void OnHoldToLoadComplete();
	void OnDissolveFinished(class USaveGameSlotViewListData* SaveSlot);
	void BP_StartDissolveAndGoBack();
	void BP_StartDissolve(class USaveGameSlotViewListData* SaveSlot);
	void BP_SetVisibility(bool bVisible);
	void BP_SelectItem();
	void BP_NoSaveGames(bool bSaveGamesAvailable);
	void BP_HandleBackAction();
	void BP_EndDissolve(bool bForceDissolve);
	void BP_DeleteSaveGame(class USaveGameSlotViewListData* SlotToRemove);
};

// 0x30 (0x60 - 0x30)
// Class LOTF2.LoadingTipsSubsystem
class ULoadingTipsSubsystem : public UGameInstanceSubsystem
{
public:
	FMulticastInlineDelegateProperty_            OnLoadingTipsLoaded;                               // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	TArray<struct FLoadingTipRow>                TipsToLoad;                                        // 0x40(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<int32>                                ValidTipIndices;                                   // 0x50(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ULoadingTipsSubsystem* GetDefaultObj();

	void PrepareLoadingTips(int32 NumTips);
};

// 0x38 (0xE8 - 0xB0)
// Class LOTF2.LockComponent
class ULockComponent : public UActorComponent
{
public:
	bool                                         bIsLocked;                                         // 0xB0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAcceptsKeys;                                      // 0xB1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_30B2[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UItemData*>                     RequiredKeysGeneratedArray;                        // 0xB8(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<TSoftClassPtr<class UItemData>>       RequiredKeys;                                      // 0xC8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	struct FDataTableRowHandle                   RequiredKeysTable;                                 // 0xD8(0x10)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ULockComponent* GetDefaultObj();

	bool Unlock(TArray<class UInventoryItem*>& ItemsToUseInUnlock);
	void Lock();
	void ForceUnlock();
};

// 0x88 (0xC0 - 0x38)
// Class LOTF2.ULodManagerSettings
class UULodManagerSettings : public UHexDeveloperSettings
{
public:
	bool                                         bLodManagerEnabled;                                // 0x38(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseAnimationBudgetAllocator;                      // 0x39(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_30B3[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MaxEnabledCharacters;                              // 0x3C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CharacterNotRenderedScoreMultiplier;               // 0x40(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VisibilityCullingAngle;                            // 0x44(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxDistanceToScoreInM;                             // 0x48(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinDistanceToForceHighQualityAnimationTickingInM;  // 0x4C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UCurveFloat>            ScoreMultiplierByNumberOfFramesNotTickedCurve;     // 0x50(0x30)(Edit, Config, AdvancedDisplay, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UCurveFloat>            DistanceFrameCurve;                                // 0x80(0x30)(Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                CachedNumFramesSinceNotRenderedScoreMultiplierArray; // 0xB0(0x10)(ZeroConstructor, Config, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UULodManagerSettings* GetDefaultObj();

};

// 0xD0 (0x110 - 0x40)
// Class LOTF2.LodManager
class ULodManager : public UTickableWorldSubsystem
{
public:
	uint8                                        Pad_30B4[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           DistanceFrameCurve;                                // 0x50(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_30B5[0xA8];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FRelevantVolume>               SingleFrameRelevantVolumes;                        // 0x100(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ULodManager* GetDefaultObj();

	void SetLodManagerState(bool bEnable);
	void OnRealmTrancend(enum class EGameRealm OldRealm, enum class EGameRealm NewRealm, enum class EActivateRealmReason Reason);
};

// 0x0 (0x28 - 0x28)
// Class LOTF2.LordsBlueprintUtilsFunctions
class ULordsBlueprintUtilsFunctions : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class ULordsBlueprintUtilsFunctions* GetDefaultObj();

	class ALOTF2Character* SummonNPC(class UObject* WorldContextObject, class AActor* Leader, TSubclassOf<class UCharacterData> CharacterDataClass, const struct FTransform& Transform, TSubclassOf<class UGameplayEffect> GameplayEffectClass, const struct FGameplayTag& AnimationTag, const struct FHexBattleEffectIdentifier& BattleEffectIdentifier);
	void SignalDisableCharacterIfDead(class ALOTF2Character* Character);
	struct FRotator RInterpTo(const struct FRotator& Current, const struct FRotator& Target, float DeltaTime, float InterpSpeed, bool bShortestPath);
	void ResetGameplayTagContainer(struct FGameplayTagContainer& TagContainer);
	void PropagateAITarget(class AActor* From, class AActor* To, bool bSetTargetInDestinationBlackboard);
	bool IsPointInCylinder(struct FVector& TestPoint, struct FVector& CylinderAxisStart, struct FVector& CylinderAxisEnd, float CylinderRadius);
	bool IsPhotoModeAvailable();
	bool IsLoadSaveScreenAvailable();
	bool IsFullWorldAvailable();
	class FString GetVersionIDString();
	class FString GetVersionDataBranchString();
	class FString GetVersionCodeBranchString();
	bool ExecuteAnathemaQuery(class UObject* WorldContextObject, struct FAnathemaQuery& Query);
};

// 0x50 (0xA38 - 0x9E8)
// Class LOTF2.LordsDebugCameraController
class ALordsDebugCameraController : public ADebugCameraController
{
public:
	uint8                                        Pad_30BB[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ALordsDebugCameraController* GetDefaultObj();

	void DebugCameraToggleProperty(const class FString& PropertyName);
};

// 0xF8 (0x488 - 0x390)
// Class LOTF2.LordsDebugCameraHUD
class ALordsDebugCameraHUD : public ADebugCameraHUD
{
public:
	uint8                                        Pad_30BC[0xF8];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ALordsDebugCameraHUD* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class LOTF2.LordsRichTextBlockImageDecorator
class ULordsRichTextBlockImageDecorator : public URichTextBlockImageDecorator
{
public:

	static class UClass* StaticClass();
	static class ULordsRichTextBlockImageDecorator* GetDefaultObj();

};

// 0x80 (0x1050 - 0xFD0)
// Class LOTF2.LordsSkeletalMeshComponent
class ULordsSkeletalMeshComponent : public USkeletalMeshComponentBudgeted
{
public:
	TArray<TSubclassOf<class UAnimInstance>>     AnimClassesToLink;                                 // 0xFD0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                        Pad_30C4[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FNotifyStateDataHolder>        NotifyStateData;                                   // 0x1010(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_30C5[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ULordsSkeletalMeshComponent* GetDefaultObj();

	bool ShouldPutToSleep(float LinearVelocityThreshold, float AngularVelocityThreshold, TArray<class FName>& bonesToIgnore, float* OutLinearTotal, struct FVector* OutAngular);
	void RemoveForceHighQualityOverride(class FName ID, bool bChecked);
	void OnMontageStarted(class UAnimMontage* Montage);
	void OnMontageEnded(class UAnimMontage* Montage, int32 MontageInstanceID, bool bInterrupted);
	void OnMontageBlendingOut(class UAnimMontage* Montage, bool bInterrupted);
	enum class EVisibilityBasedAnimTickOption GetVisibilityBasedAnimTickOption();
	void AddForceHighQualityOverride(bool bForceHighQuality, class FName ID, int32 Priority, bool bReplaceIfExisting);
};

// 0x50 (0x400 - 0x3B0)
// Class LOTF2.LordsSpringArmComponent
class ULordsSpringArmComponent : public USpringArmComponent
{
public:
	uint8                                        Pad_30C6[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ULordsSpringArmComponent* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class LOTF2.LOTF2AI
class ULOTF2AI : public UObject
{
public:

	static class UClass* StaticClass();
	static class ULOTF2AI* GetDefaultObj();

};

// 0x190 (0x4C0 - 0x330)
// Class LOTF2.LOTF2BeaconClient
class ALOTF2BeaconClient : public AOnlineBeaconClient
{
public:
	uint8                                        Pad_30C8[0x190];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ALOTF2BeaconClient* GetDefaultObj();

	void ServerPing();
	void ServerNotifyBadConnectionInternal(float Rtt, float MaxRTT);
	void ServerInviteToSessionInternal(const class FString& PlayerName, const class FString& SessionIdStr, enum class EMatchmakingType MatchmakingType);
	void ServerConfirmInviteResponse(bool bAccepted);
	void ClientRejectSessionInviteInternal(enum class EConnectionRejectedReason& RejectedReason);
	void ClientPong();
	void ClientAcceptSessionInvite();
};

// 0x28 (0x408 - 0x3E0)
// Class LOTF2.LOTF2BeaconHost
class ALOTF2BeaconHost : public AOnlineBeaconHost
{
public:
	uint8                                        Pad_30C9[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ALOTF2BeaconHost* GetDefaultObj();

};

// 0x0 (0x2C8 - 0x2C8)
// Class LOTF2.LOTF2BeaconHostObject
class ALOTF2BeaconHostObject : public AOnlineBeaconHostObject
{
public:

	static class UClass* StaticClass();
	static class ALOTF2BeaconHostObject* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class LOTF2.LOTF2BlueprintFunctionLibrary
class ULOTF2BlueprintFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class ULOTF2BlueprintFunctionLibrary* GetDefaultObj();

	bool WasDamageParried(struct FDamageComponentDamageEvent& DamageEvent);
	bool WasDamageDeflected(struct FDamageComponentDamageEvent& DamageEvent);
	bool UpdateFrameTimingNotify(class UAnimMontage* SourceAnimMontage);
	void StreamAllLevels(class UObject* WorldContextObject);
	bool StartListenServer(class UObject* WorldContextObject);
	bool SphereSweepComponent(class UPrimitiveComponent* PrimitiveComponent, const struct FVector& SpherePosition, float SphereRadius, const struct FVector& Direction, float TraceDistance, bool bTraceComplex, struct FHitResult* Hit);
	TArray<class AActor*> SpawnAutonomousAbilityActor(TSubclassOf<class USubAutonomousAbilityData> SaaData, struct FSpawnDefinition& SpawnDefinition, class AActor* SpawnerActor, class APawn* Instigator, bool bIgnoreSpawnerCollisions, bool bIgnoreInstigatorCollisions);
	class AActor* SpawnActorReplacingChildActor(class UObject* WorldContextObject, class UChildActorComponent* ChildActorComponentToReplace, bool bReplicates);
	float SnapAngleToNineties(float Angle);
	float SmoothStep(float A, float B, float X);
	float Signed2DAngleDegreesVector(const struct FVector& LocationA, const struct FVector& LocationB, const struct FVector& DirectionA);
	float Signed2DAngleDegrees(class AActor* A, class AActor* B);
	bool ShouldRunDeathTransitionForClient();
	void SetNetAudioState(class UObject* WorldContextObject, class FName AudioStateGroup, class FName AudioState);
	bool SetMontageAsDirty(class UAnimMontage* SourceAnimMontage);
	bool SetLooseGameplayTagCount(class AActor* Actor, struct FGameplayTag& GameplayTag, int32 NewCount, bool bShouldReplicate);
	void SetGameDefaultMap(const class FString& NewMap);
	void SetDualRealmCollisionResponsesToPawn(struct FCollisionResponseContainer* NewReponses, enum class EGameRealm& NewRealm);
	void SetDualRealmCollisionResponsesToLevel(struct FCollisionResponseContainer* NewReponses, enum class EGameRealm& NewRealm);
	void SetDualRealmCollisionResponses(struct FCollisionResponseContainer* NewReponses, enum class EGameRealm& NewRealm);
	void RunNavFlooding(class UObject* WorldContextObject);
	void RunNavAnalysis(class UObject* WorldContextObject);
	bool RunHardDiskPerformanceTest();
	void RequestScreenshot(const class FString& InFilename, bool bInShowUI, bool bAddFilenameSuffix);
	void ReportCombatAISoundEventAtLocation(class AActor* WorldContext, const struct FVector& Location, class AActor* Instigator, const struct FGameplayTag& SoundType, float Loudness);
	void ReportAISoundEventAtLocation(class AActor* WorldContext, const struct FVector& Location, class AActor* Instigator, float SoundRange, float Loudness, class FName SoundTag, float DebugDuration);
	bool ReplaceMontageSlotNames(class UAnimMontage* AnimationMontage, class FName OldSlotName, class FName NewSlotName);
	void RemoveItemCollectionTasksFromItemDataBase(class UDataTable* QuestTasksDT, class UDataTable* ItemDataBaseDT, const TArray<class FString>& ValidItemFolders, const TArray<class FString>& InvalidItemFolders, const class FString& CollectTaskPrefixStr);
	bool RemoveGameplayEffectByHandle(const struct FActiveGameplayEffectHandle& ActiveHandle, int32 StacksToRemove);
	bool RemoveAllSpawneableTracksBoundToSkeletalMeshActorInLevelSequence(class ULevelSequence* LevelSequence, class USkeleton* SkeletonToCheck);
	bool RecordMontageIntoNewAnimSequence(class UAnimMontage* SourceAnimMontage);
	void PrintAllAbilitySystemComponentsAttributeInfo(class UObject* WorldContextObject, const TArray<struct FGameplayAttribute>& AttributesToDebug);
	bool MontageConvertToQueued(class UAnimMontage* SourceAnimMontage);
	bool MontageConvertToBranchingPoint(class UAnimMontage* SourceAnimMontage);
	struct FGameplayEffectContextHandle MakeGameplayEffectContextFromHitNormalDir(class AActor* PActor, const struct FVector& HitNormal);
	void LoadNavDebugJsonDataIntoVisLog(class UObject* WorldContextObject, float DumpPeriod);
	void LoadNavAnalysisJsonDataIntoVisLog(class UObject* WorldContextObject);
	void KillTargetedActor(class APlayerCharacterController* PlayerCharacterController);
	bool IsWorldTearingDown(class UObject* WorldContextObject);
	bool IsWithEditor();
	bool IsSamePawn(class AActor* A, class AActor* B);
	bool IsRunningListenServer(class UObject* WorldContextObject);
	bool IsLoadedWithOption(class UObject* WorldContextObject, const class FString& Option);
	bool IsLevelStreamingDone(class APlayerCharacterController* PlayerController);
	bool IsLevelStreamedIn(class UObject* WorldContextObject, class FName LevelName);
	bool IsEditor();
	bool IsClientLanternOnHostEnabled();
	bool IsCheatingAllowed();
	bool IsBlueprintClassAsset(struct FAssetData& InAssetData);
	bool HasOnlyOneInstaceOfSkeletalMeshActorInMovieScene(class UMovieScene* MovieScene, class USkeleton* SkeletonToCheck);
	bool HasOnlyOneInstaceOfSkeletalMeshActorInLevelSequence(class ULevelSequence* LevelSequence, class USkeleton* SkeletonToCheck);
	bool HasMissingTagBindingToSkeletalMeshActorInLevelSequence(class ULevelSequence* LevelSequence, class FName TagName, class USkeleton* SkeletonToCheck);
	void GiveItemLootTableRewardToPlayerCharacter(class APlayerCharacter* PlayerCharacter, const struct FDataTableRowHandle& ItemLootTable);
	void GiveItemLootTableRewardToHostAndAlly(class UObject* WorldContextObject, const struct FDataTableRowHandle& ItemLootTable);
	class UWeaponsData* GetWeaponDataFromEquipableWeapon(class UEquipableInventoryWeapon* InventoryWeapon);
	class UCharacterUIData* GetUIData(class AActor* Actor);
	enum class ETeamAttitude GetTeamAttitudeBetweenActors(class AActor* PActorA, class AActor* PActorB);
	class USceneComponent* GetTargetedComponent(class AActor* Actor, bool bFindBest);
	class AActor* GetTargetedActorByController(class ABaseAIController* Controller);
	class AActor* GetTargetedActor(class AActor* Actor, bool bFindBest);
	class UAbilitySystemComponent* GetTargetAbilitySystemComponentFromExecutionParams(struct FGameplayEffectCustomExecutionParameters& ExecutionParams);
	class FName GetSublevelName(class AActor* Actor);
	void GetStreamingVolumes(class UObject* WorldContextObject, const struct FVector& Pos, TArray<class FName>* Names);
	void GetStreamingInSubLevelNames(class UObject* WorldContextObject, TArray<class FName>* Names);
	class UObject* GetSourceObjectFromExecutionParams(struct FGameplayEffectCustomExecutionParameters& ExecutionParams);
	class UAbilitySystemComponent* GetSourceAbilitySystemComponentFromExecutionParams(struct FGameplayEffectCustomExecutionParameters& ExecutionParams);
	class UCharacterSoundData* GetSoundData(class AActor* Actor);
	class UHexSoulFlayComponent* GetSoulFlayComponentFromActor(class AActor* Actor);
	TArray<class AActor*> GetSelectedActorsInPIE();
	void GetSaveGameManager(class UObject* WorldContextObject, bool* IsValid, class ULOTF2SaveGameManager** SaveGameManager);
	enum class EPropJoint GetPropJointFromMetaData(class UAnimSequenceBase* Anim);
	class UGameplayAbility* GetPrimaryAbilityInstanceByClass(class AActor* Actor, TSubclassOf<class UGameplayAbility> AbilityClass);
	class APlayerCharacterController* GetPlayerCharacterControllerFromMesh(class USkeletalMeshComponent* MeshComp);
	void GetOverlappingComponentsFiltered(class UPrimitiveComponent* Component, TArray<class UActorComponent*>* OutOverlappingComponents, TSubclassOf<class UActorComponent> ClassFilter);
	void GetObjectScreenRadius(class AActor* Target, struct FVector* BoxExtent, float* SphereRadius);
	class UNiagaraEffectType* GetNiagaraEffectType(class UNiagaraSystem* NiagaraSystem);
	void GetLOTF2GameState(class UObject* WorldContextObject, bool* IsValid, class ALOTF2GameState** GameState);
	void GetLOTF2GameMode(class UObject* WorldContextObject, bool* IsValid, class ALOTF2GameMode** GameMode);
	void GetLOTF2GameInstance(class UObject* WorldContextObject, bool* IsValid, class ULOTF2GameInstance** GameInstance);
	bool GetLookAtLocation(class AActor* QuerierAIActor, struct FVector* OutLocation);
	class UInteractionContext* GetInteractionContextFromTargetData(struct FGameplayAbilityTargetDataHandle& TargetData);
	struct FGameplayTag GetFirstGameplayTagMatching(struct FGameplayTagContainer& Tags, const struct FGameplayTag& TagToMatch);
	class UObject* GetEffectCauserFromExecutionParams(struct FGameplayEffectCustomExecutionParameters& ExecutionParams);
	class APlayerCharacterController* GetCoopPlayerCharacterController(class APlayerCharacterController* LocalPlayer, bool* IsValid);
	int32 GetContainingRangeIndex(float InValue, int32 RangeCount, float InStep0, float InStep1, float InStep2, float InStep3, float InStep4, float InStep5, float InStep6);
	class UClass* GetClassFromAssetData(struct FAssetData& InAssetData);
	struct FHexBattleEffectData GetBattleEffectFromContext(struct FGameplayEffectContextHandle& EffectContextHandle);
	bool GetAnimNotifyStatesByClass(class UAnimSequenceBase* SourceAnimSequence, TArray<class UAnimNotifyState*>* OutAnimNotifyStates, TSubclassOf<class UAnimNotifyState> AnimNotifyStateClassToFilter, bool bIncludeChildClasses);
	void GetAnimNotifyEventFrames(struct FAnimNotifyEvent& AnimNotifyEvent, int32* StartFrame, int32* EndFrame);
	bool GetAnimNotifyEventByAnimNotifyStateClass(class UAnimSequenceBase* SourceAnimSequence, TArray<struct FAnimNotifyEvent>* OutAnimNotifyEvents, TSubclassOf<class UAnimNotifyState> AnimNotifyStateClassToFilter, bool bIncludeChildClasses);
	bool GetAnimNotifiesByClass(class UAnimSequenceBase* SourceAnimSequence, TArray<class UAnimNotify*>* OutAnimNotifies, TSubclassOf<class UAnimNotify> AnimNotifyClassToFilter, bool bIncludeChildClasses);
	class UAnimMontage* GetAnimMontageFromTag(class AActor* Actor, const struct FGameplayTag& AnimTag);
	void GetAlwaysLoadedSubLevelNames(class UObject* WorldContextObject, TArray<class FName>* Names);
	TArray<class UMovieSceneTrack*> GetAllTracksBoundToSkeletalMeshActorInLevelSequence(class ULevelSequence* LevelSequence, class USkeleton* SkeletonToCheck);
	struct FGameplayTagContainer GetAllGameplayTagsMatching(struct FGameplayTagContainer& Tags, const struct FGameplayTag& TagToMatch);
	TArray<struct FGameplayTag> GetAllGameplayCues();
	class UAkSwitchValue* GetAkSwitchValueByTag(class AActor* Actor, const struct FGameplayTag& SoundTag);
	class UAkStateValue* GetAkStateValueByTag(class AActor* Actor, const struct FGameplayTag& SoundTag);
	class UAkAnathemaComponent* GetAkComponentEmitterFromCamera(class APlayerCharacterController* PlayerController);
	void GetActorsInSameLevel(class AActor* Actor, TArray<class AActor*>* OutLevelActors);
	void ForceDumpNavDebugEventsToJSON(class UObject* WorldContextObject);
	class UPropComponent* FindPropFromAnim(class USkeletalMeshComponent* Mesh, class UAnimSequenceBase* Anim, enum class EPropJoint PropJointOverride, bool bUsePropJointOverride);
	bool FinalizeAnimationIntoSingleSequence(class UAnimMontage* SourceAnimMontage);
	void DrawDebugTilesBBInVisLog(class UObject* WorldContextObject, const TArray<struct FVector2D>& TileCoordinates);
	bool CreateAutoGeneratedAttackIncomingNotifies(class UAnimSequenceBase* TargetAnimSequence, TSubclassOf<class UAnimNotify> AnimNotifyClass, float NumFramesBefore);
	bool CreateAnimMontageSections(class UAnimMontage* SourceAnimMontage, const TArray<class FName>& SectionNames);
	bool CopyAnimNotifiesFromSequence(class UAnimSequenceBase* SourceAnimSeq, class UAnimSequenceBase* DestAnimSeq, bool bShowDialogs, bool bSkipNotifiesThatAreOutsideDestinyLength, bool bApplyTimeScaleDifference, bool bDeleteExistingNotifies);
	bool CopyAnimMontageSections(class UAnimMontage* SourceAnimMontage, class UAnimMontage* DestAnimMontage);
	class FString ConvertTagToString(struct FGameplayTag& InputTag);
	struct FGameplayTag ConvertStringToTag(const class FString& InputString);
	bool ConvertAnimRealFramesToFrameTimings(class UAnimMontage* SourceAnimMontage);
	bool ConvertAnimFrameTimingsToRealFrames(class UAnimMontage* SourceAnimMontage);
	float ComputeShiningMask(struct FVector& WorldPosition, struct FVector& LanternPosition, struct FVector& LanternForwardVector, float InitRadius, float EndRadius, float ConeLength, float RadiusFadeIn, float FadeOutDistance);
	bool CloseAnimEditor(class UAnimationAsset* SourceAnimMontage);
	class AController* CastToController(class AActor* Actor);
	class ACharacter* CastToCharacter(class AActor* Actor);
	void CalculateMoveBlendSpaceInputs(bool IsStrafing, struct FTransform& CharacterTransform, TArray<float>& Speeds, TArray<float>& Angles, int32 BlendSpaceIndex, const struct FVector& CurrentVelocity, float DeltaTime, float LerpSpeed, float RotLerpSpeed, int32* NewBlendSpaceIndex);
	void BP_RemoveGameplayCue_NonReplicated(class UObject* WorldContextObject, class AActor* Target, const struct FGameplayTag& GameplayCueTag, struct FGameplayCueParameters& Parameters);
	struct FAkAnathemaEvent BP_GetAkEventByTag(class AActor* Actor, const struct FGameplayTag& SoundTag, bool* IsValid);
	void BP_ExecuteGameplayCue_NonReplicated(class UObject* WorldContextObject, class AActor* Target, const struct FGameplayTag& GameplayCueTag, struct FGameplayCueParameters& Parameters);
	void BP_AddGameplayCue_NonReplicated(class UObject* WorldContextObject, class AActor* Target, const struct FGameplayTag& GameplayCueTag, struct FGameplayCueParameters& Parameters);
	enum class EApplyHolsterNotifyResult ApplyHolsterNotify(class UAnimMontage* Montage, enum class EHolsterGroup HolsterGroup);
	void ApplyGameplayEffectAdditiveModToAttribute(class AActor* TargetActor, const struct FGameplayAttribute& Attribute, float ModValue);
	bool AddTagBindingToSkeletalMeshActorInLevelSequence(class ULevelSequence* LevelSequence, class FName TagName, class USkeleton* SkeletonToCheck);
	bool AddSpawneableTracksBoundToSkeletalMeshActorInLevelSequence(class ULevelSequence* LevelSequence, class USkeleton* SkeletonToCheck);
	void AddQuestTaskForCollectionQuest(class UDataTable* QuestTasksDT, const struct FDataTableRowHandle& QuestToDoDataTableRowHandle, const TArray<class FString>& FilterRowNames, class UDataTable* ItemDataBaseDT, const TArray<class FString>& InvalidItemFolders);
	void AddItemCollectionTasksFromItemDataBase(class UDataTable* QuestTasksDT, class UDataTable* ItemDataBaseDT, const TArray<class FString>& ValidItemFolders, const TArray<class FString>& InvalidItemFolders, const class FString& CollectTaskPrefixStr, bool DontAddOnlyPrint);
	void AddItemCollectionTasksFromItem(class UDataTable* QuestTasksDT, const struct FDataTableRowHandle& ItemToADD, const TArray<class FString>& ValidItemFolders, const TArray<class FString>& InvalidItemFolders, const class FString& CollectTaskPrefixStr, bool DontAddOnlyPrint);
	void AddBattleEffectToContext(struct FGameplayEffectContextHandle* EffectContextHandle, class FName BattleEffect);
	struct FGameplayAbilityTargetDataHandle AbilityTargetDataFromHitReaction(struct FVector& HitActorLocation, struct FVector& HitActorForward, struct FVector& InstigatorActorLocation);
};

// 0x8 (0x2A8 - 0x2A0)
// Class LOTF2.LOTF2BlueprintSerializableActor
class ALOTF2BlueprintSerializableActor : public AActor
{
public:
	class ULOTF2SerializationComponent*          SerializationComponent;                            // 0x2A0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ALOTF2BlueprintSerializableActor* GetDefaultObj();

};

// 0x40 (0x2E0 - 0x2A0)
// Class LOTF2.LOTF2FogGate
class ALOTF2FogGate : public AActor
{
public:
	FMulticastSparseDelegateProperty_            OnMaterializeStateChanged;                         // 0x2A0(0x1)(InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic)
	enum class EFogGateState                     GateStateAtStart;                                  // 0x2A1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EFogGateState                     GateState;                                         // 0x2A2(0x1)(Net, ZeroConstructor, SaveGame, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_310B[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USceneComponent*                       RootStaticMeshesComponent;                         // 0x2A8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  Mesh;                                              // 0x2B0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHexBaseNavModifierComponent*          HexNavModifier;                                    // 0x2B8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinNavDistanceForNavModifier;                      // 0x2C0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_310C[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          WaitForValidHostLocalToggleVisibilityTimerHandle;  // 0x2D8(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ALOTF2FogGate* GetDefaultObj();

	void SetGateState(enum class EFogGateState InGateState, bool bFromInitialization);
	void OnRep_GateState();
};

// 0x78 (0x358 - 0x2E0)
// Class LOTF2.LOTF2BossFogGate
class ALOTF2BossFogGate : public ALOTF2FogGate
{
public:
	class UInteractionComponent*                 InteractionComponent;                              // 0x2E0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULOTF2SerializationComponent*          SerializationComponent;                            // 0x2E8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                         InteractTrigger;                                   // 0x2F0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                         GateSpawnTrigger;                                  // 0x2F8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                       UIRootComponent;                                   // 0x300(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UArrowComponent*                       ArrowComponent;                                    // 0x308(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNiagaraComponent*                     MothsWallVFX;                                      // 0x310(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    MaterialForWalls;                                  // 0x318(0x8)(Edit, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          RuntimeMontage;                                    // 0x320(0x8)(Edit, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bClientGate;                                       // 0x328(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_310E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ACharacter*                            CharacterInteractor;                               // 0x330(0x8)(Net, ZeroConstructor, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USceneComponent*                       RootMothsFXComponent;                              // 0x338(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bBossesKilled;                                     // 0x340(0x1)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_310F[0x17];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ALOTF2BossFogGate* GetDefaultObj();

	void StartBossGate();
	void OnSyncAbilityEnded(class UAnathemaGameplayAbility* GameplayAbility);
	void OnRepositionEnded(class UAnathemaGameplayAbility* GameplayAbility);
	void OnRep_CharacterInteractor(class ACharacter* OldInteractor);
	void OnInteractionActivate(class UInteractionContext* Context);
	void OnGateSpawnTriggerOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void OnFinishTraversing();
	void OnDestroyNearbyNPCs();
	void EndBossGate();
};

// 0x0 (0x88 - 0x88)
// Class LOTF2.LOTF2CheatManager
class ULOTF2CheatManager : public UCheatManager
{
public:

	static class UClass* StaticClass();
	static class ULOTF2CheatManager* GetDefaultObj();

	void Lords_ToggleVisLogger(bool Record);
	void Lords_TestCheat();
	void Lords_Tell(const class FString& Command);
	void Lords_ForceUnlock();
	void Lords_ForceOpen();
	void Lords_ForceLock();
	void Lords_ForceClose();
	class AActor* GetTargetActor();
};

// 0x20 (0x360 - 0x340)
// Class LOTF2.LOTF2GalleryGameMode
class ALOTF2GalleryGameMode : public AGameModeBase
{
public:
	class ACameraActor*                          MainCamera;                                        // 0x340(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ACameraActor*                          FrontCamera;                                       // 0x348(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ACameraActor*                          BackCamera;                                        // 0x350(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AGalleryController*                    GalleryController;                                 // 0x358(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ALOTF2GalleryGameMode* GetDefaultObj();

	void Initialize(class AGalleryController* GalleryController, class ACameraActor* MainCamera, class ACameraActor* FrontCamera, class ACameraActor* BackCamera);
	class ACameraActor* GetMainCamera();
	class AGalleryController* GetGalleryController();
	class ACameraActor* GetFrontCamera();
	class ACameraActor* GetBackCamera();
};

// 0x8 (0x2F8 - 0x2F0)
// Class LOTF2.LOTF2GalleryGameState
class ALOTF2GalleryGameState : public AGameStateBase
{
public:
	class UAbilitySystemComponent*               AbilitySystemComponent;                            // 0x2F0(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ALOTF2GalleryGameState* GetDefaultObj();

};

// 0x158 (0x318 - 0x1C0)
// Class LOTF2.LOTF2GameInstance
class ULOTF2GameInstance : public UGameInstance
{
public:
	FMulticastInlineDelegateProperty_            OnPlayerControllerCreated;                         // 0x1C0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPlayerControllerDeath;                           // 0x1D0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPlayerControllerPreRespawned;                    // 0x1E0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPlayerControllerPostRespawned;                   // 0x1F0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnGameContentChanged;                              // 0x200(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnWindowCloseRequestedMulticast;                   // 0x210(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TSubclassOf<class UItemDropManager>          ItemDropManagerClass;                              // 0x220(0x8)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UItemDropManager*                      ItemDropManager;                                   // 0x228(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UCombatSettings>           CombatSettingsClass;                               // 0x230(0x8)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UCustomizationSettings>    CustomizationSettingsClass;                        // 0x238(0x8)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UPickupFactory>            PickupFactoryClass;                                // 0x240(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UInventoryItemFactory>     InventoryItemFactoryClass;                         // 0x248(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            ItemDataBase;                                      // 0x250(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FAchievementSubsystemConfig           AchievementSubsystemConfig;                        // 0x258(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class UPresenceSubsystemConfig*              PresenceSubsystemConfig;                           // 0x260(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UActivitySubsystemConfig*              ActivitySubsystemConfig;                           // 0x268(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3110[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  MainMenuLevelName;                                 // 0x288(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UClientDisconnectWidget>   DisconnectWidgetClass;                             // 0x290(0x8)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UControllerDisconnectWidget> ControllerDisconnectWidgetClass;                   // 0x298(0x8)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UConnectingToHostWidget>   ConnectingToHostWidgetClass;                       // 0x2A0(0x8)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3111[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UPlayerMappableInputConfig*>    InputConfigs;                                      // 0x2B0(0x10)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	TMap<class UPlayerMappableInputConfig*, class UInputAction*> InputConfigToInputAction;                          // 0x2C0(0x50)(Edit, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3112[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ULOTF2GameInstance* GetDefaultObj();

	void SetNewCharacterCreated(bool bNewCharCreated);
	void SetInitialSpawningTeleportID(class FName& TeleportID);
	bool OnWindowCloseRequested();
	void OnMotionBlurChanged(bool bEnabled);
	void LoadGameIfPending();
	bool IsNewCharacter();
	bool IsLoadingGame();
	class UItemDropManager* GetItemDropManager();
	class FName GetInitialSpawningTeleportID();
	class APlayerController* GetFirstLocalPlayerController(class UObject* WorldContextObject);
};

// 0xC0 (0x400 - 0x340)
// Class LOTF2.LOTF2GameMode
class ALOTF2GameMode : public AGameModeBase
{
public:
	uint8                                        Pad_3113[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnWorldResetFinish;                                // 0x378(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_3114[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FPlayerRespawnInfo>            DeferredPlayersRespawnInfo;                        // 0x3A8(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3115[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ALOTF2GameModePlayerStart*             PlayerSpawner;                                     // 0x3C0(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsWorldGameMode;                                  // 0x3C8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3116[0x37];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ALOTF2GameMode* GetDefaultObj();

	void RespawnRequestedPlayers();
};

// 0x0 (0x2A0 - 0x2A0)
// Class LOTF2.LOTF2GameModePlayerStart
class ALOTF2GameModePlayerStart : public AActor
{
public:

	static class UClass* StaticClass();
	static class ALOTF2GameModePlayerStart* GetDefaultObj();

};

// 0x108 (0x3C0 - 0x2B8)
// Class LOTF2.LOTF2GameSessionBase
class ALOTF2GameSessionBase : public AGameSession
{
public:
	uint8                                        Pad_3117[0x98];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ALOTF2BeaconHost*                      HostBeacon;                                        // 0x350(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class ALOTF2BeaconClient*>            BeaconClients;                                     // 0x358(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class ALOTF2BeaconClient*                    CurrentlyProcessingClient;                         // 0x368(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3118[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ALOTF2GameSessionBase* GetDefaultObj();

	void OnHideLoadingScreenPlayingOffline(bool bActive);
	void OnHideLoadingScreenCreatedNewSession(bool bActive);
	class ALOTF2GameSessionBase* GetGameSessionBase(class UObject* WorldContextObject);
};

// 0x118 (0x1C8 - 0xB0)
// Class LOTF2.LOTF2GameSettingRegistry
class ULOTF2GameSettingRegistry : public UGameSettingRegistry
{
public:
	uint8                                        Pad_3119[0xC0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGameSettingCollection*                DisplayCollection;                                 // 0x170(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGameSettingCollection*                GraphicsCollection;                                // 0x178(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGameSettingCollection*                SoundCollection;                                   // 0x180(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGameSettingCollection*                GameplayCollection;                                // 0x188(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGameSettingCollection*                KeybindCollection;                                 // 0x190(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGameSettingCollection*                ControllerCollection;                              // 0x198(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGameSettingCollection*                MultiplayerCollection;                             // 0x1A0(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGameSettingCollection*                CreditsCollection;                                 // 0x1A8(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGameSettingCollectionPage*            HDRCalibrationCollection;                          // 0x1B0(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGameSettingCollectionPage*            ScreenCalibrationCollection;                       // 0x1B8(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHexGameUserSettings*                  DefaultUserSettings;                               // 0x1C0(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ULOTF2GameSettingRegistry* GetDefaultObj();

	void HandleSaturationAtStartup(bool bEnabled);
	void HandleContrastAtStartup(bool bEnabled);
};

// 0x90 (0x600 - 0x570)
// Class LOTF2.LOTF2GameSettingScreen
class ULOTF2GameSettingScreen : public UGameSettingScreenBase
{
public:
	uint8                                        Pad_311A[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          Tag_PreviousCategory;                              // 0x590(0x8)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          Tag_NextCategory;                                  // 0x598(0x8)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          Tag_ApplyChanges;                                  // 0x5A0(0x8)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          Tag_ResetToDefault;                                // 0x5A8(0x8)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHexDialogDescriptor*                  UnsavedChangesDialogDescriptor;                    // 0x5B0(0x8)(Edit, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          FirstCalibrationNextMenuSection;                   // 0x5B8(0x8)(Edit, BlueprintVisible, DisableEditOnTemplate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        FirstTimeBrightnessNavOptions;                     // 0x5C0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_311B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USettingsTabListWidget*                TabList;                                           // 0x5C8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                            Text_SectionName;                                  // 0x5D0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                         SettingsTabSelectSound;                            // 0x5D8(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_311C[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ULOTF2GameSettingScreen* GetDefaultObj();

	void SetDetailsPanelPosition(enum class ESettingScreenDetailsPanelPosition Position);
	void OnResetToDefault();
	void OnRequestSettingsTabChange(class FName TabId);
	void OnPreviousCategory();
	void OnNextCategory();
	void OnNavigated(class UGameSetting* Setting);
	void OnApplyChanges();
	void HandlePlayerStateAddedOrRemoved(class APlayerState* PlayerState);
	void HandleOnlineSettingChange(bool bEnable);
	void HandleLoginFailed(const class FString& Error);
	void HandleCreateSession();
};

// 0x100 (0x3F0 - 0x2F0)
// Class LOTF2.LOTF2GameState
class ALOTF2GameState : public AGameStateBase
{
public:
	uint8                                        Pad_311D[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAbilitySystemComponent*               AbilitySystemComponent;                            // 0x2F8(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	FMulticastInlineDelegateProperty_            OnPlayerBeginPlay;                                 // 0x300(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPlayerEndPlay;                                   // 0x310(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPlayerRespawn;                                   // 0x320(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnLocalPlayerKilled;                               // 0x330(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnLocalPlayerRespawned;                            // 0x340(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnLoadingFinished;                                 // 0x350(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPlayerStateAdded;                                // 0x360(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPlayerStateRemoved;                              // 0x370(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCurrentRealmChanged;                             // 0x380(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_311E[0x29];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bHostLoading;                                      // 0x3B9(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bGameWorldIsBeingReset;                            // 0x3BA(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EGameRealm                        CurrentRealm;                                      // 0x3BB(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bWitherInhibited;                                  // 0x3BC(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_311F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        WitherProgressRate;                                // 0x3C0(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        WitherLevelProgress;                               // 0x3C4(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        WitherLevel;                                       // 0x3C8(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        WitherLevelDuration;                               // 0x3CC(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3120[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UDeveloperMenuSettingsRuntime*         HostDeveloperSettings;                             // 0x3E8(0x8)(Net, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ALOTF2GameState* GetDefaultObj();

	void OnRep_WitherProgressRateValueChanged();
	void OnRep_WitherLevelValueChanged();
	void OnRep_WitherLevelProgressValueChanged();
	void OnRep_WitherLevelDurationValueChanged();
	void OnRep_WitherInhibitedValueChanged();
	void OnRep_CurrentRealm(enum class EGameRealm& PrevRealm);
	void NotifyPlayerEndPlay(class APlayerCharacter* Character);
	void NotifyPlayerBeginPlay(class APlayerCharacter* Character);
	void MulticastSetLoadingLevels(bool bHostIsSpawning);
	void MulticastPostAkAnathemaEventAtLocation(struct FAkAnathemaEvent& AkAnathemaEvent, struct FVector& Location, struct FRotator& Rotation);
	void MulticastOnWorldResetBegin();
	void Multicast_NotifySpawnedNpcDeath(struct FGameplayTag& Tag);
	bool IsMultiplayerGame();
	bool IsLoadingScreenVisible();
	bool IsLoadingLevels();
	void Client_SetAudioState(class FName& InAudioStateGroup, class FName& InAudioState);
	void Client_PlayerRespawned(class APlayerCharacterController* PlayerController);
	void Client_PlayerKilled(class APlayerCharacterController* PlayerController);
};

// 0x30 (0x3D0 - 0x3A0)
// Class LOTF2.LOTF2GameViewportClient
class ULOTF2GameViewportClient : public UGameViewportClient
{
public:
	uint8                                        Pad_3121[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ULOTF2GameViewportClient* GetDefaultObj();

};

// 0x148 (0x4D8 - 0x390)
// Class LOTF2.LOTF2HUD
class ALOTF2HUD : public AHUD
{
public:
	TSoftClassPtr<class UCommonActivatableWidget> HUDWidgetClass;                                    // 0x390(0x30)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          HUDTag;                                            // 0x3C0(0x8)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3125[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnHUDVisibilityChange;                             // 0x3E8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                        InGameMessagesDuration;                            // 0x3F8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PostLoadinScreenFadeInDuration;                    // 0x3FC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UInGameMessageEventsWidget> InGameMessageEventsWidgetClass;                    // 0x400(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UCommonActivatableWidget> DeathScreenClass;                                  // 0x408(0x30)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UBossSlainedMessageWidget> BossSlainedWidgetClass;                            // 0x438(0x8)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UNewAreaMessageWidget>     NewAreaMessageWidgetClass;                         // 0x440(0x8)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UItemCollectNotification>  ItemCollectNotificationClass;                      // 0x448(0x8)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UItemCollectNotification>  QuestItemUsedNotificationClass;                    // 0x450(0x8)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UItemCollectNotification>  InventoryFullNotificationClass;                    // 0x458(0x8)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UInGameMessageNotification> InGameMessageClass;                                // 0x460(0x8)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UQuickBarWidget*                       QuickBarWidget;                                    // 0x468(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDeathScreenWidget*                    DeathScreenWidget;                                 // 0x470(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3126[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UHudWidget*                            HudWidget;                                         // 0x4B8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3127[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UInGameMessageNotification*>    Notifications;                                     // 0x4C8(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ALOTF2HUD* GetDefaultObj();

	void ShowWidgets();
	void ShowQuestItemUsedMessage(class UInventoryItem* InventoryItem);
	void ShowNewAreaMessage(class FText NewAreaName, bool bHideScreenAutomatically);
	void ShowMessage(class FText Message);
	void ShowItemPickupMessage(struct FInventoryItemUIData& Data);
	void ShowGuardianSlainedScreenByActor(class AActor* ActorToShow, bool bHideScreenAutomatically);
	void ShowGuardianSlainedScreen(class FText& GuardianName, TSoftObjectPtr<class UTexture2D>& GuardianIcon, bool bHideScreenAutomatically);
	void ShowDeathScreen();
	void SetQuickBarWidget(class UQuickBarWidget* QuickBarWidget);
	void SetInGameMenuBlocked(bool IsBlocked);
	void RemoveDeathScreen();
	void OnNotificationHidden(class UExtensionPointEntryWidget* EntryWidget);
	void HideWidgets();
	class UQuickBarWidget* GetQuickBarWidget();
	bool GetInGameMenuBlocked();
};

// 0x18 (0x40 - 0x28)
// Class LOTF2.LOTF2OnlineSession
class ULOTF2OnlineSession : public UOnlineSession
{
public:
	uint8                                        Pad_3128[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ULOTF2OnlineSession* GetDefaultObj();

};

// 0x268 (0x2A0 - 0x38)
// Class LOTF2.LOTF2OnlineSettings
class ULOTF2OnlineSettings : public UHexDeveloperSettings
{
public:
	struct FRuntimeFloatCurve                    AllyMatchmakingRTTCurve;                           // 0x38(0x88)(Edit, Config, NativeAccessSpecifierPrivate)
	struct FRuntimeFloatCurve                    InvasionMatchmakingRTTCurve;                       // 0xC0(0x88)(Edit, Config, NativeAccessSpecifierPrivate)
	float                                        UpdateSessionDelayTimer;                           // 0x148(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        SessionKeyMaxLength;                               // 0x14C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        PostInvasionCooldownSeconds;                       // 0x150(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        FindAllyAfterSeconds;                              // 0x154(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        EndInvasionAfterHostDeathSeconds;                  // 0x158(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3129[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRuntimeFloatCurve                    InvaderLevelToVigorAmount;                         // 0x160(0x88)(Edit, Config, NativeAccessSpecifierPrivate)
	TSubclassOf<class UItemData>                 InvasionItem;                                      // 0x1E8(0x8)(Edit, ZeroConstructor, Config, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          InvasionItemTag;                                   // 0x1F0(0x8)(Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTagQuery                     InteractionsFilterDuringInvasion;                  // 0x1F8(0x48)(Edit, Config, NativeAccessSpecifierPrivate)
	uint32                                       BlockInvasionTime;                                 // 0x240(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                          OnlineFriendColor;                                 // 0x244(0x10)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                          AwayFriendColor;                                   // 0x254(0x10)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                          DoNotDisturbFriendColor;                           // 0x264(0x10)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                          OfflineFriendColor;                                // 0x274(0x10)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        CoopAllyVigorMultiplier;                           // 0x284(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint64                                       SteamCommunityGroupId;                             // 0x288(0x8)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<TSubclassOf<class UItemData>>         SteamCommunityRewards;                             // 0x290(0x10)(Edit, ZeroConstructor, Config, UObjectWrapper, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ULOTF2OnlineSettings* GetDefaultObj();

};

// 0x20 (0x50 - 0x30)
// Class LOTF2.LOTF2OnlineSubsystem
class ULOTF2OnlineSubsystem : public UGameInstanceSubsystem
{
public:
	uint8                                        Pad_312A[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ULOTF2OnlineSubsystem* GetDefaultObj();

};

// 0x8 (0x2D8 - 0x2D0)
// Class LOTF2.LOTF2PlayerStart
class ALOTF2PlayerStart : public APlayerStart
{
public:
	uint8                                        Pad_312B[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ALOTF2PlayerStart* GetDefaultObj();

};

// 0x0 (0x2D8 - 0x2D8)
// Class LOTF2.LOTF2PlayerStartDebug
class ALOTF2PlayerStartDebug : public ALOTF2PlayerStart
{
public:

	static class UClass* StaticClass();
	static class ALOTF2PlayerStartDebug* GetDefaultObj();

};

// 0x10 (0x2E8 - 0x2D8)
// Class LOTF2.LOTF2PlayerStartTeleport
class ALOTF2PlayerStartTeleport : public ALOTF2PlayerStart
{
public:
	struct FDataTableRowHandle                   TeleportInfoDefinitionRow;                         // 0x2D8(0x10)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ALOTF2PlayerStartTeleport* GetDefaultObj();

	class FName GetTeleportID();
};

// 0x40 (0x328 - 0x2E8)
// Class LOTF2.LOTF2PlayerStartTeleportDynamic
class ALOTF2PlayerStartTeleportDynamic : public ALOTF2PlayerStartTeleport
{
public:
	class ULOTF2SerializationComponent*          SerializationComponent;                            // 0x2E8(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UDataTable>             TeleportInfoDataTable;                             // 0x2F0(0x30)(Edit, DisableEditOnTemplate, EditConst, SaveGame, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  TeleportInfoRowName;                               // 0x320(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ALOTF2PlayerStartTeleportDynamic* GetDefaultObj();

};

// 0x210 (0x5C8 - 0x3B8)
// Class LOTF2.LOTF2PlayerState
class ALOTF2PlayerState : public APlayerState
{
public:
	uint8                                        Pad_312C[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FVendorTransactionEntry>       ClientVendorTransactions;                          // 0x3F8(0x10)(ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
	class UInventoryComponent*                   InventoryComponent;                                // 0x408(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, SaveGame, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAIFactionComponent*                   AIFactionComponent;                                // 0x410(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHexDialogueComponent*                 DialogueComponent;                                 // 0x418(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bPlayerNameSet;                                    // 0x420(0x1)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_312D[0x23];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        QuestProgressionBasedMaxRuneSlots;                 // 0x444(0x4)(Net, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_312E[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UWeaponsData*                          PlayerPrimaryWeaponData;                           // 0x450(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWeaponsData*                          PlayerSecondaryWeaponData;                         // 0x458(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URangedWeaponData*                     PlayerRangedWeaponData;                            // 0x460(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEquipementData*                       PlayerSoulsLanternData;                            // 0x468(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UArmorPieceData*                       PlayerHeadData;                                    // 0x470(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UArmorPieceData*                       PlayerArmsData;                                    // 0x478(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UArmorPieceData*                       PlayerLegsData;                                    // 0x480(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UArmorPieceData*                       PlayerBodyData;                                    // 0x488(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UArmorPieceData*                       PlayerAccessoriesData;                             // 0x490(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_312F[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UEquipmentManagerComponent*            EquipmentManagerComponent;                         // 0x4A0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EHexMultiplayerRole               MultiplayerRole;                                   // 0x4A8(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3130[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<uint8>                                ClientCustomizationSettingsData;                   // 0x4B0(0x10)(Net, ZeroConstructor, RepNotify, NativeAccessSpecifierPrivate)
	struct FQuestDirectorTags                    ClientQuestsTagsBasedOnHostProgression;            // 0x4C0(0xC0)(Net, RepNotify, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3131[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EHexLoadingState                  LoadingState;                                      // 0x582(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3132[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Nickname;                                          // 0x588(0x10)(Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                UserPlatformName;                                  // 0x598(0x10)(Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bUserCrossplayEnabled;                             // 0x5A8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bHasCrossplayPrivileges;                           // 0x5A9(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3133[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIsUsingCustomSessionKeyForMatchMaking;            // 0x5AD(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3134[0x1A];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ALOTF2PlayerState* GetDefaultObj();

	void SetIsPlayerInFirstDeathTransition(bool bIsInTransition);
	void SetHasPlayerCompletedTutorialRevenge(bool bPlayerCompletedTutorialRevenge);
	void SetAlreadySpawnedLanternLight(bool bIsLanternLightSpawned);
	void ServerNotifyLoadingStarted();
	void ServerNotifyLoadingEnded();
	void OnVigorAmountChanged(int32 NewVigor);
	void OnRep_LoadingState();
	void OnRep_ClientQuestsTagsBasedOnHostProgression();
	void OnRep_ClientCustomizationSettingsData();
	void OnMatchStarted();
	void OnHUDReady();
	void OnEquipmentChanged();
	void NetMulticastShowCredits();
	bool HasStats();
	void HandleWeaponRuneUnlockTagsAdded(struct FGameplayTagContainer& QuestTags);
	void HandleQuestTagsAccomplished(struct FGameplayTagContainer& QuestTags);
	void HandlePawnSet(class APlayerState* PlayerState, class APawn* NewPawn, class APawn* OldPawn);
	class FString GetUserPlatformName();
	class FString GetRemotePlayerName();
	uint8 GetMultiplayerRoleAsBitmask();
	enum class EHexMultiplayerRole GetMultiplayerRole();
	bool GetIsPlayerInFirstDeathTransition();
	bool GetHasPlayerCompletedTutorialRevenge();
	bool GetAlreadySpawnedLanternLight();
	void ClientAddNewTransactionEntry(struct FVendorTransactionEntry& TransactionEntry);
};

// 0x2D8 (0x300 - 0x28)
// Class LOTF2.ClientSave
class UClientSave : public USaveGame
{
public:
	struct FPlayerStatsSave                      PlayerStatsData;                                   // 0x28(0x54)(NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_3135[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FHexInventoryComponentSaveData        PlayerInventoryData;                               // 0x80(0xC0)(NativeAccessSpecifierPublic)
	struct FObjectRecord                         CustomizationSettingsData;                         // 0x140(0x1A0)(NativeAccessSpecifierPublic)
	TArray<struct FVendorTransactionEntry>       ClientVendorTransactions;                          // 0x2E0(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                   CharacterClassStatsRowHandle;                      // 0x2F0(0x10)(NoDestructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UClientSave* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class LOTF2.HexBaseSaveGame
class UHexBaseSaveGame : public USaveGame
{
public:
	int32                                        MasterSaveVersion;                                 // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        GameVersionMajor;                                  // 0x2C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        GameVersionMilestone;                              // 0x30(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        GameVersionMinor;                                  // 0x34(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UHexBaseSaveGame* GetDefaultObj();

};

// 0x1688 (0x16C0 - 0x38)
// Class LOTF2.LOTF2SaveGame
class ULOTF2SaveGame : public UHexBaseSaveGame
{
public:
	struct FSerializationData                    SerializationData;                                 // 0x38(0x140)(NativeAccessSpecifierPublic)
	struct FWorldStateSavedData                  WorldState;                                        // 0x178(0x18)(NativeAccessSpecifierPublic)
	struct FHexPersistentData                    PersistentData;                                    // 0x190(0x1E8)(NativeAccessSpecifierPublic)
	struct FHexQuestDirectorSaveData             QuestDirectorSaveData;                             // 0x378(0xC8)(NativeAccessSpecifierPublic)
	class FString                                PlayerName;                                        // 0x440(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsPlayerInFirstDeathTrans;                        // 0x450(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAlreadySpawnedLanternLight;                       // 0x451(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasPlayerCompletedTutorialRevenge;                // 0x452(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3136[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPlayerStatsSave                      PlayerStatsData;                                   // 0x454(0x54)(NoDestructor, NativeAccessSpecifierPublic)
	class FString                                LevelName;                                         // 0x4A8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bNewCharacter;                                     // 0x4B8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3137[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            PlayerTransform;                                   // 0x4C0(0x60)(IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLoadPlayerTransform;                              // 0x520(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3138[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FHexInventoryComponentSaveData        PlayerInventoryData;                               // 0x528(0xC0)(NativeAccessSpecifierPublic)
	enum class EMeleeOption                      PlayerStance;                                      // 0x5E8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3139[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FObjectRecord                         SpawnDirectorData;                                 // 0x5F0(0x1A0)(NativeAccessSpecifierPublic)
	enum class EGameRealm                        ActiveRealm;                                       // 0x790(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_313A[0xF];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FObjectRecord                         DualRealmDirectorData;                             // 0x7A0(0x1A0)(NativeAccessSpecifierPublic)
	struct FObjectRecord                         TumorsDirectorData;                                // 0x940(0x1A0)(NativeAccessSpecifierPublic)
	struct FObjectRecord                         WitherSubsystemData;                               // 0xAE0(0x1A0)(NativeAccessSpecifierPublic)
	struct FObjectRecord                         ValidLocationTrackingComponentData;                // 0xC80(0x1A0)(NativeAccessSpecifierPublic)
	struct FObjectRecord                         QuestDirectorData;                                 // 0xE20(0x1A0)(NativeAccessSpecifierPublic)
	struct FGameplayTag                          LastVisitedArea;                                   // 0xFC0(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_313B[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FObjectRecord                         CustomizationSettingsData;                         // 0xFD0(0x1A0)(NativeAccessSpecifierPublic)
	class FText                                  CharacterClassName;                                // 0x1170(0x18)(NativeAccessSpecifierPublic)
	struct FDataTableRowHandle                   CharacterClassStatsRowHandle;                      // 0x1188(0x10)(NoDestructor, NativeAccessSpecifierPublic)
	class FString                                Date;                                              // 0x1198(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                       TimePlayed;                                        // 0x11A8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_313C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FObjectRecord                         RevengeDirectorData;                               // 0x11B0(0x1A0)(NativeAccessSpecifierPublic)
	struct FObjectRecord                         NewGameManagerData;                                // 0x1350(0x1A0)(NativeAccessSpecifierPublic)
	struct FObjectRecord                         AICombatManagerData;                               // 0x14F0(0x1A0)(NativeAccessSpecifierPublic)
	TArray<struct FVendorTransactionEntry>       ClientVendorTransactions;                          // 0x1690(0x10)(ZeroConstructor, SaveGame, NativeAccessSpecifierPublic)
	bool                                         bSaveGameInvalid;                                  // 0x16A0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_313D[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                InvalidSaveGameReason;                             // 0x16A8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_313E[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ULOTF2SaveGame* GetDefaultObj();

};

// 0x6F8 (0x730 - 0x38)
// Class LOTF2.LOTF2MetaSaveGame
class ULOTF2MetaSaveGame : public UHexBaseSaveGame
{
public:
	int32                                        LastSlot;                                          // 0x38(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_313F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSaveGameUserSettings                 GameUserSettings;                                  // 0x40(0x200)(SaveGame, NativeAccessSpecifierPublic)
	struct FObjectRecord                         CharacterClassesData;                              // 0x240(0x1A0)(NativeAccessSpecifierPublic)
	struct FObjectRecord                         LegendaryEditionData;                              // 0x3E0(0x1A0)(NativeAccessSpecifierPublic)
	struct FObjectRecord                         AchievementData;                                   // 0x580(0x1A0)(NativeAccessSpecifierPublic)
	bool                                         DLC_DeluxeEditionOwned;                            // 0x720(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DLC_DarkCrusaderOwned;                             // 0x721(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DLC_StartingBoostOwned;                            // 0x722(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DLC_ShadersPackOwned;                              // 0x723(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3140[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ULOTF2MetaSaveGame* GetDefaultObj();

};

// 0x70 (0xA8 - 0x38)
// Class LOTF2.LOTF2SaveGameManagerSettings
class ULOTF2SaveGameManagerSettings : public UHexDeveloperSettings
{
public:
	TSoftObjectPtr<class UWorld>                 MainMenuLevel;                                     // 0x38(0x30)(Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3141[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UWorld>                 DefaultGameLevel;                                  // 0x70(0x30)(Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        SaveGameMasterVersion;                             // 0xA0(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3142[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ULOTF2SaveGameManagerSettings* GetDefaultObj();

};

// 0x2B8 (0x2E8 - 0x30)
// Class LOTF2.LOTF2SaveGameManager
class ULOTF2SaveGameManager : public UGameInstanceSubsystem
{
public:
	FMulticastInlineDelegateProperty_            OnSaveGameStartedDelegate;                         // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSaveGameFinishedDelegate;                        // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_314D[0xD0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ULOTF2SaveGame*                        CurrentClientSaveGame;                             // 0x120(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ULOTF2MetaSaveGame*                    MetaSavedGame;                                     // 0x128(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ULOTF2SaveGame*                        SaveGameObjectToLoad;                              // 0x130(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ULOTF2SaveGame*                        CurrentSavedGame;                                  // 0x138(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_314E[0xA8];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<int32, class UHexSaveGameUpdate*>       SaveGameUpdatesMap;                                // 0x1E8(0x50)(NativeAccessSpecifierPrivate)
	TMap<int32, class UHexSaveGameUpdate*>       MetaSaveGameUpdatesMap;                            // 0x238(0x50)(NativeAccessSpecifierPrivate)
	TMap<int32, class UHexSaveGameUpdate*>       PhotosUpdatesMap;                                  // 0x288(0x50)(NativeAccessSpecifierPrivate)
	uint8                                        Pad_314F[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ULOTF2SaveGameManager* GetDefaultObj();

	bool SaveGameToSlot_Sync(int32 SlotIndex, const class FString& DebugContext);
	bool SaveGameToSlot_Async(int32 SlotIndex, const class FString& DebugContext);
	bool SaveGameSync(const class FString& DebugContext);
	bool SaveGameAsync(const class FString& DebugContext);
	void RequestSaveGameToSlot_Sync(int32 SlotIndex, const class FString& DebugContext);
	void RequestSaveGameToSlot_Async(int32 SlotIndex, const class FString& DebugContext);
	void RequestSaveGameSync(const class FString& DebugContext);
	void RequestSaveGameAsync(const class FString& DebugContext);
	void RemoveSlot(int32 SlotIndex);
	void OnWindowCloseRequested();
	void LoadGameFromLastSavedSlot(bool bResetLoadGameRequested);
	void LoadGameFromCurrentSaveGameObject();
	void LoadGame(int32 SlotIndex);
	void LoadDemoProfile();
	bool HasLastSlot();
	bool HasGame(int32 SlotIndex);
	int32 GetCountAvailableGamesToLoad();
	void CreateNewGame(int32 NewGameLevel, bool bNewProfile, bool bAsync);
	void CreateDemoProfile();
};

// 0x0 (0x28 - 0x28)
// Class LOTF2.LOTF2SerializableInterface
class ILOTF2SerializableInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class ILOTF2SerializableInterface* GetDefaultObj();

};

// 0x220 (0x250 - 0x30)
// Class LOTF2.LOTF2Serialization
class ULOTF2Serialization : public UWorldSubsystem
{
public:
	uint8                                        Pad_3150[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                SaveSlotName;                                      // 0x40(0x10)(Edit, ZeroConstructor, EditConst, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint32                                       UserIndex;                                         // 0x50(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3151[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSerializationData                    SerializationData;                                 // 0x58(0x140)(NativeAccessSpecifierPrivate)
	TArray<class ULevelStreaming*>               VisibleLevels;                                     // 0x198(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3152[0xA8];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ULOTF2Serialization* GetDefaultObj();

	void OnLevelShown();
	void OnLevelHidden();
	class USerializableActorHandle* GetSerializableActorHandle(class FName FriendlyName, class UObject* Outer);
};

// 0x58 (0x108 - 0xB0)
// Class LOTF2.LOTF2SerializationComponent
class ULOTF2SerializationComponent : public UActorComponent
{
public:
	bool                                         bSerializationEnabled;                             // 0xB0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsDynamicObject;                                  // 0xB1(0x1)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3153[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSerializationId                      ID;                                                // 0xB4(0x1C)(Edit, BlueprintVisible, BlueprintReadOnly, SaveGame, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3154[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bSerializeToManualManagementArea;                  // 0xD1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3155[0x36];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ULOTF2SerializationComponent* GetDefaultObj();

	void SetSerializeToManualManagementArea(bool bValue);
	void SetSerializationEnabled(bool bValue);
	void SetOverrideDontSerializeAsDestroyed();
	void SetIsDynamicObject(bool bValue);
	void SetId(struct FSerializationId& Value);
	void SerializeOwner();
	class USerializableActorHandle* NewSerializableActorHandle(class UObject* Outer);
	bool IsValidId();
	class FString GetStringId();
	struct FSerializationId GetId();
	void DeserializeOwner();
};

// 0x0 (0x2D8 - 0x2D8)
// Class LOTF2.LOTF2SettingListEntryBase
class ULOTF2SettingListEntryBase : public UGameSettingListEntryBase
{
public:

	static class UClass* StaticClass();
	static class ULOTF2SettingListEntryBase* GetDefaultObj();

};

// 0x10 (0x2E8 - 0x2D8)
// Class LOTF2.LOTF2SettingListEntry_Setting
class ULOTF2SettingListEntry_Setting : public ULOTF2SettingListEntryBase
{
public:
	class UCommonTextBlock*                      Text_SettingName;                                  // 0x2D8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                         SettingsListEntrySelectSound;                      // 0x2E0(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ULOTF2SettingListEntry_Setting* GetDefaultObj();

};

// 0x10 (0x2F8 - 0x2E8)
// Class LOTF2.LOTF2SettingListEntry_Action
class ULOTF2SettingListEntry_Action : public ULOTF2SettingListEntry_Setting
{
public:
	class UGameSettingAction*                    ActionSetting;                                     // 0x2E8(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFocusableButtonWidget*                Button_Action;                                     // 0x2F0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ULOTF2SettingListEntry_Action* GetDefaultObj();

	void OnSettingAssigned(class FText& ActionText);
	void HandleActionButtonClicked();
};

// 0x108 (0x3E0 - 0x2D8)
// Class LOTF2.LOTF2SettingListEntry_ControllerPreview
class ULOTF2SettingListEntry_ControllerPreview : public ULOTF2SettingListEntryBase
{
public:
	TMap<enum class EControllerPreviewControllerModel, struct FControllerPreviewControllerModelWidgetMapping> MappingOfControllerModel;                          // 0x2D8(0x50)(Edit, Protected, NativeAccessSpecifierProtected)
	TArray<struct FControllerPreviewMappingFilter> MappingFilters;                                    // 0x328(0x10)(Edit, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TMap<class FName, class FText>               MappingDisplayNameOverride;                        // 0x338(0x50)(Edit, Protected, NativeAccessSpecifierProtected)
	TArray<class UInputMappingContext*>          DefaultContexts;                                   // 0x388(0x10)(Edit, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	class FText                                  ActionTextDelimiter;                               // 0x398(0x18)(Edit, Protected, NativeAccessSpecifierProtected)
	class FText                                  EmptyLabelText;                                    // 0x3B0(0x18)(Edit, Protected, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                       ModelSwitcher;                                     // 0x3C8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3156[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ULOTF2SettingListEntry_ControllerPreview* GetDefaultObj();

};

// 0x28 (0x310 - 0x2E8)
// Class LOTF2.LOTF2SettingListEntry_Discrete
class ULOTF2SettingListEntry_Discrete : public ULOTF2SettingListEntry_Setting
{
public:
	class UGameSettingValueDiscrete*             DiscreteSetting;                                   // 0x2E8(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                          Panel_Value;                                       // 0x2F0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USettingsEditorRotator*                Rotator_SettingValue;                              // 0x2F8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFocusableButtonWidget*                Button_Decrease;                                   // 0x300(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFocusableButtonWidget*                Button_Increase;                                   // 0x308(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ULOTF2SettingListEntry_Discrete* GetDefaultObj();

	void HandleOptionIncrease();
	void HandleOptionDecrease();
};

// 0x50 (0x328 - 0x2D8)
// Class LOTF2.LOTF2SettingListEntry_HDRCalibrationImage
class ULOTF2SettingListEntry_HDRCalibrationImage : public ULOTF2SettingListEntryBase
{
public:
	class FName                                  TextureParameterName;                              // 0x2D8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  PeakBrightnessMaterialParameterName;               // 0x2E0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  UILevelsMaterialParameterName;                     // 0x2E8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Reference_Image;                                   // 0x2F0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UTexture2D>             ReferenceImageTexture;                             // 0x2F8(0x30)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ULOTF2SettingListEntry_HDRCalibrationImage* GetDefaultObj();

	void OnImageLoaded();
};

// 0x40 (0x328 - 0x2E8)
// Class LOTF2.LOTF2SettingListEntry_KeyBinding
class ULOTF2SettingListEntry_KeyBinding : public ULOTF2SettingListEntry_Setting
{
public:
	TSoftClassPtr<class UCommonActivatableWidget> KeyBindModal;                                      // 0x2E8(0x30)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                      Text_KeyName;                                      // 0x318(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFocusableButtonWidget*                Button_Assign;                                     // 0x320(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ULOTF2SettingListEntry_KeyBinding* GetDefaultObj();

	void OnKeySelected(const struct FKey& Key);
	void HandleButtonClicked();
};

// 0x10 (0x2F8 - 0x2E8)
// Class LOTF2.LOTF2SettingListEntry_Navigation
class ULOTF2SettingListEntry_Navigation : public ULOTF2SettingListEntry_Setting
{
public:
	class UGameSettingCollectionPage*            CollectionSetting;                                 // 0x2E8(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFocusableButtonWidget*                Button_Navigate;                                   // 0x2F0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ULOTF2SettingListEntry_Navigation* GetDefaultObj();

	void OnSettingAssigned(class FText& ActionText);
	void HandleNavigationButtonClicked();
};

// 0x30 (0x318 - 0x2E8)
// Class LOTF2.LOTF2SettingListEntry_Scalar
class ULOTF2SettingListEntry_Scalar : public ULOTF2SettingListEntry_Setting
{
public:
	class UGameSettingValueScalar*               ScalarSetting;                                     // 0x2E8(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Slider_Bar;                                        // 0x2F0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                          Panel_Value;                                       // 0x2F8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHexGenericSlider*                     Slider_SettingValue;                               // 0x300(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                      Text_SettingValue;                                 // 0x308(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  SliderMaterialParameterName;                       // 0x310(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ULOTF2SettingListEntry_Scalar* GetDefaultObj();

	void OnValueChanged(float Value);
	void OnDefaultValueChanged(float DefaultValue);
	void IncrementValue();
	void HandleSliderValueChanged(float Value);
	void DecrementValue();
};

// 0x130 (0x408 - 0x2D8)
// Class LOTF2.LOTF2SettingListEntry_ScreenCalibrationImage
class ULOTF2SettingListEntry_ScreenCalibrationImage : public ULOTF2SettingListEntryBase
{
public:
	class FName                                  MaterialBrightnessPropertyName;                    // 0x2D8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  MaterialContrastPropertyName;                      // 0x2E0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  MaterialSaturationPropertyName;                    // 0x2E8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  MaterialBrightnessTexParamName;                    // 0x2F0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  MaterialContrastTexParamName;                      // 0x2F8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  MaterialSaturationTexParamName;                    // 0x300(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<class FName, int32>                     SwitcherIndexOfSetting;                            // 0x308(0x50)(Edit, Protected, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                       ImageSwitcher;                                     // 0x358(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                BrightnessReferenceImage;                          // 0x360(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                ContrastReferenceImage;                            // 0x368(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                SaturationReferenceImage;                          // 0x370(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UTexture2D>             BrightnessTexture;                                 // 0x378(0x30)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UTexture2D>             ContrastTexture;                                   // 0x3A8(0x30)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UTexture2D>             SaturationTexture;                                 // 0x3D8(0x30)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ULOTF2SettingListEntry_ScreenCalibrationImage* GetDefaultObj();

	void ImagesLaoded();
};

// 0x10 (0x2F8 - 0x2E8)
// Class LOTF2.LOTF2SettingListEntry_TextBox
class ULOTF2SettingListEntry_TextBox : public ULOTF2SettingListEntry_Setting
{
public:
	class UEditableTextBox*                      TextBox;                                           // 0x2E8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3158[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CharLimit;                                         // 0x2F4(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ULOTF2SettingListEntry_TextBox* GetDefaultObj();

	void OnButtonPressed();
	void HandleTextCommitted(class FText& Text, enum class ETextCommit CommitMethod);
};

// 0x0 (0x2F8 - 0x2F8)
// Class LOTF2.LOTF2SettingListEntry_SessionKey
class ULOTF2SettingListEntry_SessionKey : public ULOTF2SettingListEntry_TextBox
{
public:

	static class UClass* StaticClass();
	static class ULOTF2SettingListEntry_SessionKey* GetDefaultObj();

};

// 0x8 (0x2E0 - 0x2D8)
// Class LOTF2.LOTF2SettingListEntry_SubHeader
class ULOTF2SettingListEntry_SubHeader : public ULOTF2SettingListEntryBase
{
public:
	class URichTextBlock*                        Text;                                              // 0x2D8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ULOTF2SettingListEntry_SubHeader* GetDefaultObj();

};

// 0x8 (0x40 - 0x38)
// Class LOTF2.LOTF2LocalSettings
class ULOTF2LocalSettings : public UDeveloperSettings
{
public:
	uint8                                        ShowAISpawnPoints : 1;                             // Mask: 0x1, PropSize: 0x10x38(0x1)(Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        LocalNavigationAutoUpdate : 1;                     // Mask: 0x2, PropSize: 0x10x38(0x1)(Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        RunAsGenerateNavMeshCommandlet : 1;                // Mask: 0x4, PropSize: 0x10x38(0x1)(Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        GodMode : 1;                                       // Mask: 0x8, PropSize: 0x10x38(0x1)(Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        ForceFeedback : 1;                                 // Mask: 0x10, PropSize: 0x10x38(0x1)(Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        UnlockGauntlets : 1;                               // Mask: 0x20, PropSize: 0x10x38(0x1)(Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Attributes3DDebugDisplay : 1;                      // Mask: 0x40, PropSize: 0x10x38(0x1)(Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        IFramesDebugDisplay : 1;                           // Mask: 0x80, PropSize: 0x10x38(0x1)(Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        SensesHearingDebugDisplay : 1;                     // Mask: 0x1, PropSize: 0x10x39(0x1)(Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        IgnoreStatsRequirementsForEquip : 1;               // Mask: 0x2, PropSize: 0x10x39(0x1)(Edit, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_315B[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ULOTF2LocalSettings* GetDefaultObj();

	bool SetSensesHearingDebugDisplay(bool bNewValue);
	void SetIgnoreStatsRequirementsForEquip(bool NewValue);
	bool SetIFramesDebugDisplay(bool bNewValue);
	bool SetAttributes3DDebugDisplay(bool bNewValue);
	void SaveGame(class AActor* WorldContextActor, int32 SlotIndex);
	void LoadGame(class AActor* WorldContextActor, int32 SlotIndex);
	bool GetUnlockGauntlets();
	bool GetShowAttackMetricsDebug();
	bool GetSensesHearingDebugDisplay();
	bool GetIgnoreStatsRequirementsForEquip();
	bool GetIFramesDebugDisplay();
	bool GetGodMode();
	bool GetForceParryDebug();
	bool GetDisableForceFeedback();
	bool GetAttributes3DDebugDisplay();
};

// 0x68 (0x3A8 - 0x340)
// Class LOTF2.LOTF2StartupGameMode
class ALOTF2StartupGameMode : public AGameModeBase
{
public:
	uint8                                        Pad_3161[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnResetCustomization;                              // 0x348(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	class ACameraActor*                          MainCamera;                                        // 0x358(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3162[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ACustomizationLevelScript*             CustomizationLevelScript;                          // 0x370(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3163[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ALOTF2StartupGameMode* GetDefaultObj();

	void StartGameSession(const class FString& LevelName);
	bool ShouldSetupCharacter();
	void SetShouldSetupCharacter(bool bShouldSetup);
	void SetMenuCameras(class ACameraActor* MainCamera, TArray<struct FCustomizationCamera>& ShapeCameras);
	void SetLevelToLoad(const class FString& LevelToLoad);
	void SetCustomizationLevel(class ACustomizationLevelScript* CustomizationLevelScript);
	void SetCurrentSaveGameExist(bool bExists);
	void SetCharacterCustomized(bool bCustomized);
	void SetAvailableGamesToLoad(int32 GamesToLoad);
	bool IsCharacterCustomized();
	TArray<struct FCustomizationCamera> GetShapeCameras();
	class ACameraActor* GetMainCamera();
	class FString GetLevelToLoad();
	class ACustomizationLevelScript* GetCustomizationLevel();
	int32 GetCountCachedAvailableGamesToLoad();
	bool CurrentSaveGameExists();
};

// 0x10 (0x3D0 - 0x3C0)
// Class LOTF2.LOTF2StartupGameSession
class ALOTF2StartupGameSession : public ALOTF2GameSessionBase
{
public:
	uint8                                        Pad_3164[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ALOTF2StartupGameSession* GetDefaultObj();

	class ALOTF2StartupGameSession* GetStartupGameSession(class UObject* WorldContextObject);
};

// 0x0 (0x28 - 0x28)
// Class LOTF2.LOTF2UIBlueprintFunctionLibrary
class ULOTF2UIBlueprintFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class ULOTF2UIBlueprintFunctionLibrary* GetDefaultObj();

	void UpdateNavigationDirections(bool bUpEnabled, bool bDownEnabled, bool bLeftEnabled, bool bRightEnabled);
	void UpdateLastFocusedChild(class UWidget*& CurrentFocus, class UWidget* Container, bool bDeepSearch, class UWidget** Out_NewFocusWidget, bool* Out_bFoundNewFocus);
	bool SkipInitialScreens();
	class APlayerController* GetFocusUser(class UWidget* Widget);
	class UWidget* GetAnyChildWithFocus(class UWidget* Parent, bool bDeepSearch);
	void DrawNavPath(class UObject* WorldContextObject, class UNavigationPath* PathToDraw, const struct FColor& PointColor, const struct FColor& ArrowColor, float DrawTime, float PointRadius, float ArrowSize);
};

// 0x100 (0x3A0 - 0x2A0)
// Class LOTF2.LOTF2Wind
class ALOTF2Wind : public AActor
{
public:
	class AWindDirectionalSource*                WindDirectionalSource;                             // 0x2A0(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialParameterCollection*          MaterialParameterCollection;                       // 0x2A8(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class ALevelStreamingVolume*, struct FLOTF2WindTransitionData> Transitions;                                       // 0x2B0(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnChanged;                                         // 0x300(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class ULOTF2WindData*                        TransitionTarget;                                  // 0x310(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        TransitionTime;                                    // 0x318(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        TransitionInterval;                                // 0x31C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_316A[0x80];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ALOTF2Wind* GetDefaultObj();

	void Transition(class ULOTF2WindData* Data, float TimeInterval);
};

// 0x20 (0x50 - 0x30)
// Class LOTF2.LOTF2WindData
class ULOTF2WindData : public UPrimaryDataAsset
{
public:
	struct FLOTF2WindParameters                  Parameters;                                        // 0x30(0x20)(Edit, NoDestructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ULOTF2WindData* GetDefaultObj();

};

// 0x198 (0x558 - 0x3C0)
// Class LOTF2.LOTF2WorldGameSession
class ALOTF2WorldGameSession : public ALOTF2GameSessionBase
{
public:
	uint8                                        Pad_316B[0x90];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnSearchingForJoinChanged;                         // 0x450(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSearchingForInvasionChanged;                     // 0x460(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnMatchmakingActiveChanged;                        // 0x470(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTravelTimerSet;                                  // 0x480(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_316C[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ALOTF2BeaconClient*                    AcceptedClient;                                    // 0x4B8(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_316D[0x60];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          OnlineTutorialQuestTag;                            // 0x520(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_316E[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ALOTF2WorldGameSession* GetDefaultObj();

	void WorldGameSessionEvent__DelegateSignature(class ALOTF2WorldGameSession* SelfRef);
	bool IsSearchingForJoin();
	bool IsSearchingForInvasion();
	bool IsMatchmakingActiveForInvasion();
	bool IsDefaultMatchmakingActive();
	void HandleSessionKeyChange(const class FString& NewKey);
	void HandleQuestCompletedTagsAdded(struct FGameplayTagContainer& QuestTags);
	void HandlePlayerLevelChange(float Level);
	void HandleOnlineModeSettingsChange(bool bIsOnlineModeEnabled);
	void HandleHostPawnChanged(class APawn* OldPawn, class APawn* NewPawn);
	void HandleAllowCrossplayChange(bool bAllowCrossplay);
	class ALOTF2WorldGameSession* GetWorldGameSession(class UObject* WorldContextObject);
	enum class EMatchmakingType GetTravelMatchmakingType();
	float GetTimeLeftBeforeTravel();
};

// 0x0 (0x4C8 - 0x4C8)
// Class LOTF2.LOTF2WorldSettings
class ALOTF2WorldSettings : public AWorldSettings
{
public:

	static class UClass* StaticClass();
	static class ALOTF2WorldSettings* GetDefaultObj();

};

// 0x10 (0x208 - 0x1F8)
// Class LOTF2.LotfAnimMontage
class ULotfAnimMontage : public UAnimMontage
{
public:
	uint8                                        Pad_316F[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ULotfAnimMontage* GetDefaultObj();

};

// 0x80 (0xB0 - 0x30)
// Class LOTF2.MagicAttributeSet
class UMagicAttributeSet : public UAttributeSet
{
public:
	struct FGameplayAttributeData                Mana;                                              // 0x30(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                MaxMana;                                           // 0x40(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                CastSpeed;                                         // 0x50(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                ExtraCatalystSlots;                                // 0x60(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                ChannelingSpellCostMultiplier;                     // 0x70(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                AuraSpellCostMultiplier;                           // 0x80(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                ShoutSpellCostMultiplier;                          // 0x90(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                BuffSpellCostMultiplier;                           // 0xA0(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UMagicAttributeSet* GetDefaultObj();

	void OnRep_ExtraCatalystSlots(struct FGameplayAttributeData& OldExtraCatalystSlots);
};

// 0x518 (0x7D0 - 0x2B8)
// Class LOTF2.MagicCircleRangedSlotWidget
class UMagicCircleRangedSlotWidget : public ULOTF2UserWidget
{
public:
	class UImage*                                Image_RequirementsKO;                              // 0x2B8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture2D*                            EmptySpellImage;                                   // 0x2C0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                Image_Item;                                        // 0x2C8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTexture2D*                            Image_Default;                                     // 0x2D0(0x8)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOverlay*                              Overlay;                                           // 0x2D8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                Image_Background;                                  // 0x2E0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidgetAnimation*                      Activate;                                          // 0x2E8(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidgetAnimation*                      AmmoActivate;                                      // 0x2F0(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidgetAnimation*                      GrowAnimation;                                     // 0x2F8(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        AmmoCost;                                          // 0x300(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          AnimationGameplayTag;                              // 0x304(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          ReleaseAnimationGameplayTag;                       // 0x30C(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EFEquipmentSlot                   MagicSlot;                                         // 0x314(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EFEquipmentSlot                   RangedAmmoSlot;                                    // 0x315(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3170[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          UseRangedWeaponChangeAmmoSlot;                     // 0x318(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          AllowedMagicFamilyUmbral;                          // 0x320(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          AllowedMagicFamilyRhogar;                          // 0x328(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          AllowedMagicFamilyRadiant;                         // 0x330(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          AllowedMagicFamily;                                // 0x338(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          CostAmmoPercentage;                                // 0x340(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          CostManaPercentage;                                // 0x348(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          CombatModifierUmbralSpellsCostProvisionalDamage;   // 0x350(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          InventoryCategoryEquipmentRangedWeaponCatalyst;    // 0x358(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialInstance*                     BaseWidgetMaterial;                                // 0x360(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                          NoColor;                                           // 0x368(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                          GreyColor;                                         // 0x378(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                          YellowColor;                                       // 0x388(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                          InvisibleColor;                                    // 0x398(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3171[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSlateBrush                           ActiveAmmoBrush;                                   // 0x3B0(0xD0)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FSlateBrush                           NormalAmmoBrush;                                   // 0x480(0xD0)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FGameplayAttribute                    AttributesAttributeSetStrength;                    // 0x550(0x38)(Edit, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayAttribute                    AttributesAttributeSetAgility;                     // 0x588(0x38)(Edit, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayAttribute                    AttributesAttributeSetFaith;                       // 0x5C0(0x38)(Edit, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayAttribute                    AttributesAttributeSetChaos;                       // 0x5F8(0x38)(Edit, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayAttribute                    BasicAttributeSetHealth;                           // 0x630(0x38)(Edit, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayAttribute                    BasicAttributeSetStamina;                          // 0x668(0x38)(Edit, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayAttribute                    BasicAttributeSetMagic;                            // 0x6A0(0x38)(Edit, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayAttribute                    AmmoAttributesSetAmmo;                             // 0x6D8(0x38)(Edit, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInputAction*                          UseRangedWeaponShootInputAction;                   // 0x710(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInputAction*                          UseRangedWeaponQuickShotInputAction;               // 0x718(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3172[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class URichTextBlock*                        InputActionText;                                   // 0x728(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInputAction*                          SpellInputAction;                                  // 0x730(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInputAction*                          AmmoInputAction;                                   // 0x738(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3173[0x80];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UAkAudioEvent*                         MagicCircleRangedSlotSelectSound;                  // 0x7C0(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3174[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMagicCircleRangedSlotWidget* GetDefaultObj();

	void OnKeyBindingChanged(class FName& KeyBindingName);
	void OnEquipmentChange();
	void OnControllerNewPawn(class APawn* OldPawn, class APawn* NewPawn);
	void OnAmmoRangedSlotChanged(enum class EFEquipmentSlot Islot);
	void BP_SetIsUsable(bool bUsable);
};

// 0x348 (0x600 - 0x2B8)
// Class LOTF2.MagicCircleWidget
class UMagicCircleWidget : public ULOTF2UserWidget
{
public:
	class UImage*                                Image_MagicCircle_Item;                            // 0x2B8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                Image_MagicCircle_RequirementsKO;                  // 0x2C0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOverlay*                              Container;                                         // 0x2C8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOverlay*                              CanvasPanel_Magic;                                 // 0x2D0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                            EmptySpellImage;                                   // 0x2D8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstance*                     BaseWidgetMaterial;                                // 0x2E0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBloskUI;                                          // 0x2E8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsMagicMode;                                      // 0x2E9(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3175[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSlateBrush                           ActiveAmmoBrush;                                   // 0x2F0(0xD0)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FSlateBrush                           NormalAmmoBrush;                                   // 0x3C0(0xD0)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTag                          SpellWheelTriggered;                               // 0x490(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          SpellWheelCompleted;                               // 0x498(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          SpellWheelDown;                                    // 0x4A0(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          InventoryCategoryEquipmentRangedWeaponCatalyst;    // 0x4A8(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          NoColor;                                           // 0x4B0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          InvisibleColor;                                    // 0x4C0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bActionsAreVisible;                                // 0x4D0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3176[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayAttribute                    AttributesAttributeSetStrength;                    // 0x4D8(0x38)(Edit, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayAttribute                    AttributesAttributeSetAgility;                     // 0x510(0x38)(Edit, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayAttribute                    AttributesAttributeSetFaith;                       // 0x548(0x38)(Edit, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayAttribute                    AttributesAttributeSetChaos;                       // 0x580(0x38)(Edit, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3177[0x48];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMagicCircleWidget* GetDefaultObj();

	void SetActionsVisibility(bool bVisible, bool bForced);
	void OnEquipmentChange();
	void OnControllerNewPawnInternal(class APawn* OldPawn, class APawn* NewPawn);
	bool GetActionsVisibility();
	void BP_UpdateActionsVisibility(bool bVisible);
	void BP_SetIsUsable(bool bIsUsable);
};

// 0x170 (0x7F8 - 0x688)
// Class LOTF2.MagicItemData
class UMagicItemData : public UEquipementData
{
public:
	struct FDataTableRowHandle                   StatsRow;                                          // 0x688(0x10)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	enum class EMagicFamily                      MagicFamily;                                       // 0x698(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3179[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<struct FGameplayTag, struct FMagicItemToSpawnArray> MagicToSpawn;                                      // 0x6A0(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPrivate)
	enum class EMagicCastingRules                MagicCastingRulesDef;                              // 0x6F0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_317A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UAnimMontage*>                  MagicUseAnimations;                                // 0x6F8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPrivate)
	class UAnimMontage*                          StartMagicLoopUseAnimation;                        // 0x708(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                          MagicLoopUseAnimation;                             // 0x710(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                          EndMagicLoopUseAnimation;                          // 0x718(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<struct FGameplayTag, float>             Cost;                                              // 0x720(0x50)(Edit, NativeAccessSpecifierPrivate)
	TMap<struct FGameplayTag, float>             ContinuousCost;                                    // 0x770(0x50)(Edit, NativeAccessSpecifierPrivate)
	float                                        ContinuousCostPeriod;                              // 0x7C0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsLooping;                                        // 0x7C4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsAuraSpell;                                      // 0x7C5(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsSummonSpell;                                    // 0x7C6(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_317B[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          EventToSendWhenRecastingAura;                      // 0x7C8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FMagicCastCueDefinition               PreparingCastCueDefinition;                        // 0x7D0(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPrivate)
	struct FMagicCastCueDefinition               InitialCastCueDefinition;                          // 0x7DC(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPrivate)
	struct FMagicCastCueDefinition               CastCueDefinition;                                 // 0x7E8(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_317C[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMagicItemData* GetDefaultObj();

	void SetMagicToSpawn(TMap<struct FGameplayTag, struct FMagicItemToSpawnArray>* MagicToSpawn);
	class UAnimMontage* GetStartMagicLoopUseAnimation();
	struct FMagicCastCueDefinition GetPreparingCastCue();
	TArray<class UAnimMontage*> GetMagicUseAnimations();
	TMap<struct FGameplayTag, struct FMagicItemToSpawnArray> GetMagicToSpawn();
	class UAnimMontage* GetMagicLoopUseAnimation();
	enum class EMagicFamily GetMagicFamily();
	enum class EMagicCastingRules GetMagicCastingRulesDef();
	bool GetIsSummonSpell();
	bool GetIsLooping();
	bool GetIsAuraSpell();
	struct FMagicCastCueDefinition GetInitialCastCue();
	struct FGameplayTag GetEventToSendWhenRecastingAura();
	class UAnimMontage* GetEndMagicLoopUseAnimation();
	TMap<struct FGameplayTag, float> GetCost();
	float GetContinuousCostPeriod();
	TMap<struct FGameplayTag, float> GetContinuousCost();
	struct FMagicCastCueDefinition GetCastCue();
};

// 0x100 (0x5F0 - 0x4F0)
// Class LOTF2.MainMenuWidget
class UMainMenuWidget : public UInGameMenuPanel
{
public:
	FMulticastInlineDelegateProperty_            OnStartCharCreation;                               // 0x4F0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UFocusableButtonWidget*                FocusTarget;                                       // 0x500(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            InitialCharacterClasses;                           // 0x508(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            VersionID;                                         // 0x510(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            DataBranchID;                                      // 0x518(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            CodeBranchID;                                      // 0x520(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                      Text_GamerTag;                                     // 0x528(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFocusableButtonWidget*                Button_Continue;                                   // 0x530(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                          Container_Continue;                                // 0x538(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFocusableButtonWidget*                Button_LoadGame;                                   // 0x540(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                          Container_LoadGame;                                // 0x548(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFocusableButtonWidget*                Button_NewGame;                                    // 0x550(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                          Container_NewGame;                                 // 0x558(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFocusableButtonWidget*                Button_Album;                                      // 0x560(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                          Container_Album;                                   // 0x568(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFocusableButtonWidget*                Button_Settings;                                   // 0x570(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                          Container_Settings;                                // 0x578(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFocusableButtonWidget*                Button_LegendaryEdition;                           // 0x580(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                          Container_LegendaryEdition;                        // 0x588(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFocusableButtonWidget*                Button_Quit;                                       // 0x590(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                          Container_Quit;                                    // 0x598(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          LegendaryEditionPanelTag;                          // 0x5A0(0x8)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UFocusableButtonWidget*>        Buttons;                                           // 0x5A8(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_317E[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bInteractionEnabled;                               // 0x5C0(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_317F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bShouldSetupCharacter;                             // 0x5C4(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3180[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bCharacterShouldBeHidden;                          // 0x5C8(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3181[0x17];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ContinueGameDelayTime;                             // 0x5E0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3182[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMainMenuWidget* GetDefaultObj();

	void UpdateVersionIdStrings();
	void StopAudio();
	void SetupCharacter(bool bShouldBeHidden);
	void SetupButtons();
	void SetActive();
	void PrepareClassSelection();
	void PlayAudio();
	void OnMutableMeshChanged();
	void OnLegenderyEditionClick();
	void OnContinueButton();
	void OnAudioStopped();
	void OnAudioPlayed();
	void OnAlbumButton();
	bool HasAvailableSlots();
	void CheckNextOwnedDLC();
	void BP_StartDLCShowQueue();
	void BP_ShowNewOwnedDLC(enum class EDLCName DLCName, struct FDLCOwnedMessage& DlcInfo);
	void BP_ShowHDDMessage();
	void BP_SetFocusDelayed();
	void BP_EndDissolve();
};

// 0x10 (0x2B0 - 0x2A0)
// Class LOTF2.MarketingTool
class AMarketingTool : public AActor
{
public:
	TArray<float>                                ApertureValues;                                    // 0x2A0(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AMarketingTool* GetDefaultObj();

	void UpdateGlobalTime(float Val);
	void ToggleMarketingTool();
};

// 0x88 (0x560 - 0x4D8)
// Class LOTF2.MarketingToolWidget
class UMarketingToolWidget : public UHexActivatableWidget
{
public:
	class UHexGenericSlider*                     Slider_CameraMovementSpeed;                        // 0x4D8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            Text_CameraMovementSpeedValue;                     // 0x4E0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHexGenericSlider*                     Slider_CameraLookSpeed;                            // 0x4E8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            Text_CameraLookSpeedValue;                         // 0x4F0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHexGenericSlider*                     Slider_CameraCraneSpeed;                           // 0x4F8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            Text_CameraCraneSpeedValue;                        // 0x500(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHexGenericSlider*                     Slider_GameGlobalTime;                             // 0x508(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            Text_GameGlobalTimeValue;                          // 0x510(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHexGenericSlider*                     Slider_FocusDistance;                              // 0x518(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            Text_FocusDistanceValue;                           // 0x520(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHexGenericSlider*                     Slider_SensorWidth;                                // 0x528(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            Text_SensorWidthValue;                             // 0x530(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHexGenericSlider*                     Slider_Aperture;                                   // 0x538(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            Text_ApertureValue;                                // 0x540(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCheckBox*                             Checkbox_LookAt;                                   // 0x548(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHexGenericSlider*                     Slider_Units;                                      // 0x550(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            Text_UnitsValue;                                   // 0x558(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UMarketingToolWidget* GetDefaultObj();

	void OnUnitsChanged(float Value);
	void OnSensorWidthChanged(float Value);
	void OnGlobalTimeChanged(float Value);
	void OnFocusDistanceChanged(float Value);
	void OnCameraMovementSpeedChanged(float Value);
	void OnCameraLookSpeedChanged(float Value);
	void OnCameraCraneSpeedChanged(float Value);
	void OnApertureChanged(float Value);
};

// 0x20 (0x98 - 0x78)
// Class LOTF2.MarkItemInventoryItem
class UMarkItemInventoryItem : public UInventoryItem
{
public:
	float                                        DefaultPlacementDistance;                          // 0x78(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        RadiusOfCapsuleToUseOnSpawnChecks;                 // 0x7C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        HalfHeightOfCapsuleToUseOnSpawnChecks;             // 0x80(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3183[0x14];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMarkItemInventoryItem* GetDefaultObj();

};

// 0x0 (0x418 - 0x418)
// Class LOTF2.MarkItemPickup
class AMarkItemPickup : public APickup
{
public:

	static class UClass* StaticClass();
	static class AMarkItemPickup* GetDefaultObj();

};

// 0x20 (0x2C0 - 0x2A0)
// Class LOTF2.MirageActor
class AMirageActor : public AActor
{
public:
	class USceneComponent*                       RootSceneComponent;                                // 0x2A0(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USceneComponent*                       VisualsRootSceneComponent;                         // 0x2A8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USceneComponent*                       MirageVisibilityCollisionsRoot;                    // 0x2B0(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ULOTF2SerializationComponent*          SerializationComponent;                            // 0x2B8(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AMirageActor* GetDefaultObj();

	void OnFadeAwayCompleted();
	void OnCollisionOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	class USceneComponent* GetVisualsRootSceneComponent();
	void FadeAwayBPImplementation();
};

// 0x0 (0x40 - 0x40)
// Class LOTF2.ModCalculation_DamageStamina
class UModCalculation_DamageStamina : public UGameplayModMagnitudeCalculation
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_DamageStamina* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class LOTF2.ModCalculation_DamagePoise
class UModCalculation_DamagePoise : public UGameplayModMagnitudeCalculation
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_DamagePoise* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class LOTF2.ModCalculation_DamageStagger
class UModCalculation_DamageStagger : public UGameplayModMagnitudeCalculation
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_DamageStagger* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class LOTF2.ModCalculation_DeflectionAttack
class UModCalculation_DeflectionAttack : public UGameplayModMagnitudeCalculation
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_DeflectionAttack* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class LOTF2.ModCalculation_StaggerFromBackDamageMultiplier
class UModCalculation_StaggerFromBackDamageMultiplier : public UGameplayModMagnitudeCalculation
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_StaggerFromBackDamageMultiplier* GetDefaultObj();

};

// 0x38 (0x78 - 0x40)
// Class LOTF2.ModCalculation_StatusEffectDamageBase
class UModCalculation_StatusEffectDamageBase : public UGameplayModMagnitudeCalculation
{
public:
	uint8                                        Pad_3185[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UModCalculation_StatusEffectDamageBase* GetDefaultObj();

};

// 0x0 (0x78 - 0x78)
// Class LOTF2.ModCalculation_StatusEffectDamageBleed
class UModCalculation_StatusEffectDamageBleed : public UModCalculation_StatusEffectDamageBase
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_StatusEffectDamageBleed* GetDefaultObj();

};

// 0x0 (0x78 - 0x78)
// Class LOTF2.ModCalculation_StatusEffectDamagePoison
class UModCalculation_StatusEffectDamagePoison : public UModCalculation_StatusEffectDamageBase
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_StatusEffectDamagePoison* GetDefaultObj();

};

// 0x0 (0x78 - 0x78)
// Class LOTF2.ModCalculation_StatusEffectDamageWither
class UModCalculation_StatusEffectDamageWither : public UModCalculation_StatusEffectDamageBase
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_StatusEffectDamageWither* GetDefaultObj();

};

// 0x0 (0x78 - 0x78)
// Class LOTF2.ModCalculation_StatusEffectDamageFrostbite
class UModCalculation_StatusEffectDamageFrostbite : public UModCalculation_StatusEffectDamageBase
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_StatusEffectDamageFrostbite* GetDefaultObj();

};

// 0x0 (0x78 - 0x78)
// Class LOTF2.ModCalculation_StatusEffectDamageSmite
class UModCalculation_StatusEffectDamageSmite : public UModCalculation_StatusEffectDamageBase
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_StatusEffectDamageSmite* GetDefaultObj();

};

// 0x0 (0x78 - 0x78)
// Class LOTF2.ModCalculation_StatusEffectDamageBurn
class UModCalculation_StatusEffectDamageBurn : public UModCalculation_StatusEffectDamageBase
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_StatusEffectDamageBurn* GetDefaultObj();

};

// 0x0 (0x78 - 0x78)
// Class LOTF2.ModCalculation_StatusEffectDamageIgnite
class UModCalculation_StatusEffectDamageIgnite : public UModCalculation_StatusEffectDamageBase
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_StatusEffectDamageIgnite* GetDefaultObj();

};

// 0x8 (0x48 - 0x40)
// Class LOTF2.ModCalculation_BuffWeaponBase
class UModCalculation_BuffWeaponBase : public UGameplayModMagnitudeCalculation
{
public:
	uint8                                        Pad_3186[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UModCalculation_BuffWeaponBase* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class LOTF2.ModCalculation_BuffWeaponDamagePhysical
class UModCalculation_BuffWeaponDamagePhysical : public UModCalculation_BuffWeaponBase
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_BuffWeaponDamagePhysical* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class LOTF2.ModCalculation_BuffWeaponDamageFire
class UModCalculation_BuffWeaponDamageFire : public UModCalculation_BuffWeaponBase
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_BuffWeaponDamageFire* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class LOTF2.ModCalculation_BuffWeaponDamageHoly
class UModCalculation_BuffWeaponDamageHoly : public UModCalculation_BuffWeaponBase
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_BuffWeaponDamageHoly* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class LOTF2.ModCalculation_BuffWeaponDamageMagic
class UModCalculation_BuffWeaponDamageMagic : public UModCalculation_BuffWeaponBase
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_BuffWeaponDamageMagic* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class LOTF2.ModCalculation_BuffWeaponDamageDark
class UModCalculation_BuffWeaponDamageDark : public UModCalculation_BuffWeaponBase
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_BuffWeaponDamageDark* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class LOTF2.ModCalculation_BuffWeaponDamagePoise
class UModCalculation_BuffWeaponDamagePoise : public UModCalculation_BuffWeaponBase
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_BuffWeaponDamagePoise* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class LOTF2.ModCalculation_BuffWeaponDamageStamina
class UModCalculation_BuffWeaponDamageStamina : public UModCalculation_BuffWeaponBase
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_BuffWeaponDamageStamina* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class LOTF2.ModCalculation_BuffWeaponDamageStagger
class UModCalculation_BuffWeaponDamageStagger : public UModCalculation_BuffWeaponBase
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_BuffWeaponDamageStagger* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class LOTF2.ModCalculation_BuffWeaponDamageProvisionalDamage
class UModCalculation_BuffWeaponDamageProvisionalDamage : public UModCalculation_BuffWeaponBase
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_BuffWeaponDamageProvisionalDamage* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class LOTF2.ModCalculation_BuffWeaponDamageAggro
class UModCalculation_BuffWeaponDamageAggro : public UModCalculation_BuffWeaponBase
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_BuffWeaponDamageAggro* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class LOTF2.ModCalculation_BuffWeaponGuardPhysical
class UModCalculation_BuffWeaponGuardPhysical : public UModCalculation_BuffWeaponBase
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_BuffWeaponGuardPhysical* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class LOTF2.ModCalculation_BuffWeaponGuardFire
class UModCalculation_BuffWeaponGuardFire : public UModCalculation_BuffWeaponBase
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_BuffWeaponGuardFire* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class LOTF2.ModCalculation_BuffWeaponGuardHoly
class UModCalculation_BuffWeaponGuardHoly : public UModCalculation_BuffWeaponBase
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_BuffWeaponGuardHoly* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class LOTF2.ModCalculation_BuffWeaponGuardMagic
class UModCalculation_BuffWeaponGuardMagic : public UModCalculation_BuffWeaponBase
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_BuffWeaponGuardMagic* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class LOTF2.ModCalculation_BuffWeaponGuardDark
class UModCalculation_BuffWeaponGuardDark : public UModCalculation_BuffWeaponBase
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_BuffWeaponGuardDark* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class LOTF2.ModCalculation_BuffWeaponGuardPoise
class UModCalculation_BuffWeaponGuardPoise : public UModCalculation_BuffWeaponBase
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_BuffWeaponGuardPoise* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class LOTF2.ModCalculation_BuffWeaponGuardStamina
class UModCalculation_BuffWeaponGuardStamina : public UModCalculation_BuffWeaponBase
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_BuffWeaponGuardStamina* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class LOTF2.ModCalculation_BuffWeaponGuardStagger
class UModCalculation_BuffWeaponGuardStagger : public UModCalculation_BuffWeaponBase
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_BuffWeaponGuardStagger* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class LOTF2.ModCalculation_BuffWeaponGuardProvisionalDamage
class UModCalculation_BuffWeaponGuardProvisionalDamage : public UModCalculation_BuffWeaponBase
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_BuffWeaponGuardProvisionalDamage* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class LOTF2.ModCalculation_BuffWeaponGuardAggro
class UModCalculation_BuffWeaponGuardAggro : public UModCalculation_BuffWeaponBase
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_BuffWeaponGuardAggro* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class LOTF2.ModCalculation_BuffWeaponStatusEffectDamageBleed
class UModCalculation_BuffWeaponStatusEffectDamageBleed : public UModCalculation_BuffWeaponBase
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_BuffWeaponStatusEffectDamageBleed* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class LOTF2.ModCalculation_BuffWeaponStatusEffectDamagePoison
class UModCalculation_BuffWeaponStatusEffectDamagePoison : public UModCalculation_BuffWeaponBase
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_BuffWeaponStatusEffectDamagePoison* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class LOTF2.ModCalculation_BuffWeaponStatusEffectDamageWither
class UModCalculation_BuffWeaponStatusEffectDamageWither : public UModCalculation_BuffWeaponBase
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_BuffWeaponStatusEffectDamageWither* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class LOTF2.ModCalculation_BuffWeaponStatusEffectDamageFrostbite
class UModCalculation_BuffWeaponStatusEffectDamageFrostbite : public UModCalculation_BuffWeaponBase
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_BuffWeaponStatusEffectDamageFrostbite* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class LOTF2.ModCalculation_BuffWeaponStatusEffectDamageSmite
class UModCalculation_BuffWeaponStatusEffectDamageSmite : public UModCalculation_BuffWeaponBase
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_BuffWeaponStatusEffectDamageSmite* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class LOTF2.ModCalculation_BuffWeaponStatusEffectDamageBurn
class UModCalculation_BuffWeaponStatusEffectDamageBurn : public UModCalculation_BuffWeaponBase
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_BuffWeaponStatusEffectDamageBurn* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class LOTF2.ModCalculation_BuffWeaponStatusEffectDamageIgnite
class UModCalculation_BuffWeaponStatusEffectDamageIgnite : public UModCalculation_BuffWeaponBase
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_BuffWeaponStatusEffectDamageIgnite* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class LOTF2.ModCalculation_BuffWeaponGuardResistanceBleed
class UModCalculation_BuffWeaponGuardResistanceBleed : public UModCalculation_BuffWeaponBase
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_BuffWeaponGuardResistanceBleed* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class LOTF2.ModCalculation_BuffWeaponGuardResistancePoison
class UModCalculation_BuffWeaponGuardResistancePoison : public UModCalculation_BuffWeaponBase
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_BuffWeaponGuardResistancePoison* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class LOTF2.ModCalculation_BuffWeaponGuardResistanceWither
class UModCalculation_BuffWeaponGuardResistanceWither : public UModCalculation_BuffWeaponBase
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_BuffWeaponGuardResistanceWither* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class LOTF2.ModCalculation_BuffWeaponGuardResistanceFrostbite
class UModCalculation_BuffWeaponGuardResistanceFrostbite : public UModCalculation_BuffWeaponBase
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_BuffWeaponGuardResistanceFrostbite* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class LOTF2.ModCalculation_BuffWeaponGuardResistanceSmite
class UModCalculation_BuffWeaponGuardResistanceSmite : public UModCalculation_BuffWeaponBase
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_BuffWeaponGuardResistanceSmite* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class LOTF2.ModCalculation_BuffWeaponGuardResistanceBurn
class UModCalculation_BuffWeaponGuardResistanceBurn : public UModCalculation_BuffWeaponBase
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_BuffWeaponGuardResistanceBurn* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class LOTF2.ModCalculation_BuffWeaponGuardResistanceIgnite
class UModCalculation_BuffWeaponGuardResistanceIgnite : public UModCalculation_BuffWeaponBase
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_BuffWeaponGuardResistanceIgnite* GetDefaultObj();

};

// 0x40 (0x80 - 0x40)
// Class LOTF2.ModCalculation_SourceObjectAttributeMultiplierWithRequiredTag
class UModCalculation_SourceObjectAttributeMultiplierWithRequiredTag : public UGameplayModMagnitudeCalculation
{
public:
	struct FGameplayAttribute                    MultiplierAttributeToUse;                          // 0x40(0x38)(Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          RequiredAssetTag;                                  // 0x78(0x8)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UModCalculation_SourceObjectAttributeMultiplierWithRequiredTag* GetDefaultObj();

};

// 0x0 (0x80 - 0x80)
// Class LOTF2.ModCalculation_ChargedAttackDamageMultiplier
class UModCalculation_ChargedAttackDamageMultiplier : public UModCalculation_SourceObjectAttributeMultiplierWithRequiredTag
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_ChargedAttackDamageMultiplier* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class LOTF2.ModCalculation_DamageDarkScaling
class UModCalculation_DamageDarkScaling : public UGameplayModMagnitudeCalculation
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_DamageDarkScaling* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class LOTF2.ModCalculation_DamageFireScaling
class UModCalculation_DamageFireScaling : public UGameplayModMagnitudeCalculation
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_DamageFireScaling* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class LOTF2.ModCalculation_DamageHolyScaling
class UModCalculation_DamageHolyScaling : public UGameplayModMagnitudeCalculation
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_DamageHolyScaling* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class LOTF2.ModCalculation_DamageMagicScaling
class UModCalculation_DamageMagicScaling : public UGameplayModMagnitudeCalculation
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_DamageMagicScaling* GetDefaultObj();

};

// 0x0 (0x80 - 0x80)
// Class LOTF2.ModCalculation_DualWieldingDamageMultiplier
class UModCalculation_DualWieldingDamageMultiplier : public UModCalculation_SourceObjectAttributeMultiplierWithRequiredTag
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_DualWieldingDamageMultiplier* GetDefaultObj();

};

// 0x38 (0x78 - 0x40)
// Class LOTF2.ModCalculation_GuardDamageBase
class UModCalculation_GuardDamageBase : public UGameplayModMagnitudeCalculation
{
public:
	uint8                                        Pad_3187[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UModCalculation_GuardDamageBase* GetDefaultObj();

};

// 0x0 (0x78 - 0x78)
// Class LOTF2.ModCalculation_GuardPhysical
class UModCalculation_GuardPhysical : public UModCalculation_GuardDamageBase
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_GuardPhysical* GetDefaultObj();

};

// 0x0 (0x78 - 0x78)
// Class LOTF2.ModCalculation_GuardFire
class UModCalculation_GuardFire : public UModCalculation_GuardDamageBase
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_GuardFire* GetDefaultObj();

};

// 0x0 (0x78 - 0x78)
// Class LOTF2.ModCalculation_GuardHoly
class UModCalculation_GuardHoly : public UModCalculation_GuardDamageBase
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_GuardHoly* GetDefaultObj();

};

// 0x0 (0x78 - 0x78)
// Class LOTF2.ModCalculation_GuardMagic
class UModCalculation_GuardMagic : public UModCalculation_GuardDamageBase
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_GuardMagic* GetDefaultObj();

};

// 0x0 (0x78 - 0x78)
// Class LOTF2.ModCalculation_GuardPoise
class UModCalculation_GuardPoise : public UModCalculation_GuardDamageBase
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_GuardPoise* GetDefaultObj();

};

// 0x0 (0x78 - 0x78)
// Class LOTF2.ModCalculation_GuardStamina
class UModCalculation_GuardStamina : public UModCalculation_GuardDamageBase
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_GuardStamina* GetDefaultObj();

};

// 0x0 (0x78 - 0x78)
// Class LOTF2.ModCalculation_GuardStagger
class UModCalculation_GuardStagger : public UModCalculation_GuardDamageBase
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_GuardStagger* GetDefaultObj();

};

// 0x0 (0x78 - 0x78)
// Class LOTF2.ModCalculation_GuardDark
class UModCalculation_GuardDark : public UModCalculation_GuardDamageBase
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_GuardDark* GetDefaultObj();

};

// 0x0 (0x78 - 0x78)
// Class LOTF2.ModCalculation_GuardProvisionalDamage
class UModCalculation_GuardProvisionalDamage : public UModCalculation_GuardDamageBase
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_GuardProvisionalDamage* GetDefaultObj();

};

// 0x0 (0x78 - 0x78)
// Class LOTF2.ModCalculation_GuardAggro
class UModCalculation_GuardAggro : public UModCalculation_GuardDamageBase
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_GuardAggro* GetDefaultObj();

};

// 0x0 (0x78 - 0x78)
// Class LOTF2.ModCalculation_GuardAngle
class UModCalculation_GuardAngle : public UModCalculation_GuardDamageBase
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_GuardAngle* GetDefaultObj();

};

// 0x0 (0x78 - 0x78)
// Class LOTF2.ModCalculation_DeflectionGuard
class UModCalculation_DeflectionGuard : public UModCalculation_GuardDamageBase
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_DeflectionGuard* GetDefaultObj();

};

// 0x0 (0x78 - 0x78)
// Class LOTF2.ModCalculation_DeflectionGuardMultiplierOnParry
class UModCalculation_DeflectionGuardMultiplierOnParry : public UModCalculation_GuardDamageBase
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_DeflectionGuardMultiplierOnParry* GetDefaultObj();

};

// 0x0 (0x78 - 0x78)
// Class LOTF2.ModCalculation_DamageStaggerParry
class UModCalculation_DamageStaggerParry : public UModCalculation_GuardDamageBase
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_DamageStaggerParry* GetDefaultObj();

};

// 0x0 (0x78 - 0x78)
// Class LOTF2.ModCalculation_ParryGuardProtectionStamina
class UModCalculation_ParryGuardProtectionStamina : public UModCalculation_GuardDamageBase
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_ParryGuardProtectionStamina* GetDefaultObj();

};

// 0x0 (0x78 - 0x78)
// Class LOTF2.ModCalculation_ParryGuardProtectionStatusEffect
class UModCalculation_ParryGuardProtectionStatusEffect : public UModCalculation_GuardDamageBase
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_ParryGuardProtectionStatusEffect* GetDefaultObj();

};

// 0x0 (0x78 - 0x78)
// Class LOTF2.ModCalculation_ParryGuardProtectionDamage
class UModCalculation_ParryGuardProtectionDamage : public UModCalculation_GuardDamageBase
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_ParryGuardProtectionDamage* GetDefaultObj();

};

// 0x0 (0x78 - 0x78)
// Class LOTF2.ModCalculation_ParryWindow
class UModCalculation_ParryWindow : public UModCalculation_GuardDamageBase
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_ParryWindow* GetDefaultObj();

};

// 0x0 (0x78 - 0x78)
// Class LOTF2.ModCalculation_GuardResistanceBleed
class UModCalculation_GuardResistanceBleed : public UModCalculation_GuardDamageBase
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_GuardResistanceBleed* GetDefaultObj();

};

// 0x0 (0x78 - 0x78)
// Class LOTF2.ModCalculation_GuardResistancePoison
class UModCalculation_GuardResistancePoison : public UModCalculation_GuardDamageBase
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_GuardResistancePoison* GetDefaultObj();

};

// 0x0 (0x78 - 0x78)
// Class LOTF2.ModCalculation_GuardResistanceWither
class UModCalculation_GuardResistanceWither : public UModCalculation_GuardDamageBase
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_GuardResistanceWither* GetDefaultObj();

};

// 0x0 (0x78 - 0x78)
// Class LOTF2.ModCalculation_GuardResistanceFrostbite
class UModCalculation_GuardResistanceFrostbite : public UModCalculation_GuardDamageBase
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_GuardResistanceFrostbite* GetDefaultObj();

};

// 0x0 (0x78 - 0x78)
// Class LOTF2.ModCalculation_GuardResistanceSmite
class UModCalculation_GuardResistanceSmite : public UModCalculation_GuardDamageBase
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_GuardResistanceSmite* GetDefaultObj();

};

// 0x0 (0x78 - 0x78)
// Class LOTF2.ModCalculation_GuardResistanceBurn
class UModCalculation_GuardResistanceBurn : public UModCalculation_GuardDamageBase
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_GuardResistanceBurn* GetDefaultObj();

};

// 0x0 (0x78 - 0x78)
// Class LOTF2.ModCalculation_GuardResistanceIgnite
class UModCalculation_GuardResistanceIgnite : public UModCalculation_GuardDamageBase
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_GuardResistanceIgnite* GetDefaultObj();

};

// 0x0 (0x80 - 0x80)
// Class LOTF2.ModCalculation_KickPoiseDamageMultiplier
class UModCalculation_KickPoiseDamageMultiplier : public UModCalculation_SourceObjectAttributeMultiplierWithRequiredTag
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_KickPoiseDamageMultiplier* GetDefaultObj();

};

// 0x0 (0x80 - 0x80)
// Class LOTF2.ModCalculation_KickStaggerDamageMultiplier
class UModCalculation_KickStaggerDamageMultiplier : public UModCalculation_SourceObjectAttributeMultiplierWithRequiredTag
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_KickStaggerDamageMultiplier* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class LOTF2.ModCalculation_MaxEquipLoad
class UModCalculation_MaxEquipLoad : public UGameplayModMagnitudeCalculation
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_MaxEquipLoad* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class LOTF2.ModCalculation_MaxStaggerHealthBasedOnAttributes
class UModCalculation_MaxStaggerHealthBasedOnAttributes : public UGameplayModMagnitudeCalculation
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_MaxStaggerHealthBasedOnAttributes* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class LOTF2.ModCalculation_MetEquipRequirementsMultiplier
class UModCalculation_MetEquipRequirementsMultiplier : public UGameplayModMagnitudeCalculation
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_MetEquipRequirementsMultiplier* GetDefaultObj();

};

// 0x0 (0x80 - 0x80)
// Class LOTF2.ModCalculation_PrimaryWeaponSlotDamageMultiplier
class UModCalculation_PrimaryWeaponSlotDamageMultiplier : public UModCalculation_SourceObjectAttributeMultiplierWithRequiredTag
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_PrimaryWeaponSlotDamageMultiplier* GetDefaultObj();

};

// 0x0 (0x80 - 0x80)
// Class LOTF2.ModCalculation_SecondaryWeaponSlotDamageMultiplier
class UModCalculation_SecondaryWeaponSlotDamageMultiplier : public UModCalculation_SourceObjectAttributeMultiplierWithRequiredTag
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_SecondaryWeaponSlotDamageMultiplier* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class LOTF2.ModCalculation_StaminaCostDodge
class UModCalculation_StaminaCostDodge : public UGameplayModMagnitudeCalculation
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_StaminaCostDodge* GetDefaultObj();

};

// 0x0 (0x80 - 0x80)
// Class LOTF2.ModCalculation_ThrowableDamageMultiplier
class UModCalculation_ThrowableDamageMultiplier : public UModCalculation_SourceObjectAttributeMultiplierWithRequiredTag
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_ThrowableDamageMultiplier* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class LOTF2.ModCalculation_VisceralDamageMultiplier
class UModCalculation_VisceralDamageMultiplier : public UGameplayModMagnitudeCalculation
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_VisceralDamageMultiplier* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class LOTF2.ModCalculation_WeaponPhysicalScaling
class UModCalculation_WeaponPhysicalScaling : public UGameplayModMagnitudeCalculation
{
public:

	static class UClass* StaticClass();
	static class UModCalculation_WeaponPhysicalScaling* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class LOTF2.ModCalc_BasedOnEncumbranceRatio
class UModCalc_BasedOnEncumbranceRatio : public UGameplayModMagnitudeCalculation
{
public:

	static class UClass* StaticClass();
	static class UModCalc_BasedOnEncumbranceRatio* GetDefaultObj();

};

// 0x20 (0x50 - 0x30)
// Class LOTF2.MojoAttributeSet
class UMojoAttributeSet : public UAttributeSet
{
public:
	struct FGameplayAttributeData                Mojo;                                              // 0x30(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                MaxMojo;                                           // 0x40(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UMojoAttributeSet* GetDefaultObj();

	void OnRep_Mojo(struct FGameplayAttributeData& OldMojo);
};

// 0x28 (0xD8 - 0xB0)
// Class LOTF2.MojoComponent
class UMojoComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnMojoChange;                                      // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                        DefaultMojo;                                       // 0xC0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DefaultMojoCapacity;                               // 0xC4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3190[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMojoComponent* GetDefaultObj();

	void SetMojoCapacity(float Value);
	void SetMojo(float Value, class AActor* MojoChangeInstigator);
	void RemoveMojo(float Value, class AActor* MojoChangeInstigator);
	float GetMojoCapacity();
	float GetMojo();
	void AddMojo(float Value, class AActor* MojoChangeInstigator);
};

// 0x8 (0x80 - 0x78)
// Class LOTF2.MojoDropInventoryItem
class UMojoDropInventoryItem : public UInventoryItem
{
public:
	float                                        MojoQuantity;                                      // 0x78(0x4)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3197[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMojoDropInventoryItem* GetDefaultObj();

	void SetMojoQuantity(float Value);
	float GetMojoQuantity();
};

// 0x110 (0x140 - 0x30)
// Class LOTF2.MovementAttributeSet
class UMovementAttributeSet : public UAttributeSet
{
public:
	struct FGameplayAttributeData                SlowWalkSpeed;                                     // 0x30(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                WalkSpeed;                                         // 0x40(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                WalkSpeedBackward;                                 // 0x50(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                WalkSpeedLateral;                                  // 0x60(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                RunSpeed;                                          // 0x70(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                SprintSpeed;                                       // 0x80(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                LadderClimbUpSpeed;                                // 0x90(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                LadderClimbDownSpeed;                              // 0xA0(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                LadderClimbUpSprintSpeed;                          // 0xB0(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                LadderSlideDownSpeed;                              // 0xC0(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                SprintStaminaCost;                                 // 0xD0(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                DodgeStaminaCost;                                  // 0xE0(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                RotationRate;                                      // 0xF0(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                MovementRotationRate;                              // 0x100(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                MaxEquippedWeight;                                 // 0x110(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                EncumbranceThreshold;                              // 0x120(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                FacingAngleCorrection;                             // 0x130(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UMovementAttributeSet* GetDefaultObj();

	void OnRep_WalkSpeed(struct FGameplayAttributeData& OldWalkSpeed);
	void OnRep_SprintSpeed(struct FGameplayAttributeData& OldSprintSpeed);
	void OnRep_SlowWalkSpeed(struct FGameplayAttributeData& OldSlowWalkSpeed);
	void OnRep_RunSpeed(struct FGameplayAttributeData& OldRunSpeed);
	void OnRep_RotationRate(struct FGameplayAttributeData& OldRotationRate);
	void OnRep_MovementRotationRate(struct FGameplayAttributeData& OldMovementRotationRate);
	void OnRep_LadderSlideDownSpeed(struct FGameplayAttributeData& OldLadderSlideDownSpeed);
	void OnRep_LadderClimbUpSprintSpeed(struct FGameplayAttributeData& OldLadderClimbUpSprintSpeed);
	void OnRep_LadderClimbUpSpeed(struct FGameplayAttributeData& OldLadderClimbUpSpeed);
	void OnRep_LadderClimbDownSpeed(struct FGameplayAttributeData& OldLadderClimbDownSpeed);
	void OnRep_FacingAngleCorrection(struct FGameplayAttributeData& OldFacingAngleCorrection);
	void OnRep_DodgeStaminaCost(struct FGameplayAttributeData& OldDodgeStaminaCost);
};

// 0x50 (0x318 - 0x2C8)
// Class LOTF2.MultiFeatureSliderWidget
class UMultiFeatureSliderWidget : public UCustomizationUserWidget
{
public:
	class UVerticalBox*                          Panel_Features;                                    // 0x2C8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomizationFeatureLabelWidget*      Text_FeatureName;                                  // 0x2D0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                  FeatureName;                                       // 0x2D8(0x18)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	TArray<struct FBodyShapeSubCategoryType>     SliderData;                                        // 0x2F0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	TArray<class USmallFeatureSliderWidget*>     Sliders;                                           // 0x300(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class USmallFeatureSliderWidget> SliderWidget;                                      // 0x310(0x8)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UMultiFeatureSliderWidget* GetDefaultObj();

};

// 0x50 (0x4C8 - 0x478)
// Class LOTF2.MultiItemData
class UMultiItemData : public UItemData
{
public:
	TMap<class UItemData*, int32>                ItemsDataMap;                                      // 0x478(0x50)(Edit, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UMultiItemData* GetDefaultObj();

	TMap<class UItemData*, int32> GetItemsDataMap();
};

// 0x10 (0x88 - 0x78)
// Class LOTF2.MultiItemInventoryItem
class UMultiItemInventoryItem : public UInventoryItem
{
public:
	TArray<class UInventoryItem*>                InventoryItems;                                    // 0x78(0x10)(ZeroConstructor, SaveGame, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UMultiItemInventoryItem* GetDefaultObj();

};

// 0x130 (0x3D0 - 0x2A0)
// Class LOTF2.MusicPlayerController
class AMusicPlayerController : public AActor
{
public:
	int32                                        AudioIndex;                                        // 0x2A0(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_319E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAkComponent*                          AkComponent;                                       // 0x2A8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNiagaraComponent*                     NiagaraComponent;                                  // 0x2B0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMusicPlayerData*                      MusicPlayerData;                                   // 0x2B8(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CurrentPlaybackTime;                               // 0x2C0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_319F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UWorld>                 MainMenuLevel;                                     // 0x2C8(0x30)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMusicPlayerWidget*                    MusicPlayerWidget;                                 // 0x2F8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UCommonActivatableWidget>  MusicPlayerWidgetClass;                            // 0x300(0x8)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_31A0[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsPlaying;                                         // 0x318(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         IsMute;                                            // 0x319(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         IsSeekingTime;                                     // 0x31A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         IsUIActive;                                        // 0x31B(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bAudioFinished;                                    // 0x31C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bShuffleEnabled;                                   // 0x31D(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_31A1[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CurrentAudioTrackIndex;                            // 0x320(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_31A2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAudioData                            CurrentAudioData;                                  // 0x328(0x60)(NativeAccessSpecifierPrivate)
	class UAkRtpc*                               MusicRtpc;                                         // 0x388(0x8)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkRtpc*                               MusicMeterRtpc;                                    // 0x390(0x8)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        Volume;                                            // 0x398(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        SeekerTime;                                        // 0x39C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                EventName;                                         // 0x3A0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        AudioDuration;                                     // 0x3B0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_31A3[0x1C];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AMusicPlayerController* GetDefaultObj();

	void ToggleShuffle();
	void TogglePauseTrack(int32 SelectedIndex);
	void ToggleAudioMute();
	void SetVolume(float Volume);
	void SetPause(bool Pause, int32 Index);
	void SetMusic(int32 Index);
	void SetIsSeeking(bool IsSeeking);
	void SetIsPlaying(bool IsPlaying);
	void SetIsMute(bool IsMute);
	void SeekTo(float Time);
	void PlayAudioIndex(int32 Index);
	void PlayAudio(struct FAudioData& AudioData);
	void OnMusicMeterChanged(float Value);
	void NextTrack(bool Forward);
	class UMusicPlayerWidget* GetMusicPlayerWidget();
	bool GetIsSeekingTime();
	bool GetIsPlaying();
	bool GetIsMute();
	int32 GetCurrentAudioTrackIndex();
	void ChangePlaybackTime(float PlaybackTime);
};

// 0x38 (0x60 - 0x28)
// Class LOTF2.AudioDataWrapper
class UAudioDataWrapper : public UObject
{
public:
	class FText                                  TrackName;                                         // 0x28(0x18)(BlueprintVisible, NativeAccessSpecifierPublic)
	class FText                                  TrackAuthor;                                       // 0x40(0x18)(BlueprintVisible, NativeAccessSpecifierPublic)
	int32                                        Index;                                             // 0x58(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_31A4[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAudioDataWrapper* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class LOTF2.MusicPlayerData
class UMusicPlayerData : public UDataAsset
{
public:
	TArray<struct FAudioData>                    AudioDataArray;                                    // 0x30(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UMusicPlayerData* GetDefaultObj();

	int32 GetAudioDataCount();
	TArray<struct FAudioData> GetAudioDataArray();
	bool GetAudioData(int32 Index, struct FAudioData* AudioData);
};

// 0x120 (0x610 - 0x4F0)
// Class LOTF2.MusicPlayerWidget
class UMusicPlayerWidget : public UInGameMenuPanel
{
public:
	FMulticastInlineDelegateProperty_            OnAudioTrackSelected;                              // 0x4F0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnAudioTrackNext;                                  // 0x500(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnAudioTrackPause;                                 // 0x510(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnAudioVolumeChanged;                              // 0x520(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnAudioPlaybackTimeChanged;                        // 0x530(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnAudioToggleMute;                                 // 0x540(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnToggleShuffle;                                   // 0x550(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnAudioSeek;                                       // 0x560(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnHandleBackAction;                                // 0x570(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	class UListView*                             TrackListView;                                     // 0x580(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USlider*                               Handle_Timeline;                                   // 0x588(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProgressBar*                          ProgressBar_Timeline;                              // 0x590(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USlider*                               Handle_Volume;                                     // 0x598(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProgressBar*                          ProgressBar_Volume;                                // 0x5A0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UAudioDataWrapper*>             AudioData;                                         // 0x5A8(0x10)(BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	class FString                                LoadOptions;                                       // 0x5B8(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AudioSeekAmount;                                   // 0x5C8(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        VolumeSeekAmount;                                  // 0x5CC(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        SelectedIndex;                                     // 0x5D0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsAudioSeekingLeft;                               // 0x5D4(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsAudioSeekingRight;                              // 0x5D5(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsVolumeSeekingUp;                                // 0x5D6(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsVolumeSeekingDown;                              // 0x5D7(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        PlaybackValue;                                     // 0x5D8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        VolumeValue;                                       // 0x5DC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_31AB[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMusicPlayerWidget* GetDefaultObj();

	void ToggleUI();
	void ToggleShuffle();
	void SetSeekerValue(float Value);
	void SetPlaybackTimeText(float CurrentTime, float Duration);
	void SetPause(bool IsPaused);
	void QuitMusicPlayer();
	void OnAudioTrackStarted(int32 Index);
};

// 0x210 (0x2C0 - 0xB0)
// Class LOTF2.MutableWrapperComponent
class UMutableWrapperComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnMutableMeshChangeRequested;                      // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnMutableMeshChanged;                              // 0xC0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCharacterBodyTypeChanged;                        // 0xD0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	uint8                                        Pad_31CB[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UCustomizationSettings*                CustomizationSettings;                             // 0x120(0x8)(ExportObject, ZeroConstructor, InstancedReference, SaveGame, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBodyShapeData*                        BodyShapeData;                                     // 0x128(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_31CC[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class EFEquipmentSlot, class FString> CurrentEquipment;                                  // 0x138(0x50)(Transient, NativeAccessSpecifierPrivate)
	TMap<enum class EFEquipmentSlot, bool>       CurrentEquipmentVisibility;                        // 0x188(0x50)(Transient, NativeAccessSpecifierPrivate)
	TMap<class FName, struct FPhysAssetData>     ClothingAssets;                                    // 0x1D8(0x50)(Transient, NativeAccessSpecifierPrivate)
	TArray<struct FPlayerSocketOverrides>        OverriddenSocketsByPhysique;                       // 0x228(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<enum class EBodyShapeAttributeType>   LockedFeatures;                                    // 0x238(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<enum class ECustomizationCategory>    LockedCategories;                                  // 0x248(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_31CD[0x68];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMutableWrapperComponent* GetDefaultObj();

	void UpdatePhysique();
	void UpdatePhysicalAssets();
	void UpdateClothInteractor();
	void UpdateCloth(class UPhysicsAsset* PhysAsset, class UPhysicsAsset* FatPhysAsset, class UPhysicsAsset* MuscularPhysAsset, class UPhysicsAsset* SkinnyPhysAsset);
	void StartAtomicOperation();
	void SetOptionAttribute(enum class EBodyShapeAttributeType AttributeType, const class FString& Value);
	void SetFloatAttribute(enum class EBodyShapeAttributeType AttributeType, float Value);
	void SetFeatureLocked(enum class EBodyShapeAttributeType AttributeType, bool bLocked);
	void SetDebugArmorPiece(enum class EFEquipmentSlot EquipmentSlot, const class FString& ArmorName);
	void SetCustomizationSettings(class UCustomizationSettings* CustomizationSettings);
	void SetCurrentState(const class FString& State, bool bReuseTextures);
	void SetCurrentEquipment(enum class EFEquipmentSlot EquipmentSlot, const class FString& OptionName, bool bApplyChanges);
	void SetCopyAttribute(enum class EBodyShapeAttributeType OriginalAttribute, enum class EBodyShapeAttributeType DestinationAttribute);
	void SetColorAttribute(enum class EBodyShapeAttributeType AttributeType, struct FLinearColor& Color);
	void SetBodyType(enum class ECharacterBodyType bodyType, bool bApplyChanges);
	void SetBodyShapeData(class UBodyShapeData* BodyShapeData);
	void SetArmorVisible(bool bVisible, bool bApplyChanges);
	void SetArmorSlotVisibility(enum class EFEquipmentSlot EquipmentSlot, bool bVisible, bool bApplyChanges);
	void SetAdditionalFeatureByName(enum class EBodyShapeAttributeType AttributeType, const class FString& FeatureName, const class FString& OptionName, bool bApplyChanges);
	void SetAdditionalFeature(enum class EBodyShapeAttributeType AttributeType, const class FString& OptionName, bool bApplyChanges);
	void RestoreTint(enum class EFEquipmentSlot EquipmentSlot);
	void ResetSettings(bool bResetLocks, bool bApplyChanges);
	void ResetHeadFeature(enum class ECustomizationCategory Category);
	void ResetHeadCustomization();
	void ResetCopyAttribute(enum class EBodyShapeAttributeType OriginalAttribute, enum class EBodyShapeAttributeType DestinationAttribute);
	void RemoveTint(enum class EFEquipmentSlot EquipmentSlot);
	void RemoveTattoo(enum class ETattooLocation Location, bool bFromSettings, bool bApplyChanges);
	void RemoveFaceCustomization();
	void OnMeshUpdatedEvent();
	void OnInstanceUpdatedEvent(class UCustomizableObjectInstance* Instance);
	void OnArmorIsChanged(enum class EFEquipmentSlot Slot, class UEquipableInventoryItem* Gear);
	bool IsTintApplied(class UTintItemData* TintItemData, enum class EFEquipmentSlot EquipmentSlot);
	bool IsHeadCustomized();
	bool IsFeatureLocked(enum class EBodyShapeAttributeType AttributeType);
	bool IsArmorVisible();
	bool IsArmorSlotVisible(enum class EFEquipmentSlot EquipmentSlot);
	void HideFeature(enum class EBodyShapeAttributeType AttributeType, bool bApplyChanges);
	void HandleOnCharacterBodyTypeChanged(enum class ECharacterBodyType CharacterBodyType);
	TArray<struct FPlayerSocketOverrides> GetOverriddenSockets();
	class FString GetOptionAttribute(enum class EBodyShapeAttributeType AttributeType);
	float GetMorphTargetValue(enum class ECustomizationCategory AttributeType, const class FString& FeatureName);
	float GetFloatAttribute(enum class EBodyShapeAttributeType AttributeType);
	class FString GetEquipmentForSlot(enum class EFEquipmentSlot EquipmentSlot);
	class UCustomizationSettings* GetCustomizationSettings();
	class UCustomizableObjectInstance* GetCustomizableObjectInstance();
	class FString GetCurrentState();
	struct FLinearColor GetColorAttribute(enum class EBodyShapeAttributeType AttributeType);
	enum class ECharacterBodyType GetBodyType();
	class UBodyShapeData* GetBodyShapeData();
	TArray<class FString> GetArmorPiecesForSlot(enum class EFEquipmentSlot EquipmentSlot);
	void GenerateRandomPhysicalCustomization();
	void GenerateRandomFaceCustomization(bool bApplyChanges);
	void EnableMorphFeatureAttribute(enum class ECustomizationCategory AttributeType, const class FString& FeatureName, bool bEnabled, bool bApplyChanges);
	void EnableMorphFeature(enum class ECustomizationCategory AttributeType, const class FString& FeatureName, float Value, bool bIndividualHeadFeature, bool bApplyChanges);
	void CopyFromInstance(class UCustomizableObjectInstance* OtherInstance, bool bApplyChanges, bool bLockAllParameters);
	void CopyFrom(class UCustomizationSettings* OtherCustomizationSettings, bool bApplyChanges);
	void ClearEquipment();
	void ApplyTint(class UTintItemData* TintItemData, enum class EFEquipmentSlot EquipmentSlot);
	void ApplyTattooWithDefaultColor(enum class ETattooLocation Location, const class FString& TattooIdentifier, bool bApplyChanges);
	void ApplyTattoo(enum class ETattooLocation Location, const class FString& TattooIdentifier, bool bApplyChanges);
	void ApplyMaterialChanges();
	void ApplyClothMorph();
	void ApplyChanges(bool bIsBlocking);
	void ApplyAtomicOperation();
};

// 0x170 (0x410 - 0x2A0)
// Class LOTF2.NaturalLighting
class ANaturalLighting : public AActor
{
public:
	class ADirectionalLight*                     DirectionalLight;                                  // 0x2A0(0x8)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ASkyLight*                             SkyLight;                                          // 0x2A8(0x8)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AExponentialHeightFog*                 ExponentialHeightFog;                              // 0x2B0(0x8)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ASkyAtmosphere*                        SkyAtmosphere;                                     // 0x2B8(0x8)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class ALevelStreamingVolume*, struct FNaturalLightingTransitionData> Transitions;                                       // 0x2C0(0x50)(Edit, NativeAccessSpecifierPublic)
	float                                        RealmTransitionInterval;                           // 0x310(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PostProcessMaximumWeight;                          // 0x314(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class ANaturalLightingVolume*, struct FNaturalLightingTransitionData> HighPriorityTransitions;                           // 0x318(0x50)(Edit, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  SkyBoxStaticMeshComponent;                         // 0x368(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPostProcessComponent*                 PostProcessComponent;                              // 0x370(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnLightingChanged;                                 // 0x378(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FNaturalLightingTransition            TransitionData;                                    // 0x388(0x30)(NoDestructor, NativeAccessSpecifierPrivate)
	float                                        UmbralVignetteIntensityDelta;                      // 0x3B8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_31CF[0x54];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ANaturalLighting* GetDefaultObj();

	void Transition(class UNaturalLightingData* Data, float TimeInterval);
	void SetUmbralVignetteIntensityDelta(float Delta);
	void OnPlayerEndPlay(class APlayerCharacter* Player);
	void OnPlayerBeginPlay(class APlayerCharacter* Player);
	struct FNaturalLightingPlayerLightData GetPlayerLightData(class APlayerCharacter* Player);
	void ForceUpdate();
	void FinishCurrentTransition();
};

// 0x910 (0x940 - 0x30)
// Class LOTF2.NaturalLightingData
class UNaturalLightingData : public UPrimaryDataAsset
{
public:
	float                                        DirectionalLightIntensity;                         // 0x30(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DirectionalLightIndirectLightingIntensity;         // 0x34(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                DirectionalLightColor;                             // 0x38(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DirectionalVolumetricScatteringIntensity;          // 0x3C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              DirectionalLightRotation;                          // 0x40(0x18)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class UMaterialInterface*                    DirectionalLightFunctionMaterial;                  // 0x58(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DirectionalShaftOcclusionMaskDarkness;             // 0x60(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DirectionalShaftOcclusionDepthRange;               // 0x64(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DirectionalShaftBloomScale;                        // 0x68(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DirectionalShaftBloomThreshold;                    // 0x6C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DirectionalShaftBloomMaxBrightness;                // 0x70(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                DirectionalShaftBloomTintColor;                    // 0x74(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DirectionalAnimationPlaybackSpeed;                 // 0x78(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DirectionalAnimationOffset;                        // 0x7C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           DirectionalAnimationIntensityCurve;                // 0x80(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveLinearColor*                     DirectionalAnimationColorCurve;                    // 0x88(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SkyLightIntensity;                                 // 0x90(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SkyLightIndirectLightingIntensity;                 // 0x94(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SkyLightVolumetricScatteringIntensity;             // 0x98(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                SkyLightColor;                                     // 0x9C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bSkyLightCastShadows : 1;                          // Mask: 0x1, PropSize: 0x10xA0(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_247 : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_31D0[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FogDensity;                                        // 0xA4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FogHeightFalloff;                                  // 0xA8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_31D1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               FogLocation;                                       // 0xB0(0x18)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          FogInscatteringLuminance;                          // 0xC8(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          FogDirectionalInscatteringLuminance;               // 0xD8(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FogDirectionalInscatteringExponent;                // 0xE8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FogDirectionalInscatteringStartDistance;           // 0xEC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FExponentialHeightFogData             FogSecondFogData;                                  // 0xF0(0xC)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	float                                        FogMaxOpacity;                                     // 0xFC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                VolumetricFogAlbedo;                               // 0x100(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          VolumetricFogEmissive;                             // 0x104(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VolumetricFogExtinctionScale;                      // 0x114(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VolumetricFogViewDistance;                         // 0x118(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VolumetricFogStartDistance;                        // 0x11C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VolumetricFogNearFadeInDistance;                   // 0x120(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VolumetricFogScatteringDistribution;               // 0x124(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VolumetricFogStaticLightingScatteringIntensity;    // 0x128(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          SkyAtmosphereSkyLuminanceFactor;                   // 0x12C(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SkyAtmosphereAerialPespectiveViewDistanceScale;    // 0x13C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SkyAtmosphereHeightFogContribution;                // 0x140(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SkyAtmosphereTransmittanceMinLightElevationAngle;  // 0x144(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SkyAtmosphereAerialPerspectiveStartDepth;          // 0x148(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SkyAtmosphereRayleighScatteringScale;              // 0x14C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          SkyAtmosphereRayleighScattering;                   // 0x150(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SkyAtmosphereRayleighExponentialDistribution;      // 0x160(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SkyAtmosphereMieScatteringScale;                   // 0x164(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          SkyAtmosphereMieScattering;                        // 0x168(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SkyAtmosphereMieAbsorptionScale;                   // 0x178(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          SkyAtmosphereMieAbsorption;                        // 0x17C(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SkyAtmosphereMieAnisotropy;                        // 0x18C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SkyAtmosphereMieExponentialDistribution;           // 0x190(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_31D2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInterface*                    SkyBoxMaterial;                                    // 0x198(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReflectionCaptureFogDensityFactor;                 // 0x1A0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlayerFillLightMinimumIntensity;                   // 0x1A4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlayerFillLightMaximumIntensity;                   // 0x1A8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlayerShiningAbilityFillLightIntensity;            // 0x1AC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlayerShiningAbilityLanternIntensity;              // 0x1B0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UmbralDirectionalLightIntensity;                   // 0x1B4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UmbralDirectionalLightIndirectLightingIntensity;   // 0x1B8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                UmbralDirectionalLightColor;                       // 0x1BC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UmbralFogDensity;                                  // 0x1C0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UmbralFogHeightFalloff;                            // 0x1C4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               UmbralFogLocation;                                 // 0x1C8(0x18)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          UmbralFogInscatteringLuminance;                    // 0x1E0(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          UmbralFogDirectionalInscatteringLuminance;         // 0x1F0(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UmbralFogDirectionalInscatteringExponent;          // 0x200(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UmbralFogDirectionalInscatteringStartDistance;     // 0x204(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UmbralFogMaxOpacity;                               // 0x208(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                UmbralVolumetricFogAlbedo;                         // 0x20C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          UmbralVolumetricFogEmissive;                       // 0x210(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UmbralVolumetricFogExtinctionScale;                // 0x220(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UmbralVolumetricFogViewDistance;                   // 0x224(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UmbralVolumetricFogStartDistance;                  // 0x228(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UmbralVolumetricFogNearFadeInDistance;             // 0x22C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UmbralVolumetricFogScatteringDistribution;         // 0x230(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UmbralVolumetricFogStaticLightingScatteringIntensity; // 0x234(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                    UmbralSkyBoxMaterial;                              // 0x238(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FPostProcessSettings                  UmbralPostProcessSettings;                         // 0x240(0x6E0)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	float                                        UmbralSkyLightIntensity;                           // 0x920(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                UmbralSkyLightColor;                               // 0x924(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ScalabilityDirectionalLightIndirectLightingIntensity; // 0x928(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ScalabilityUmbralDirectionalLightIndirectLightingIntensity; // 0x92C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ScalabilitySkyLightIntensity;                      // 0x930(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ScalabilityUmbralSkyLightIntensity;                // 0x934(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_31D3[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UNaturalLightingData* GetDefaultObj();

};

// 0x0 (0x2D8 - 0x2D8)
// Class LOTF2.NaturalLightingVolume
class ANaturalLightingVolume : public AVolume
{
public:

	static class UClass* StaticClass();
	static class ANaturalLightingVolume* GetDefaultObj();

};

// 0x58 (0x310 - 0x2B8)
// Class LOTF2.NavigationBoxWidget
class UNavigationBoxWidget : public ULOTF2UserWidget
{
public:
	uint8                                        NavigationOptions;                                 // 0x2B8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_31D8[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<struct FGameplayTag, class FText>       CustomActions;                                     // 0x2C0(0x50)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UNavigationBoxWidget* GetDefaultObj();

	void SetSwitchPercent(enum class ENavigationBoxOptions NavOption, float Percent);
	void SetOptionVisibility(enum class ENavigationBoxOptions NavigationBoxOptions, bool bVisible);
	void SetOptions(uint8 NavOptions);
	void SetOptionName(enum class ENavigationBoxOptions Option, class FText& Text);
	void SetCustomActions(TMap<struct FGameplayTag, class FText>& CustomActions);
	void RestoreOptions();
	bool RemoveCustomAction(const struct FGameplayTag& ActionIdentifier);
	void ClearCustomOptions();
	bool AddCustomAction(const struct FGameplayTag& ActionIdentifier, class FText& ActionText);
};

// 0x0 (0x28 - 0x28)
// Class LOTF2.NetDuplicateInterface
class INetDuplicateInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class INetDuplicateInterface* GetDefaultObj();

};

// 0x8 (0x2C8 - 0x2C0)
// Class LOTF2.NewAreaMessageWidget
class UNewAreaMessageWidget : public UExtensionPointEntryWidget
{
public:
	class UCommonTextBlock*                      Text_AreaName;                                     // 0x2C0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UNewAreaMessageWidget* GetDefaultObj();

};

// 0x60 (0x308 - 0x2A8)
// Class LOTF2.NewAreaTrigger
class ANewAreaTrigger : public ATriggerBox
{
public:
	struct FGameplayTag                          AreaID;                                            // 0x2A8(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FAnathemaQuery                        SpawnQuery;                                        // 0x2B0(0x50)(Edit, NativeAccessSpecifierPrivate)
	bool                                         bActivated;                                        // 0x300(0x1)(Edit, ZeroConstructor, EditConst, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_31DA[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ANewAreaTrigger* GetDefaultObj();

	bool ShouldSpawn();
	void OnActivationBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	bool IsActivated();
	void CancelAreaTrigger();
};

// 0x18 (0x48 - 0x30)
// Class LOTF2.NewGameManager
class UNewGameManager : public UGameInstanceSubsystem
{
public:
	int32                                        NewGameLevel;                                      // 0x30(0x4)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bShowNewClassUnlocked;                             // 0x34(0x1)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_31DB[0xB];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bNewGamePlusAvailable;                             // 0x40(0x1)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_31DC[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UNewGameManager* GetDefaultObj();

	bool ShouldShowNewClassAvailable();
	void SetShowNewClassAvailable(bool bShow);
	bool IsNewGamePlusAvailable();
	bool HasUnlockedClassInCurrentGame();
	class FName GetUnlockedClassNameInCurrentGame();
	int32 GetNextNewGamePlusLevel();
	int32 GetNewGameLevel();
};

// 0x218 (0x2C8 - 0xB0)
// Class LOTF2.NPCComponent
class UNPCComponent : public UActorComponent
{
public:
	uint8                                        Pad_31E4[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  NPCName;                                           // 0xE8(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  InteractText;                                      // 0x100(0x18)(Edit, NativeAccessSpecifierPrivate)
	struct FDataTableRowHandle                   DialogueData;                                      // 0x118(0x10)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          DefaultAnimation;                                  // 0x128(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDataTableRowHandle                   VendorTable;                                       // 0x130(0x10)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	TArray<struct FDataTableRowHandle>           AdditionalTablesToPreload;                         // 0x140(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FAnathemaQuery>                InteractionQueries;                                // 0x150(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	class UInteractionComponent*                 InteractionComponent;                              // 0x160(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class APlayerController*                     PlayerController;                                  // 0x168(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_31E5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          NPCTag;                                            // 0x174(0x8)(Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_31E6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVendorInventoryContainer             VendorInventory;                                   // 0x180(0x120)(Net, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	bool                                         bVendorInventoryInitialized;                       // 0x2A0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsVendor;                                         // 0x2A1(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_31E7[0x26];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UNPCComponent* GetDefaultObj();

	void SellItemToPlayer(class UInventoryItem* VendorInventoryItem, int32 ItemAmount, class APlayerCharacter* Player);
	void OnRep_IsVendor();
	void OnQuestStateCompleteOrReached(struct FGameplayTagContainer& Tags);
	void OnItemDataClassLoaded();
	void OnDialogueFinished(enum class EDialogueEndReason Reason);
	void NotifyOnInteractionActivate(class UInteractionContext* Context);
	void HandleOnInteractionOverlapChanged(bool bOverlapping, class AActor* OverlappingActor);
	class FText GetNPCName();
	void CheckInteractionQuery();
	enum class EVendorTransactionCode CanSellItemToPlayer(class UInventoryItem* VendorInventoryItem, int32 ItemAmount, class APlayerCharacter* Player);
	bool CanBuyItemFromPlayer(class UInventoryItem* Item, int32 ItemAmount, class APlayerCharacter* Player);
	void BuyItemFromPlayer(class UInventoryItem* PlayerInventoryItem, int32 ItemAmount, class APlayerCharacter* Player);
};

// 0x48 (0x128 - 0xE0)
// Class LOTF2.NPCConfigComponent
class UNPCConfigComponent : public UHexApplySpawnConfigComponent
{
public:
	bool                                         bShouldSpawnCharacterEvenIfDead;                   // 0xE0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bPreventSpawningIfNPCStillExits;                   // 0xE1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_31E8[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          NPCTag;                                            // 0xE4(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_31E9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDataTableRowHandle                   DialogueData;                                      // 0xF0(0x10)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FDataTableRowHandle                   LootTableOverride;                                 // 0x100(0x10)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	enum class ELootTableOverrideMode            LootTableOverrideMode;                             // 0x110(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_31EA[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FAnathemaQuery>                InteractionQueries;                                // 0x118(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UNPCConfigComponent* GetDefaultObj();

};

// 0x8 (0x60 - 0x58)
// Class LOTF2.HexNPCDialogAbilityPayload
class UHexNPCDialogAbilityPayload : public UHexBaseAbilityPayloadData
{
public:
	class UAnimMontage*                          FacialAnimMontage;                                 // 0x58(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UHexNPCDialogAbilityPayload* GetDefaultObj();

};

// 0x18 (0x480 - 0x468)
// Class LOTF2.NPCDialogueAbility
class UNPCDialogueAbility : public UAIPlayMontageAbility
{
public:
	class UAnimMontage*                          FacialAnimMontage;                                 // 0x468(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_31EB[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UNPCDialogueAbility* GetDefaultObj();

};

// 0x298 (0x770 - 0x4D8)
// Class LOTF2.NPCInteractionScreen
class UNPCInteractionScreen : public UHexActivatableWidget
{
public:
	uint8                                        Pad_31EC[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UItemData>                 HealthPotionItem;                                  // 0x4E8(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UItemData>                 LanternItem;                                       // 0x4F0(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFocusableButtonWidget*                Last_FocusTarget;                                  // 0x4F8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UHexActivatableWidget>   UpgradeCharacterScreenClass;                       // 0x500(0x30)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UHexActivatableWidget>   RespecCharacterScreenClass;                        // 0x530(0x30)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UHexActivatableWidget>   NPCVendorScreenClass;                              // 0x560(0x30)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UHexActivatableWidget>   ShrineVendorScreenClass;                           // 0x590(0x30)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UHexActivatableWidget>   UpgradeEquipmentScreenClass;                       // 0x5C0(0x30)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UHexActivatableWidget>   UpgradeHealthPotionScreenClass;                    // 0x5F0(0x30)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UHexActivatableWidget>   UpgradeLanternScreenClass;                         // 0x620(0x30)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UHexActivatableWidget>   SocketRunesScreenClass;                            // 0x650(0x30)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UHexActivatableWidget>   SocketLampShardsScreenClass;                       // 0x680(0x30)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UHexActivatableWidget>   BossRemembrancesScreenClass;                       // 0x6B0(0x30)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFocusableButtonWidget*                Button_Buy;                                        // 0x6E0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFocusableButtonWidget*                Button_Shrine_Buy;                                 // 0x6E8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFocusableButtonWidget*                Button_Sell;                                       // 0x6F0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFocusableButtonWidget*                Button_SocketRunes;                                // 0x6F8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFocusableButtonWidget*                Button_UpgradeEquipment;                           // 0x700(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFocusableButtonWidget*                Button_UpgradeHealthPotion;                        // 0x708(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFocusableButtonWidget*                Button_UpgradeLantern;                             // 0x710(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFocusableButtonWidget*                Button_SocketLanternShards;                        // 0x718(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFocusableButtonWidget*                Button_UpgradeCharacter;                           // 0x720(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFocusableButtonWidget*                Button_RespecCharacter;                            // 0x728(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFocusableButtonWidget*                Button_Remembrances;                               // 0x730(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFocusableButtonWidget*                Button_Talk;                                       // 0x738(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UFocusableButtonWidget*                Button_Leave;                                      // 0x740(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                            Text_Name;                                         // 0x748(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FText                                  NPCName;                                           // 0x750(0x18)(NativeAccessSpecifierPrivate)
	class ABaseNPCCharacter*                     NPCCharacter;                                      // 0x768(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UNPCInteractionScreen* GetDefaultObj();

	void ShowScreen(class UFocusableButtonWidget* WidgetToFocus);
	void OnVendorScreenClosed();
	void OnUpgradeLanternClicked();
	void OnUpgradeHealthPotionClicked();
	void OnUpgradeEquipmentClicked();
	void OnUpgradeCharacterClicked();
	void OnTalkClicked();
	void OnSocketRunesClicked();
	void OnSocketLampShardsClicked();
	void OnShrineBuyClicked();
	void OnSellClicked();
	void OnRespecCharacterClicked();
	void OnRemembrancesClicked();
	void OnLeaveClicked();
	void OnDialogueFinished(enum class EDialogueEndReason Reason);
	void OnBuyClicked();
	void BP_UpgradePotionAvailable(bool bUpgradeAvailable);
	void BP_UpgradeLanternAvailable(bool bUpgradeAvailable);
	void BP_ShowScreen(class UFocusableButtonWidget* WidgetToFocus);
	void BP_LevelUpAvailable(bool bLevelUpAvailable);
	void BP_HideScreen();
	void BP_DialogAvailable(bool bDialogAvailable);
};

// 0x48 (0x520 - 0x4D8)
// Class LOTF2.NPCMessageDialog
class UNPCMessageDialog : public UHexActivatableWidget
{
public:
	FMulticastInlineDelegateProperty_            OnMessageShown;                                    // 0x4D8(0x10)(ZeroConstructor, InstancedReference, BlueprintCallable, NativeAccessSpecifierPublic)
	class UCommonTextBlock*                      Text_NpcName;                                      // 0x4E8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPanelWidget*                          Container_Name;                                    // 0x4F0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonRichTextBlock*                  Text_Message;                                      // 0x4F8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_31ED[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UNPCMessageDialog* GetDefaultObj();

	void SkipMessage();
	void OnSkipDelayTimer();
};

// 0x1B0 (0x688 - 0x4D8)
// Class LOTF2.NPCQuestionDialog
class UNPCQuestionDialog : public UHexActivatableWidget
{
public:
	uint8                                        Pad_31EE[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UPanelWidget*                          Container_Answers;                                 // 0x4E8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UDialogueQuestionButton>   ButtonClass;                                       // 0x4F0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                      Text_Title;                                        // 0x4F8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonRichTextBlock*                  Text_Description;                                  // 0x500(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UDialogueQuestionButton*>       AnswerButtons;                                     // 0x508(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FDialogueStepData                     DialogueQuestionData;                              // 0x518(0x168)(Transient, NativeAccessSpecifierPrivate)
	enum class EAnswerType                       LastAnswer;                                        // 0x680(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_31EF[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UNPCQuestionDialog* GetDefaultObj();

	void OnCurrentAnswerSelected(enum class EAnswerType AnswerType);
};

// 0x50 (0x308 - 0x2B8)
// Class LOTF2.OnlineHUDWidget
class UOnlineHUDWidget : public ULOTF2UserWidget
{
public:
	TMap<class FString, class UTexture2D*>       PlatformLogos;                                     // 0x2B8(0x50)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UOnlineHUDWidget* GetDefaultObj();

	void SetName(class ALOTF2PlayerState* PlayerState, class UCommonTextBlock* blockName, class UImage* ImageLogo);
};

// 0x80 (0x558 - 0x4D8)
// Class LOTF2.OnlineLobbyScreenWidget
class UOnlineLobbyScreenWidget : public UHexActivatableWidget
{
public:
	TSubclassOf<class UOnlinePlayerStatusWidget_Friend> FriendStatusWidgetClass;                           // 0x4D8(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UScrollBox*                            Scroll_Friends;                                    // 0x4E0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVerticalBox*                          Panel_SearchingForFriends;                         // 0x4E8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                      Text_NoFriends;                                    // 0x4F0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFocusableButtonWidget*                Button_Back;                                       // 0x4F8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonRichTextBlock*                  Text_GamerCardInfo;                                // 0x500(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<class ALOTF2BeaconClient*, class UOnlinePlayerStatusWidget_Matchmaking*> MatchmakingPlayers;                                // 0x508(0x50)(ExportObject, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UOnlineLobbyScreenWidget* GetDefaultObj();

	void HandleBackButton();
};

// 0x38 (0x2F0 - 0x2B8)
// Class LOTF2.OnlinePlayerStatusWidget
class UOnlinePlayerStatusWidget : public UHexFocusableWidget
{
public:
	uint8                                        Pad_31F0[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UCommonRichTextBlock*                  Text_Name;                                         // 0x2D0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            Text_ID;                                           // 0x2D8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFocusableButtonWidget*                Button_Invite;                                     // 0x2E0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCircularThrobber*                     Connecting;                                        // 0x2E8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UOnlinePlayerStatusWidget* GetDefaultObj();

	void HandleInvitePlayerPressed();
};

// 0x18 (0x308 - 0x2F0)
// Class LOTF2.OnlinePlayerStatusWidget_Friend
class UOnlinePlayerStatusWidget_Friend : public UOnlinePlayerStatusWidget
{
public:
	class UTextBlock*                            Text_Status;                                       // 0x2F0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_31F1[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOnlinePlayerStatusWidget_Friend* GetDefaultObj();

	void UnbindGamerCardEvent();
	void BindGamerCardEvent();
};

// 0x30 (0x320 - 0x2F0)
// Class LOTF2.OnlinePlayerStatusWidget_Matchmaking
class UOnlinePlayerStatusWidget_Matchmaking : public UOnlinePlayerStatusWidget
{
public:
	uint8                                        Pad_31F2[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UFocusableButtonWidget*                Button_Reject;                                     // 0x308(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            Text_Level;                                        // 0x310(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ALOTF2BeaconClient*                    Player;                                            // 0x318(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UOnlinePlayerStatusWidget_Matchmaking* GetDefaultObj();

	void HandleRejectPlayerPressed();
};

// 0x70 (0x560 - 0x4F0)
// Class LOTF2.OverwriteGameWidget
class UOverwriteGameWidget : public UInGameMenuPanel
{
public:
	class UDataTable*                            AreaNamesDB;                                       // 0x4F0(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          DeleteSaveGameAction;                              // 0x4F8(0x8)(Edit, BlueprintVisible, DisableEditOnTemplate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          Tag_KeyboardInteractKey;                           // 0x500(0x8)(Edit, BlueprintVisible, DisableEditOnTemplate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHexListView*                          List_SavedGames;                                   // 0x508(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USaveGameStatsWidget*                  Panel_SaveStats;                                   // 0x510(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlayerEquipmentPanel*                 Panel_Equipment;                                   // 0x518(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                      Text_CharacterName;                                // 0x520(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UObject*                               InteractedItem;                                    // 0x528(0x8)(BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_31F3[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USaveGameSlotViewListData*             CurrentSlotData;                                   // 0x550(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_31F4[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOverwriteGameWidget* GetDefaultObj();

	void SelectCurrentItem();
	void RemoveSlot();
	void OnPlayerMeshChangeRequested(bool bIsBlocking);
	void OnPlayerMeshChanged();
	void BP_SelectItem();
	void BP_NoSaveGames();
	void BP_DeleteSaveGame(class USaveGameSlotViewListData* SlotToRemove);
};

// 0x40 (0x120 - 0xE0)
// Class LOTF2.ParasiteTetheringConfigComponent
class UParasiteTetheringConfigComponent : public UHexApplySpawnConfigComponent
{
public:
	class ASimpleCharacterSpawner*               LinkedSpawner;                                     // 0xE0(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UAIParasiteTetheringComponent> ParasiteTetheringComponentClass;                   // 0xE8(0x8)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayEffectsWithParamsContainer   GameplayEffectsToApply;                            // 0xF0(0x10)(Edit, NativeAccessSpecifierPrivate)
	struct FHexBattleEffectIdentifierContainer   BattleEffectsToApply;                              // 0x100(0x10)(Edit, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UAIParasiteTetheringComponent> ParasiteTetheringComponent;                        // 0x110(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ALOTF2Character*                       LinkedSpawnedCharacter;                            // 0x118(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UParasiteTetheringConfigComponent* GetDefaultObj();

	void OnLinkedCharacterSpawned(class ASimpleCharacterSpawner* Spawner, class ALOTF2Character* Character);
	void ChangeLinkedSpawnedCharacter(class ALOTF2Character* LinkedSpawnedCharacter);
};

// 0x10 (0x40 - 0x30)
// Class LOTF2.ParryableWindow
class UParryableWindow : public UAnimNotifyState
{
public:
	TSubclassOf<class UGameplayEffect>           ParryableGE;                                       // 0x30(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FActiveGameplayEffectHandle           ParryableGEHandle;                                 // 0x38(0x8)(Edit, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UParryableWindow* GetDefaultObj();

};

// 0x10 (0x48 - 0x38)
// Class LOTF2.ParryableReferenceFrame
class UParryableReferenceFrame : public UAnimNotify
{
public:
	uint8                                        bOverrideReferenceJoint : 1;                       // Mask: 0x1, PropSize: 0x10x38(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_248 : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_31F5[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EPropJoint                        ReferenceJointOverride;                            // 0x3C(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_31F6[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EParryableReferenceAxis           Axis;                                              // 0x40(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bInvertAxis : 1;                                   // Mask: 0x1, PropSize: 0x10x44(0x1)(Edit, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_31F7[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UParryableReferenceFrame* GetDefaultObj();

};

// 0x58 (0x138 - 0xE0)
// Class LOTF2.PatrolPathConfigComponent
class UPatrolPathConfigComponent : public UHexApplySpawnConfigComponent
{
public:
	enum class EPatrolMode                       PatrolMode;                                        // 0xE0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EPatrolSpeed                      PatrolSpeed;                                       // 0xE1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bFollowSplineCurve;                                // 0xE2(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_31F8[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USplineComponent*                      PathSplineComponent;                               // 0xE8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FPatrolPointConfig>            PatrolActions;                                     // 0xF0(0x10)(ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	bool                                         bPreSavePatrolPathBuilt;                           // 0x100(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_31F9[0x37];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPatrolPathConfigComponent* GetDefaultObj();

};

// 0x48 (0xF8 - 0xB0)
// Class LOTF2.PatrolPointComponent
class UPatrolPointComponent : public UActorComponent
{
public:
	struct FPatrolPointConfig                    Config;                                            // 0xB0(0x40)(Edit, BlueprintVisible, DisableEditOnTemplate, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UPatrolPathConfigComponent> PatrolConfigPtr;                                   // 0xF0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, NonPIEDuplicateTransient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPatrolPointComponent* GetDefaultObj();

	void SetConfig(struct FPatrolPointConfig& Config);
};

// 0x10 (0x2B0 - 0x2A0)
// Class LOTF2.PatrolPointActor
class APatrolPointActor : public AActor
{
public:
	class USceneComponent*                       RootSceneComponent;                                // 0x2A0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPatrolPointComponent*                 PatrolPointComponent;                              // 0x2A8(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class APatrolPointActor* GetDefaultObj();

};

// 0x90 (0xC0 - 0x30)
// Class LOTF2.PerformDialogueAsyncAction
class UPerformDialogueAsyncAction : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_            OnDialogueStarted;                                 // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnDialogueFinished;                                // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnDialogueCancelled;                               // 0x50(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UObject*                               WorldContextObject;                                // 0x60(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                SpeakingActor;                                     // 0x68(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_31FC[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimSequenceBase*                     AnimToPlay;                                        // 0x78(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_31FD[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAkAudioEvent*                         AkEvent;                                           // 0x88(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_31FE[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UAkComponent*                          SpawnedAkComponent;                                // 0xA8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_31FF[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPerformDialogueAsyncAction* GetDefaultObj();

	void StartDialogue();
	class UPerformDialogueAsyncAction* PerformDialogue(class UObject* WorldContextObject, class AActor* SpeakingActor, class UAnimSequenceBase* AnimToPlay, class FName AnimSlotName, class UAkAudioEvent* AkEvent, float DurationOverride, class FText SubtitleText);
	void FinishDialogue();
	void AkPostEventCallback(enum class EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo);
};

// 0x18 (0x2B8 - 0x2A0)
// Class LOTF2.PhotoMode
class APhotoMode : public AActor
{
public:
	class APlayerCharacterController*            CachedPlayerController;                            // 0x2A0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UActionsContext>           InputActionContext;                                // 0x2A8(0x8)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UActionsContext>           CameraInputActionContext;                          // 0x2B0(0x8)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class APhotoMode* GetDefaultObj();

	void TryStartPhotoMode();
	void ToggleInputActionContext(bool bIsCameraInput);
	void Open();
	void Close();
};

// 0x7C0 (0x870 - 0xB0)
// Class LOTF2.PhotoModeComponent
class UPhotoModeComponent : public UActorComponent
{
public:
	uint8                                        Pad_3201[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FIntPoint                             ThumbnailResolution;                               // 0xB4(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3202[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPhotoModeSettings                    PhotoModeSettings;                                 // 0xC0(0x7B0)(BlueprintVisible, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPhotoModeComponent* GetDefaultObj();

	bool UseNativeScreenshot(class UObject* ObjectInWorld);
	bool TakeHighResScreenshot();
	void Screenshot();
	struct FPhotoModeSettings GetPhotoModeSettings();
};

// 0x0 (0x188 - 0x188)
// Class LOTF2.PhotoModeFloatingPawnMovement
class UPhotoModeFloatingPawnMovement : public USpectatorPawnMovement
{
public:

	static class UClass* StaticClass();
	static class UPhotoModeFloatingPawnMovement* GetDefaultObj();

};

// 0x78 (0x3C8 - 0x350)
// Class LOTF2.PhotoModeSpectatorPawn
class APhotoModeSpectatorPawn : public AHexSpectatorPawn
{
public:
	float                                        DistanceLimit;                                     // 0x350(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3203[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UInputAction*                          MoveForwardAction;                                 // 0x358(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInputAction*                          MoveRightAction;                                   // 0x360(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInputAction*                          MoveUpAction;                                      // 0x368(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInputAction*                          TurnAction;                                        // 0x370(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInputAction*                          LookUpAction;                                      // 0x378(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInputAction*                          RollAction;                                        // 0x380(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInputAction*                          FOVAction;                                         // 0x388(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCameraComponent*                      CameraComponent;                                   // 0x390(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinFOV;                                            // 0x398(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxFOV;                                            // 0x39C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                TargetActor;                                       // 0x3A0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3204[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APhotoModeSpectatorPawn* GetDefaultObj();

	void OnTurnActionEvent(struct FInputActionInstance& InputActionInstance);
	void OnRollActionEvent(struct FInputActionInstance& InputActionInstance);
	void OnMoveUpActionEvent(struct FInputActionInstance& InputActionInstance);
	void OnMoveRightActionEvent(struct FInputActionInstance& InputActionInstance);
	void OnMoveForwardActionEvent(struct FInputActionInstance& InputActionInstance);
	void OnLookUpActionEvent(struct FInputActionInstance& InputActionInstance);
	void OnFOVActionEvent(struct FInputActionInstance& InputActionInstance);
	void Initialize(class AActor* TargetActor);
	void Cleanup();
	void ClampSpectatorPosition();
};

// 0x20 (0x4F8 - 0x4D8)
// Class LOTF2.CommandWidget
class UCommandWidget : public UHexActivatableWidget
{
public:
	class UImage*                                ButtonIcon;                                        // 0x4D8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class URichTextBlock*                        RichText_Icon;                                     // 0x4E0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          Action;                                            // 0x4E8(0x8)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInputAction*                          MatchingInputAction;                               // 0x4F0(0x8)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UCommandWidget* GetDefaultObj();

};

// 0x170 (0x648 - 0x4D8)
// Class LOTF2.PhotoModeWidget
class UPhotoModeWidget : public UHexActivatableWidget
{
public:
	TArray<class APlayerCharacter*>              PlayerCharacters;                                  // 0x4D8(0x10)(BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class UInputActionImage*                     Image_Up;                                          // 0x4E8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInputActionImage*                     Image_Down;                                        // 0x4F0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInputActionImage*                     Image_Left;                                        // 0x4F8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInputActionImage*                     Image_Right;                                       // 0x500(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommandWidget*                        Command_Down;                                      // 0x508(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommandWidget*                        Command_Up;                                        // 0x510(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommandWidget*                        Command_Left;                                      // 0x518(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommandWidget*                        Command_Right;                                     // 0x520(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInputActionImage*                     Image_Prev;                                        // 0x528(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInputActionImage*                     Image_Next;                                        // 0x530(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommandWidget*                        Command_ManagePhotos;                              // 0x538(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommandWidget*                        Command_Capture3D;                                 // 0x540(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommandWidget*                        Command_Capture;                                   // 0x548(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommandWidget*                        Command_HideUI;                                    // 0x550(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommandWidget*                        Command_Pause;                                     // 0x558(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommandWidget*                        Command_Menu;                                      // 0x560(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommandWidget*                        Command_RollInputUp;                               // 0x568(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommandWidget*                        Command_RollInputDown;                             // 0x570(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommandWidget*                        Command_FovInputUp;                                // 0x578(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommandWidget*                        Command_FovInputDown;                              // 0x580(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommandWidget*                        Command_Close;                                     // 0x588(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommandWidget*                        Command_ToggleGrid;                                // 0x590(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommandWidget*                        Command_Axiom;                                     // 0x598(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommandWidget*                        Command_Umbral;                                    // 0x5A0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommandWidget*                        Command_MoveDown;                                  // 0x5A8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommandWidget*                        Command_MoveUp;                                    // 0x5B0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneStateMenuWidget*                 SceneStateMenuWidget;                              // 0x5B8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URichTextBlock*                        RichText_Prev;                                     // 0x5C0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URichTextBlock*                        RichText_Next;                                     // 0x5C8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInputAction*                          InputActionPrevTab;                                // 0x5D0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInputAction*                          InputActionNextTab;                                // 0x5D8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3205[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TWeakObjectPtr<class AActor>>         HiddenCharacters;                                  // 0x5E8(0x10)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3206[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPhotoModeWidget* GetDefaultObj();

	void ToggleMenuEvent();
	void ToggleGrid();
	void ToggleFocus(bool bFocusable);
	void OpenAlbum();
	void OnSlotLimitReached();
	void OnResetPhotoMode();
	void OnQuit();
	void OnControllerChanged();
	void HideAI(bool bVisible);
	void CloseAlbum();
};

// 0x18 (0x430 - 0x418)
// Class LOTF2.PickupAutoTriggered
class APickupAutoTriggered : public APickup
{
public:
	float                                        AutoTriggerDelay;                                  // 0x418(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3207[0x14];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APickupAutoTriggered* GetDefaultObj();

	void SetTargetCharacter(class ALOTF2Character* Character);
	class ALOTF2Character* GetTargetCharacter();
};

// 0x80 (0xA8 - 0x28)
// Class LOTF2.PickupFactory
class UPickupFactory : public UObject
{
public:
	TSoftClassPtr<class APickup>                 DefaultPickupClass;                                // 0x28(0x30)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<TSoftClassPtr<class UInventoryItem>, TSoftClassPtr<class APickup>> PickupClassMap;                                    // 0x58(0x50)(Edit, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPickupFactory* GetDefaultObj();

};

// 0x140 (0x1F0 - 0xB0)
// Class LOTF2.PlayerActionManagerComponent
class UPlayerActionManagerComponent : public UActorComponent
{
public:
	uint8                                        Pad_320B[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSubclassOf<class UActionsContext>>   InitialContextsStack;                              // 0xC0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPrivate)
	TArray<struct FContextInfo>                  ContextsStack;                                     // 0xD0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	struct FContextInfo                          ShadowingContext;                                  // 0xE0(0x18)(NativeAccessSpecifierPrivate)
	uint8                                        Pad_320C[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FInputActionGameplayEventMapping      MovementInput;                                     // 0x100(0x70)(Edit, DisableEditOnInstance, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_320D[0x60];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bAnyAbilityReactedToEvent;                         // 0x1D0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_320E[0x1F];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPlayerActionManagerComponent* GetDefaultObj();

	void TryActivateOrBufferAction(struct FGameplayTag& AssociatedAbilityTag, struct FGameplayTag& GameplayEventTag, struct FInputActionValue& InputActionValue, struct FGameplayAbilityTargetDataHandle& TargetDataHandle, bool bCanBeBuffered, int32 BufferPriority);
	void SetShadowingContext(class UActionsContext* Context);
	void PushContext(class UActionsContext* Context);
	bool ProcessInterruptWindow(const struct FGameplayTag& NewInterrupt);
	void PopContext(class UActionsContext* Context);
	void OnInputActionEvent(struct FInputActionInstance& InputActionInstance);
	void NotifyAbilityReactedToEvent();
	bool GetActionValue(class UInputAction* PInputAction, struct FVector* Result);
	void ClearBuffer();
};

// 0x8 (0x160 - 0x158)
// Class LOTF2.PlayerAudioComponent
class UPlayerAudioComponent : public UCharacterAudioComponent
{
public:
	bool                                         bDeactivateComponent;                              // 0x158(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3210[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPlayerAudioComponent* GetDefaultObj();

	void SetMasterVolumeChanged(const class FString& busName, float NewValue);
};

// 0x1E0 (0xD10 - 0xB30)
// Class LOTF2.PlayerCharacter
class APlayerCharacter : public ALOTF2Character
{
public:
	bool                                         bEnteredPlayMode;                                  // 0xB30(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_321A[0x1F];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               LastPlayerMovementInput;                           // 0xB50(0x18)(BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInteractionSystemComponent*           InteractionSystem;                                 // 0xB68(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStatsContainerComponent*              StatsContainerComponent;                           // 0xB70(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStatusEffectComponent*                StatusEffectComponent;                             // 0xB78(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAttributeTrackerComponent*            AttributeTrackerComponent;                         // 0xB80(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoulflayAffectedActorsComponent*      SoulflayActorsComponent;                           // 0xB88(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URangedCostManagerComponent*           RangedCostManagerComponent;                        // 0xB90(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPostProcessComponent*                 PostProcessGameplayComponent;                      // 0xB98(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTargetComponent*                      PvpTarget;                                         // 0xBA0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUmbralReviveLocationSelectorComponent* UmbralReviveLocationSelectorComponent;             // 0xBA8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAdaptiveTriggerComponent*             AdaptiveTriggerComponent;                          // 0xBB0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHexPlayerAbilityFeedbackComponent*    PlayerAbilityFeedbackComponent;                    // 0xBB8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RootAngleOffset;                                   // 0xBC0(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsTargeting : 1;                                  // Mask: 0x1, PropSize: 0x10xBC4(0x1)(Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsUsingLantern : 1;                               // Mask: 0x2, PropSize: 0x10xBC4(0x1)(Net, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsStunned : 1;                                    // Mask: 0x4, PropSize: 0x10xBC4(0x1)(Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bCapsuleGeneratingOverlaps : 1;                    // Mask: 0x8, PropSize: 0x10xBC4(0x1)(Net, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_249 : 4;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_321B[0x1B];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TWeakObjectPtr<class UObject>>        CombatQueryInterfaces;                             // 0xBE0(0x10)(ZeroConstructor, Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AActor>                 CrouchCamera;                                      // 0xBF0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class APlayerCharacter>       CachedMate;                                        // 0xBF8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CurrentItemsMass;                                  // 0xC00(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxItemMass;                                       // 0xC04(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EncumberedThresholdRelative;                       // 0xC08(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsAnathemaCharacter;                              // 0xC0C(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bDebugAttributesEnabled;                           // 0xC0D(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_321C[0xA];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UHexUmbralAttributeSet*                UmbralAttributeSet;                                // 0xC18(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWitherAttributeSet*                   WitherAttributeSet;                                // 0xC20(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_321D[0xB8];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  RHandSocketName;                                   // 0xCE0(0x8)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  LHandSocketName;                                   // 0xCE8(0x8)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_321E[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialParameterCollection*          LOTF2GlobalMaterialParamCollection;                // 0xD00(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  PlayerPositionMaterialParameterName;               // 0xD08(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class APlayerCharacter* GetDefaultObj();

	void SetTextToWidget(class UWidgetComponent* Widget, class FText& Text);
	void SetRootMotionEnabled(bool bEnabled);
	void SetLastPlayerMovementInput(struct FVector& LastMovementInput);
	void SetLanternCastShadows(bool bEnable);
	void SetAcceptsDamageFromPlayers(bool bValue);
	void ServerTrySellItemToNPC(class UInventoryItem* InteractedItem, int32 ItemAmount, class ABaseNPCCharacter* NPCCharacter);
	void ServerTryBuyItemFromNPC(class UInventoryItem* InteractedItem, int32 ItemAmount, class ABaseNPCCharacter* NPCCharacter);
	void ServerSetLastPlayerMovementInput(struct FVector& LastMovementInput);
	void ServerRestoreTint(enum class EFEquipmentSlot EquipmentSlot);
	void ServerRemoveTintFromSlot(enum class EFEquipmentSlot EquipmentSlot);
	void ServerApplyTintToSlot(class UTintItemData* TintItemData, enum class EFEquipmentSlot EquipmentSlot);
	void ServerApplyTintToAllSlots(class UTintItemData* TintItemData);
	void RepulseEnemies(bool bShouldRepulse);
	void RemoveSoulflayVictim(class AActor* Victim);
	void OpenParryableWindow(class ALOTF2Character* Character);
	void OnStartToUseLanternLight();
	void OnRep_UsingLantern();
	void OnRep_CapsuleGeneratingOverlaps();
	void OnRealmChanged(enum class EGameRealm OldRealm, enum class EGameRealm NewRealm);
	void OnPlayerStoppedTargeting(class APlayerCharacterController* PlayerCharacterController);
	void OnPlayerStartedTargeting(class APlayerCharacterController* PlayerCharacterController);
	void OnInventoryUpdate();
	void OnEquippedItemChange(class UInventoryItem* EquippedItem);
	void OnEndToUseLanternLight();
	void OnDebugAttributes(bool bEnabled);
	bool IsUsingLanternLight();
	bool IsStunned();
	bool IsPlayerInCombat();
	bool IsHost();
	bool IsAnathemaCharacter();
	void HandleRevive();
	void HandleOnWeaponHolsterVisualStateChanged(enum class EHolsterableSlot HolsterableSlot, enum class EHolsterState OldState, enum class EHolsterState NewState);
	void HandleOnWeaponHolsterLogicStateChanged(enum class EHolsterableSlot HolsterableSlot, enum class EHolsterState OldState, enum class EHolsterState NewState);
	void HandleOnDetachedProp(class UPropManagerComponent* PropManager, class AActor* Prop, enum class EPropJoint Joint);
	void HandleOnAttachedProp(class UPropManagerComponent* PropManager, class AActor* Prop, enum class EPropJoint Joint);
	void HandleDeath(class AActor* InstigatorActor, struct FGameplayTagContainer& InstigatorTags, bool bDeathWasObserved);
	struct FVector GetUmbralTranscendValidLocation();
	struct FVector GetUmbralReviveValidLocation(bool bTryToUseCurrentLocation);
	class UUmbralReviveLocationSelectorComponent* GetUmbralReviveLocationSelectorComponent();
	class UStatsContainerComponent* GetStatsContainerComponent();
	enum class EStanceType GetStance();
	float GetRootAngleOffset();
	class UBasePlayerAnimInstance* GetPlayerAnimInstance();
	class UWidgetComponent* GetNewBlockedInteractionWidget();
	struct FVector GetLastPlayerMovementInput();
	bool GetAcceptsDamageFromPlayers();
	void GenerateFlinchMulticast(struct FRotator& RelativeShotRotation, float FlinchIntensity);
	void GenerateFlinch(struct FRotator& RelativeShotRotation, float FlinchIntensity);
	void DEBUG_ServerSetVigor(int32 VigorAmount);
	void CloseParryableWindow(class ALOTF2Character* Character);
	void ClientShowDeathScreen();
	void ApplyLoadingModePhase2();
	void AddSoulflayVictim(class AActor* Victim);
};

// 0x0 (0x2A0 - 0x2A0)
// Class LOTF2.PlayerCharacterCameraMarkerActor
class APlayerCharacterCameraMarkerActor : public AActor
{
public:

	static class UClass* StaticClass();
	static class APlayerCharacterCameraMarkerActor* GetDefaultObj();

};

// 0x508 (0xD70 - 0x868)
// Class LOTF2.PlayerCharacterController
class APlayerCharacterController : public APlayerController
{
public:
	uint8                                        Pad_3230[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnPlayerCharacterSet;                              // 0x878(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnDodged;                                          // 0x888(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnIncomingParryable;                               // 0x898(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTargetChanged;                                   // 0x8A8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnStartedTargeting;                                // 0x8B8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnStoppedTargeting;                                // 0x8C8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnEnteredFocusMode;                                // 0x8D8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnExittedFocusMode;                                // 0x8E8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnInputTypeChanged;                                // 0x8F8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnNotifyPlayerDeath;                               // 0x908(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnNotifyPlayerRevived;                             // 0x918(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnNotifyPlayerExhaustedStart;                      // 0x928(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnNotifyPlayerExhaustedStop;                       // 0x938(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnNotifyPlayerStunStart;                           // 0x948(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnNotifyPlayerStunStop;                            // 0x958(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnNotifyPlayerInstigatedDamage;                    // 0x968(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPlayerStateReplicated;                           // 0x978(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_3231[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UPlayerMappableInputConfig*>    PresetConfigs;                                     // 0x9B0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AActor>                 ResurrectionShrineActor;                           // 0x9C0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInputAction*                          CameraTurnRateAction;                              // 0x9C8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInputAction*                          CameraTurnAction;                                  // 0x9D0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInputAction*                          MovementAction;                                    // 0x9D8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UShakeFeedbackComponent*               ShakeFeedbackComponent;                            // 0x9E0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FPlayerControllerSettingsEntry> SettingsStack;                                     // 0x9E8(0x10)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FPlayerControllerSettings             ActiveSettings;                                    // 0x9F8(0x30)(Net, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FPlayerControllerSettings             DefaultSettings;                                   // 0xA28(0x30)(Net, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class APlayerCharacterCameraMarkerActor*     ReplicatedCameraMarkerActor;                       // 0xA58(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CharacterAngleOffsetSpeed;                         // 0xA60(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3232[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ReplicatedCameraCacheUpdateFrequency;              // 0xA8C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ReplicatedCameraDeltaLocationMax;                  // 0xA90(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ReplicatedCameraLocationLerpSpeed;                 // 0xA94(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ReplicatedCameraDeltaAngleMax;                     // 0xA98(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ReplicatedCameraRotationLerpSpeed;                 // 0xA9C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ReplicatedCameraFOVLerpSpeed;                      // 0xAA0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bRespawnAtHub;                                     // 0xAA4(0x1)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3233[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AHUD>                      DefaultHUDClass;                                   // 0xAA8(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHudWidget*                            HudWidget;                                         // 0xAB0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3234[0x200];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	class UTargetComponent*                      CurrentTarget;                                     // 0xCB8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3235[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class APawn*                                 PrevPawn;                                          // 0xCD0(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UTargetComponent*>              VisibleTargets;                                    // 0xCD8(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class UPlayerActionManagerComponent*         PlayerActionManagerComponent;                      // 0xCE8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayEffectsWithParamsContainer   GEToApplyToHost;                                   // 0xCF0(0x10)(Edit, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3236[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UEnhancedInputComponent*               EnhancedInputComponent;                            // 0xD20(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3237[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UClientSave*                           ClientSave;                                        // 0xD68(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class APlayerCharacterController* GetDefaultObj();

	void UpdateReplicatedCameraCache_Server(struct FPlayerCameraRepCache& Cache);
	void UnlockPlayer(class UObject* SettingsOwner);
	class AActor* TryGetCurrentTarget();
	bool ToggleStaminaUsage();
	void ToggleHUD();
	void TestInput(class UInputAction* Action, const struct FInputActionValue& Value);
	void TestHurtReaction(const class FString& Reaction, float Direction);
	void TestDynamicKnockback(class AActor* OriginActor, struct FGameplayTag& EventTag, float KnockbackAmountInMeters);
	void StreamingDebugStart();
	void StreamingDebugEnd();
	void SpawnFromStartMenu(class FName& PlayerStartTag);
	void SpawnDirSeedDebugStart();
	void SpawnDirSeedDebugEnd();
	void ShowHUDToastMessage(class FText& Content);
	void ShowHUD();
	void ShowDeathUI();
	void ShowCameraSettingsExec();
	void ShowCameraSettings(bool bValue);
	void SetStreamingDebugActive(bool bValue);
	void SetSpawnDirSeedDebugEnabled(bool bValue);
	void SetLocksmithEnabled(bool bValue);
	void SetHUDVisible(bool bValue);
	void SetFriendlyFireActive(bool bValue);
	void SetFreeFlightEnabled(bool bValue);
	void SetDroneCameraActive(bool bValue);
	void SetCurrentTargetComponent(class UTargetComponent* NewTargetComponent);
	void SetCoordinatedDebugEnabled(bool bValue);
	void ServerTestHurtReaction(const class FString& Reaction, float Direction);
	void ServerTestDynamicKnockback(class AActor* OriginActor, struct FGameplayTag& EventTag, float KnockbackAmountInMeters);
	void ServerSendProfileData(TArray<uint8>& CompressedSave, int32 SavePartialId, int32 SavePartialCount);
	void ServerNotifyNoSaveGameData();
	void RespawnPawnAt(const struct FTransform& SpawnTransform);
	void RespawnPawn();
	void RefillInventory();
	void PlayerStarted();
	void OnStabCinematicCameraChanged(bool bEnabled);
	void OnShowTutorialsChanged(bool bEnabled);
	void OnResetCameraYAxisChanged(bool bEnabled);
	void OnPlayerDeath(class AActor* InstigatorActor, struct FGameplayTagContainer& InstigatorTags, bool bDeathWasObserved);
	void OnMouseVerticalAxisChanged(bool bInverted);
	void OnMouseSensitivityChanged(float Multiplier);
	void OnMouseHorizontalAxisChanged(bool bInverted);
	void OnGamepadVibrationEnabled(bool bEnabled);
	void OnGamepadVerticalAxisChanged(bool bInverted);
	void OnGamepadHorizontalAxisChanged(bool bInverted);
	void OnCameraSpeedChanged(float Multiplier);
	void OnCameraShakeChanged(bool bEnabled);
	void OnAutoChangeTargetChanged(bool bEnabled);
	void OnAngleSnappingTagsChanged(const struct FGameplayTag& InTag, int32 NewCount);
	void MakePawnInvulnerable();
	void LockPlayer(class UObject* SettingsOwner, bool bBlockAllAbilities);
	bool IsTargeting();
	bool IsStunned();
	bool IsStreamingDebugActive();
	bool IsSpawnDirSeedDebugEnabled();
	bool IsShowTutorialsEnabled();
	bool IsPointInReplicatedCameraViewpoint(bool bLerped, struct FVector& Point);
	bool IsLocksmithEnabled();
	bool IsInFocusMode();
	bool IsHudEnabled();
	bool IsFriendlyFireActive();
	bool IsFreeFlightEnabled();
	bool IsExhausted();
	bool IsDroneCameraActive();
	bool IsDodging();
	bool IsCoordinatedDebugEnabled();
	bool IsCameraSettingsEnabled();
	bool IsAutoChangeTargetEnabled();
	bool IsActorInReplicatedCameraViewpoint(bool bLerped, class AActor* Actor);
	bool InputKey(const struct FKey& Key, enum class EInputEvent EventType, float AmountDepressed, bool bGamepad);
	bool InputAxis(const struct FKey& Key, float Delta, float DeltaTime, int32 NumSamples, bool bGamepad);
	void InGameSaveSystemMenuOpen();
	void InGameSaveSystemMenuClose();
	void InGameMainMenuClose();
	void InGameInventoryOpen();
	void InGameInventoryClose();
	void InGameDevMenuClose();
	void HideHUD();
	void HandlePossessedPawnChanged(class APawn* OldPawn, class APawn* NewPawn);
	void HandleExitStun();
	void HandleExitExhausted();
	void HandleEnterStun();
	void HandleEnterExhausted();
	void HandleAnyKeyPressed(const struct FKey& Key);
	bool GetReplicatedCameraViewpoint(bool bLerped, struct FVector* CameraPosition, struct FRotator* CameraRotation, float* FOV);
	class APlayerCharacterCameraMarkerActor* GetReplicatedCameraMarkerActor(bool* OutIsValid);
	class UPlayerActionManagerComponent* GetPlayerActionManagerComponent();
	struct FVector GetMoveInputWorldDirection();
	struct FVector GetMoveInput();
	float GetLastStunEndTime();
	float GetLastStunEndSeconds();
	float GetLastRelativeDodgeAngle();
	float GetLastExhaustedEndTime();
	float GetLastExhaustedEndSeconds();
	class UHexLocalPlayer* GetHexLocalPlayer();
	class UTargetComponent* GetCurrentTargetComponent();
	class UTargetComponent* GetCurrentTarget();
	enum class EInputType GetCurrentInputType();
	struct FVector GetAnalogLookInput();
	void FreeFlightToggle();
	void DroneCameraToggle();
	void DestroyPawn();
	void CoordinatesDebugStart();
	void CoordinatesDebugEnd();
	struct FVector ConvertInputToWorldDirection(const struct FVector& Input, enum class EInputConvertionSpace ConvertionSpace);
	void ClientTriggerOnPlayerRevived();
	void ClientStartSpectating();
	void ClientReturnToLocalGameInternal(enum class EClientDisconnectReason& Reason);
	void ClientRequestPlayerData();
	void ClientRequestDataChunk(int32 RequestedSavePartialId);
	void ClientRemoveDeathScreen();
	void BPOnSetPlayerCharacter(class APlayerCharacter* PlayerCharacter);
	void BP_OnUnPossess(class APawn* UnpossessedPawn);
	void BP_OnPossess(class APawn* PossessedPawn);
};

// 0x20 (0x2C0 - 0x2A0)
// Class LOTF2.PlayerCharacterViewer
class APlayerCharacterViewer : public AActor
{
public:
	FMulticastInlineDelegateProperty_            OnPlayerPreviewReady;                              // 0x2A0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	class ALOTF2Character*                       MainPlayerCharacter;                               // 0x2B0(0x8)(BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ALOTF2Character*                       PreviewCharacter;                                  // 0x2B8(0x8)(BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class APlayerCharacterViewer* GetDefaultObj();

	void UpdateWeaponEquipment();
	void UpdatePresetEquipment();
	void SetVisible(bool bVisible);
	void OnWeaponVisualLoaded(class UEquipableInventoryItem* Item, class AActor* VisualInstance);
	void InitPlayerPreview();
	class ALOTF2Character* GetPreviewCharacter();
};

// 0x110 (0x3B0 - 0x2A0)
// Class LOTF2.PlayerEquipmentPanel
class UPlayerEquipmentPanel : public UCommonUserWidget
{
public:
	uint8                                        Pad_3238[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UEquipmentCategoryRow*                 Row_Melee;                                         // 0x2D0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEquipmentCategoryRow*                 Row_Ranged;                                        // 0x2D8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEquipmentCategoryRow*                 Row_Armor;                                         // 0x2E0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEquipmentCategoryRow*                 Row_Bow_Ammo;                                      // 0x2E8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEquipmentCategoryRow*                 Row_Crossbow_Ammo;                                 // 0x2F0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEquipmentCategoryRow*                 Row_Throwable_Ammo;                                // 0x2F8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEquipmentCategoryRow*                 Row_Spells;                                        // 0x300(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEquipmentCategoryRow*                 Row_Rings;                                         // 0x308(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEquipmentCategoryRow*                 Row_Amulets;                                       // 0x310(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEquipmentCategoryRow*                 Row_Usables;                                       // 0x318(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                       Ranged_Switcher;                                   // 0x320(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryGridItem*                    FocusedGridItem;                                   // 0x328(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          Bow_IdentifierTag;                                 // 0x330(0x8)(Edit, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          Crossbow_IdentifierTag;                            // 0x338(0x8)(Edit, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          Throwable_IdentifierTag;                           // 0x340(0x8)(Edit, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          CatalystWeaponIdentifierTag;                       // 0x348(0x8)(Edit, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UInventoryGridItem*>            InventoryGridItems;                                // 0x350(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TMap<class UInventoryItem*, class UInventoryGridItem*> ItemsMap;                                          // 0x360(0x50)(ExportObject, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPlayerEquipmentPanel* GetDefaultObj();

	void OnItemInteracted(class UObject* InventoryItem);
	void OnItemFocused(class UObject* InventoryItem, const struct FGameplayTag& ItemCategory);
	class UWidget* GetFocusTarget();
	class UInventoryGridItem* GetFirstItem();
};

// 0x10 (0x2C8 - 0x2B8)
// Class LOTF2.PlayerJoinedMessageItemWidget
class UPlayerJoinedMessageItemWidget : public ULOTF2UserWidget
{
public:
	class UTextBlock*                            Text_PlayerJoinedName;                             // 0x2B8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MessageVisibilityTime;                             // 0x2C0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3239[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPlayerJoinedMessageItemWidget* GetDefaultObj();

	void PlayFadeOutAnimation();
	void PlayFadeInAnimation();
};

// 0x10 (0x2C8 - 0x2B8)
// Class LOTF2.PlayerJoinedMessageWidget
class UPlayerJoinedMessageWidget : public ULOTF2UserWidget
{
public:
	class UScrollBox*                            ScrollBox_PlayerJoinedMessages;                    // 0x2B8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UPlayerJoinedMessageItemWidget> MessageItemWidgetClass;                            // 0x2C0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPlayerJoinedMessageWidget* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class LOTF2.SpecialAttackActivationCondition
class USpecialAttackActivationCondition : public UObject
{
public:

	static class UClass* StaticClass();
	static class USpecialAttackActivationCondition* GetDefaultObj();

};

// 0x80 (0xA8 - 0x28)
// Class LOTF2.CompareTagsActivationCondition
class UCompareTagsActivationCondition : public USpecialAttackActivationCondition
{
public:
	struct FGameplayTagContainer                 RequiredAttackerTags;                              // 0x28(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 RequiredReceiverTags;                              // 0x48(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 BlockingAttackerTags;                              // 0x68(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 BlockingReceiverTags;                              // 0x88(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UCompareTagsActivationCondition* GetDefaultObj();

};

// 0x30 (0x58 - 0x28)
// Class LOTF2.ComparePositionsActivationCondition
class UComparePositionsActivationCondition : public USpecialAttackActivationCondition
{
public:
	class FName                                  AttackerSocketReferenceName;                       // 0x28(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ReceiverSocketReferenceName;                       // 0x30(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RelativeAnglePositiveMin;                          // 0x38(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RelativeAnglePositiveMax;                          // 0x3C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RelativeAngleNegativeMin;                          // 0x40(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RelativeAngleNegativeMax;                          // 0x44(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AttackerFacingAngleLimit;                          // 0x48(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DistanceMin;                                       // 0x4C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DistanceMax;                                       // 0x50(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_323A[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UComparePositionsActivationCondition* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class LOTF2.SpecialAttackActivationConditionSet
class USpecialAttackActivationConditionSet : public UObject
{
public:
	TArray<class USpecialAttackActivationCondition*> Conditions;                                        // 0x28(0x10)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USpecialAttackActivationConditionSet* GetDefaultObj();

	bool IsActivationPossible(class AActor* Attacker, class AActor* Receiver);
};

// 0x1E8 (0x4A0 - 0x2B8)
// Class LOTF2.PlayerStatsWidget
class UPlayerStatsWidget : public ULOTF2UserWidget
{
public:
	class UCommonTextBlock*                      Text_SoulsMult;                                    // 0x2B8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonNumericTextBlock*               Text_SoulsCount;                                   // 0x2C0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UExtensionPointWidget*                 Container_StatusEffects;                           // 0x2C8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UExtensionPointWidget*                 Container_TemporalStatusEffects;                   // 0x2D0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          Bow_IdentifierTag;                                 // 0x2D8(0x8)(Edit, DisableEditOnTemplate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          Crossbow_IdentifierTag;                            // 0x2E0(0x8)(Edit, DisableEditOnTemplate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          Throwable_IdentifierTag;                           // 0x2E8(0x8)(Edit, DisableEditOnTemplate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          CatalystWeaponIdentifierTag;                       // 0x2F0(0x8)(Edit, DisableEditOnTemplate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayAttribute                    PoiseAttribute;                                    // 0x2F8(0x38)(Edit, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayAttribute                    MaxPoiseAttribute;                                 // 0x330(0x38)(Edit, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UBuffIconWidget>           BuffIconWidgetClass;                               // 0x368(0x8)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UExtensionPointEntryWidget> StatusEffectBarClass;                              // 0x370(0x8)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UPoisePVPStatusBar>        PoisePVPStatusBarClass;                            // 0x378(0x8)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVigorComponent*                       VigorComponent;                                    // 0x380(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStatsContainerComponent*              StatsContainer;                                    // 0x388(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAbilitySystemComponent*               PlayerAsc;                                         // 0x390(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEquipmentManagerComponent*            EquipmentManagerComponent;                         // 0x398(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<struct FGameplayTag, struct FStatusEffectUIData> StatusEffectsUIData;                               // 0x3A0(0x50)(Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_323C[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UPoisePVPStatusBar*                    PoiseEffectBar;                                    // 0x440(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_323D[0x58];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPlayerStatsWidget* GetDefaultObj();

	void UpdateCachedPlayerInfo(class APlayerCharacterController* PlayerController, class APlayerCharacter* PlayerCharacter, class APlayerCharacter* PrevPlayerCharacter);
	void UpdateBuffIcons(class UAbilitySystemComponent* AbilitySystemComp, struct FGameplayEffectSpec& GeSpec, const struct FActiveGameplayEffectHandle& GeHandle);
	void SwitchRangedWeapon(bool UsingCatalyst);
	void RemoveBuffIcons(struct FActiveGameplayEffect& ActiveGameplayEffect);
	void PlayLevelUpAvailable(bool bAvailable);
	void OnVigorMultiplierChanged(float NewVigorMultiplier);
	void OnVigorChanged(int32 NewVigor);
	void OnGameplayEffectAdded(class UAbilitySystemComponent* AbilitySystemComp, struct FGameplayEffectSpec& GeSpec, const struct FActiveGameplayEffectHandle& GeHandle);
	void OnEquipmentChanged();
};

// 0x178 (0x668 - 0x4F0)
// Class LOTF2.PlayerStatus
class UPlayerStatus : public UInGameMenuPanel
{
public:
	class UInventoryCharacterStatusPanel*        Player_Stats;                                      // 0x4F0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStatsContainerComponent*              StatsContainerComponent;                           // 0x4F8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHealthComponent*                      HealthComponent;                                   // 0x500(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEnergyComponent*                      EnergyComponent;                                   // 0x508(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVigorComponent*                       VigorComponent;                                    // 0x510(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<struct FGameplayAttribute, int32>       AttributeToValueMap;                               // 0x518(0x50)(BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class UInventoryItemName*                    MH_Name;                                           // 0x568(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryItemName*                    OH_Name;                                           // 0x570(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWeaponScalingStatRow*                 MH_DamagePhysical;                                 // 0x578(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWeaponScalingStatRow*                 MH_DamageFire;                                     // 0x580(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWeaponScalingStatRow*                 MH_DamageDark;                                     // 0x588(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWeaponScalingStatRow*                 MH_DamageHoly;                                     // 0x590(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULevelUpStatRow*                       MH_GuardProtectionPhysical;                        // 0x598(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULevelUpStatRow*                       MH_GuardProtectionFire;                            // 0x5A0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULevelUpStatRow*                       MH_GuardProtectionHoly;                            // 0x5A8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULevelUpStatRow*                       MH_GuardProtectionDark;                            // 0x5B0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWeaponScalingStatRow*                 OH_DamagePhysical;                                 // 0x5B8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWeaponScalingStatRow*                 OH_DamageFire;                                     // 0x5C0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWeaponScalingStatRow*                 OH_DamageDark;                                     // 0x5C8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWeaponScalingStatRow*                 OH_DamageHoly;                                     // 0x5D0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULevelUpStatRow*                       OH_GuardProtectionPhysical;                        // 0x5D8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULevelUpStatRow*                       OH_GuardProtectionFire;                            // 0x5E0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULevelUpStatRow*                       OH_GuardProtectionHoly;                            // 0x5E8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULevelUpStatRow*                       OH_GuardProtectionDark;                            // 0x5F0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULevelUpStatRow*                       StatRow_DefensePhysical;                           // 0x5F8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULevelUpStatRow*                       StatRow_DefenseFire;                               // 0x600(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULevelUpStatRow*                       StatRow_DefenseHoly;                               // 0x608(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULevelUpStatRow*                       StatRow_DefenseDark;                               // 0x610(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULevelUpStatRow*                       StatRow_ResistanceBleed;                           // 0x618(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULevelUpStatRow*                       StatRow_ResistancePoison;                          // 0x620(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULevelUpStatRow*                       StatRow_ResistanceFrostbite;                       // 0x628(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULevelUpStatRow*                       StatRow_ResistanceSmite;                           // 0x630(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULevelUpStatRow*                       StatRow_ResistanceBurn;                            // 0x638(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULevelUpStatRow*                       StatRow_ResistanceIgnite;                          // 0x640(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                          Lantern_Container;                                 // 0x648(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URuneEffectSummaryWidget*              Container_LampMainShard;                           // 0x650(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URuneEffectSummaryWidget*              Container_LampSecondaryShard;                      // 0x658(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ALOTF2Character*                       PlayerCharacter;                                   // 0x660(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPlayerStatus* GetDefaultObj();

	void UpdateStats();
};

// 0xB0 (0xE0 - 0x30)
// Class LOTF2.PoiseAttributeSet
class UPoiseAttributeSet : public UAttributeSet
{
public:
	struct FGameplayAttributeData                PoiseLevel;                                        // 0x30(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                Poise;                                             // 0x40(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                MaxPoise;                                          // 0x50(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                PoiseRegenDelay;                                   // 0x60(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                Toughness;                                         // 0x70(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                StaggerHealth;                                     // 0x80(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                StaggerMaxHealth;                                  // 0x90(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                StaggerHPRegenRate;                                // 0xA0(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                StaggerHPRegenDelay;                               // 0xB0(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                StaggeredStaggerHealthRecoverPercent;              // 0xC0(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                GuardBrokenStaggerHealthRecoverPercent;            // 0xD0(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPoiseAttributeSet* GetDefaultObj();

	void OnRep_StaggerMaxHealth(struct FGameplayAttributeData& OldStaggerMaxHealth);
	void OnRep_StaggerHealth(struct FGameplayAttributeData& OldStaggerHealth);
	void OnRep_Poise(struct FGameplayAttributeData& OldPoise);
	void OnRep_MaxPoise(struct FGameplayAttributeData& OldMaxPoise);
};

// 0x50 (0x80 - 0x30)
// Class LOTF2.HexPoiseReactionMapper
class UHexPoiseReactionMapper : public UPrimaryDataAsset
{
public:
	TMap<struct FGameplayTag, struct FGameplayTag> TagMapping;                                        // 0x30(0x50)(Edit, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UHexPoiseReactionMapper* GetDefaultObj();

};

// 0xC8 (0x178 - 0xB0)
// Class LOTF2.PoiseComponent
class UPoiseComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnTakeDamage;                                      // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FGameplayTag                          ForcedPoiseReactionOnPoiseBreak;                   // 0xC0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AngleToStagger;                                    // 0xC8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  StaggerForwardVectorJointName;                     // 0xCC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3241[0x3C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimationAsset*                       SpecialHurtAnimation;                              // 0x110(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class FName, struct FGameplayTag>       BodyPartFlinches;                                  // 0x118(0x50)(Edit, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3242[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPoiseComponent* GetDefaultObj();

	struct FGameplayTag TakeDamage(class AActor* DamagedActor, int32 Damage, struct FDamageComponentDamageEvent& DamageEvent, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayTag& PoiseReaction, float KnockbackAmount, bool bIgnoreHyperArmor);
	void SetupPoise(int32 PoiseValue);
	void SetForcedPoiseReactionOnPoiseBreak(const struct FGameplayTag& NewForcedPoiseReactionOnPoiseBreak);
	void RemovePoiseReactionMapping(class FName OverrideId);
	void PlayFlinchAnimation(struct FGameplayTag& FlinchBodyPartTag);
	void OnPoiseResetTimerFinished();
	struct FVector GetStaggerForwardVector();
	float GetStaggerAngle();
	float GetMaxPoise();
	int32 GetCurrentPoiseLevel();
	float GetCurrentPoise();
	void CheckForBodyPartFlinches(class FName& boneHitted);
	void AddPoiseReactionMapping(class UHexPoiseReactionMapper* NewPoiseReactionMapper, class FName OverrideId, int32 Priority);
};

// 0x8 (0x2C8 - 0x2C0)
// Class LOTF2.PoisePVPStatusBar
class UPoisePVPStatusBar : public UExtensionPointEntryWidget
{
public:
	class UStatBarWidget*                        StatBar_StatusEffect;                              // 0x2C0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPoisePVPStatusBar* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class LOTF2.PolynomialRootsFunctionLibrary
class UPolynomialRootsFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UPolynomialRootsFunctionLibrary* GetDefaultObj();

	int32 SolveQuartic(TArray<float>& Coefficients, TArray<float>& Solutions);
	int32 SolveQuadric(TArray<float>& Coefficients, TArray<float>& Solutions);
	int32 SolveCubic(TArray<float>& Coefficients, TArray<float>& Solutions);
};

// 0x18 (0x40 - 0x28)
// Class LOTF2.PresenceOnlineInterface
class UPresenceOnlineInterface : public UObject
{
public:
	uint8                                        Pad_3246[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPresenceOnlineInterface* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class LOTF2.PresenceOnlineInterfaceDefault
class UPresenceOnlineInterfaceDefault : public UPresenceOnlineInterface
{
public:

	static class UClass* StaticClass();
	static class UPresenceOnlineInterfaceDefault* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class LOTF2.PresenceOnlineInterfacePS5
class UPresenceOnlineInterfacePS5 : public UPresenceOnlineInterface
{
public:

	static class UClass* StaticClass();
	static class UPresenceOnlineInterfacePS5* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class LOTF2.PresenceOnlineInterfaceSteam
class UPresenceOnlineInterfaceSteam : public UPresenceOnlineInterface
{
public:

	static class UClass* StaticClass();
	static class UPresenceOnlineInterfaceSteam* GetDefaultObj();

};

// 0x58 (0x88 - 0x30)
// Class LOTF2.PresenceSubsystem
class UPresenceSubsystem : public UGameInstanceSubsystem
{
public:
	uint8                                        Pad_3247[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UPresenceSubsystemConfig*              PresenceSubsystemConfig;                           // 0x60(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPresenceOnlineInterface*              OnlineInterface;                                   // 0x68(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3248[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPresenceSubsystem* GetDefaultObj();

};

// 0x50 (0x80 - 0x30)
// Class LOTF2.PresenceSubsystemConfig
class UPresenceSubsystemConfig : public UDataAsset
{
public:
	TMap<class FName, struct FPresenceSubsystemPlatformConfig> PlatformConfigs;                                   // 0x30(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPresenceSubsystemConfig* GetDefaultObj();

};

// 0x0 (0x2A0 - 0x2A0)
// Class LOTF2.PresetNameWidget
class UPresetNameWidget : public UCommonUserWidget
{
public:

	static class UClass* StaticClass();
	static class UPresetNameWidget* GetDefaultObj();

	void SetPresetName(class FText& PresetName);
};

// 0x58 (0x108 - 0xB0)
// Class LOTF2.PropComponent
class UPropComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnPropAttached;                                    // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPropDetached;                                    // 0xC0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                        BaseDamage;                                        // 0xD0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3249[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 PropTags;                                          // 0xD8(0x20)(Edit, Protected, NativeAccessSpecifierProtected)
	bool                                         bForwardDamageTakenToUser;                         // 0xF8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_324A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class AActor>                 CustomUser;                                        // 0xFC(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_324B[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPropComponent* GetDefaultObj();

	void SetUser(class AActor* InUser);
	class AActor* GetUser();
};

// 0x13D0 (0x1480 - 0xB0)
// Class LOTF2.PropManagerComponent
class UPropManagerComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnAttachedProp;                                    // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnDetachedProp;                                    // 0xC0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class FName                                  MeshComponentName;                                 // 0xD0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AActor>                    InitialProps[0x21];                                // 0xD8(0x108)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FPropsHolder                          AttachedProps[0x21];                               // 0x1E0(0x1290)(Protected, NativeAccessSpecifierProtected)
	class UMeshComponent*                        SpecifiedMeshComponent;                            // 0x1470(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bUseCharacterMesh : 1;                             // Mask: 0x1, PropSize: 0x10x1478(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bDestroyPropsWithOwner : 1;                        // Mask: 0x2, PropSize: 0x10x1478(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bUseLegacyJoints : 1;                              // Mask: 0x4, PropSize: 0x10x1478(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bHasMainProp : 1;                                  // Mask: 0x8, PropSize: 0x10x1478(0x1)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_24A : 4;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_3257[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EPropJoint                        MainPropJoint;                                     // 0x147C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3258[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPropManagerComponent* GetDefaultObj();

	void SetExternalRelativeTransform(class FName ID, enum class EPropJoint Joint, struct FTransform& ExternalRelativeTransform);
	void RemoveExternalRelativeTransform(class FName ID, enum class EPropJoint Joint, bool bChecked);
	bool HasAttachedPropAtJoint(enum class EPropJoint Joint, class AActor* Prop);
	class FName GetJointName(enum class EPropJoint Joint);
	class AActor* GetFirstAttachedProp(enum class EPropJoint Joint);
	TArray<class AActor*> GetAttachedProps(enum class EPropJoint Joint);
	void DetachProp(enum class EPropJoint Joint, class AActor* Prop);
	void AttachProp(enum class EPropJoint Joint, class AActor* Prop, struct FTransform& Transform);
	void AddExternalRelativeTransform(class FName ID, enum class EPropJoint Joint, struct FTransform& ExternalRelativeTransform, int32 Priority, bool bModifyIfAlreadyExisting);
};

// 0x8 (0x30 - 0x28)
// Class LOTF2.PropAnimMetaData
class UPropAnimMetaData : public UAnimMetaData
{
public:
	enum class EPropJoint                        PropJoint;                                         // 0x28(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3259[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPropAnimMetaData* GetDefaultObj();

};

// 0x50 (0x78 - 0x28)
// Class LOTF2.PropSettings
class UPropSettings : public UObject
{
public:
	uint8                                        Pad_325A[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPropSettings* GetDefaultObj();

};

// 0x0 (0x2A0 - 0x2A0)
// Class LOTF2.ProxyManager
class AProxyManager : public AActor
{
public:

	static class UClass* StaticClass();
	static class AProxyManager* GetDefaultObj();

	void SetVisibility(class FName& LevelName, bool bVisible);
};

// 0x210 (0x4B0 - 0x2A0)
// Class LOTF2.SimpleCharacterSpawner
class ASimpleCharacterSpawner : public AActor
{
public:
	uint8                                        Pad_3262[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnCharacterSpawnedDelegate;                        // 0x2C8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCharacterDeadDelegate;                           // 0x2D8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class USceneComponent*                       RootSceneComponent;                                // 0x2E8(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USceneComponent*                       SpawnCollisionsRoot;                               // 0x2F0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ULOTF2SerializationComponent*          LOTF2SerializationComponent;                       // 0x2F8(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWaitFirstEncounterConfigComp*         WaitFirstEncounterConfigComp;                      // 0x300(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class URubberBandingConfigComponent*         RubberBandingConfigComponent;                      // 0x308(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHexSpawnerConfigComponent*            HexSpawnerConfigComponent;                         // 0x310(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPatrolPathConfigComponent*            PatrolPathConfigComponent;                         // 0x318(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextRenderComponent*                  TextRenderComponent;                               // 0x320(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsEnabled;                                        // 0x328(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bAutoSpawn;                                        // 0x329(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bAutoAdjustSpawnHeight;                            // 0x32A(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class ESpawnActorCollisionHandlingMethod CollisionHandlingMethod;                           // 0x32B(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bDontSpawnAgainOnCharacterDead;                    // 0x32C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3263[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class EHexAIFactions, enum class ETeamAttitude> FactionAttitudeOverrides;                          // 0x330(0x50)(Edit, NativeAccessSpecifierPrivate)
	struct FAnathemaQuery                        SpawnQuery;                                        // 0x380(0x50)(Edit, NativeAccessSpecifierPrivate)
	struct FAnathemaQuery                        InteractionControllerQuery;                        // 0x3D0(0x50)(Edit, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class UCharacterData>          CharacterDataClass;                                // 0x420(0x30)(Edit, BlueprintVisible, ExposeOnSpawn, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayEffectsWithParamsContainer   GEsToApplyToCharacterInSpawn;                      // 0x450(0x10)(Edit, NativeAccessSpecifierPrivate)
	enum class ESpawnerSpawningState             SpawningState;                                     // 0x460(0x1)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3264[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ALOTF2Character*                       SpawnedCharacter;                                  // 0x468(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3265[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSpawnerSaveState                     SpawnerSaveState;                                  // 0x4A8(0x2)(SaveGame, NoDestructor, NativeAccessSpecifierPrivate)
	bool                                         bAnyoneInside;                                     // 0x4AA(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3266[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASimpleCharacterSpawner* GetDefaultObj();

	class ALOTF2Character* SpawnCharacterFromDataClass(TSubclassOf<class UCharacterData> CharacterDataClass, struct FTransform& Transform, class AActor* OwnerActor, class UObject* WorldContextObject, bool bAdjustSpawnHeight, bool bFinishSpawning, enum class ESpawnActorCollisionHandlingMethod CollisionHandlingOverride);
	class ALOTF2Character* SpawnCharacterFromData(class UCharacterData* CharacterData, struct FTransform& Transform, class AActor* OwnerActor, class UObject* WorldContextObject, bool bAdjustSpawnHeight, bool bFinishSpawning, enum class ESpawnActorCollisionHandlingMethod CollisionHandlingOverride);
	void SpawnCharacter();
	void SetSpawningEnabled(bool bNewEnabledValueValue);
	void SetCharacterDead(bool bNewDeadValue);
	void SetCharacterDataClass(TSoftClassPtr<class UCharacterData>& CharacterDataClass);
	void SetAutoSpawn(bool bValue);
	void RespawnCharacter();
	void OnSpawnedEnemyDeath(class AActor* InstigatorActor, struct FGameplayTagContainer& InstigatorTags, bool bDeathWasObserved);
	void OnSpawnedCharacterDestroyed(class AActor* DestroyedActor);
	void OnPlayerEnteredSpawnArea();
	void OnFinishSpawnTimerFinished(class ALOTF2Character* CharacterToFinish);
	void OnEquipmentDataLoaded();
	void OnCollisionOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void OnCharacterDataClassLoaded();
	bool IsSpawningEnabled();
	bool IsCharacterDead();
	class UWaitFirstEncounterConfigComp* GetWaitFirstEncounterConfigComponent();
	enum class ESpawnerSpawningState GetSpawnerSpawningState();
	class ALOTF2Character* GetSpawnedCharacter();
	void DestroySpawnedCharacter();
	void CheckForPlayerOverlaps();
};

// 0x0 (0x4B0 - 0x4B0)
// Class LOTF2.PvpSpawner
class APvpSpawner : public ASimpleCharacterSpawner
{
public:

	static class UClass* StaticClass();
	static class APvpSpawner* GetDefaultObj();

};

// 0x68 (0x90 - 0x28)
// Class LOTF2.Quest
class UQuest : public UObject
{
public:
	FMulticastInlineDelegateProperty_            OnQuestStatusChanged;                              // 0x28(0x10)(ZeroConstructor, Transient, InstancedReference, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnQuestStateReached;                               // 0x38(0x10)(ZeroConstructor, Transient, InstancedReference, NativeAccessSpecifierPublic)
	class FName                                  QuestId;                                           // 0x48(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UQuestState*>                   QuestStates;                                       // 0x50(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	bool                                         bQuestBlockedUntilReset;                           // 0x60(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3267[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FQuestData                            Data;                                              // 0x68(0x28)(Transient, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UQuest* GetDefaultObj();

	void OnQuestStateUnlocked(class UQuestState* QuestState);
	void OnQuestStateCompleted(class UQuestState* QuestState);
};

// 0x40 (0x68 - 0x28)
// Class LOTF2.QuestAction
class UQuestAction : public UObject
{
public:
	class FName                                  QuestActionID;                                     // 0x28(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FQuestActionData                      Data;                                              // 0x30(0x38)(Transient, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UQuestAction* GetDefaultObj();

};

// 0x0 (0x68 - 0x68)
// Class LOTF2.QuestActionChangeFaction
class UQuestActionChangeFaction : public UQuestAction
{
public:

	static class UClass* StaticClass();
	static class UQuestActionChangeFaction* GetDefaultObj();

};

// 0x8 (0x70 - 0x68)
// Class LOTF2.QuestActionRemoveItem
class UQuestActionRemoveItem : public UQuestAction
{
public:
	TSubclassOf<class UItemData>                 ItemClass;                                         // 0x68(0x8)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UQuestActionRemoveItem* GetDefaultObj();

};

// 0x18 (0x80 - 0x68)
// Class LOTF2.QuestActionRewardItem
class UQuestActionRewardItem : public UQuestAction
{
public:
	TSubclassOf<class UItemData>                 ItemClass;                                         // 0x68(0x8)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3268[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UQuestActionRewardItem* GetDefaultObj();

	void OnItemDataClassLoaded();
};

// 0x0 (0x68 - 0x68)
// Class LOTF2.QuestActionRewardItemLootTable
class UQuestActionRewardItemLootTable : public UQuestAction
{
public:

	static class UClass* StaticClass();
	static class UQuestActionRewardItemLootTable* GetDefaultObj();

};

// 0x388 (0x3B8 - 0x30)
// Class LOTF2.QuestDirector
class UQuestDirector : public UWorldSubsystem
{
public:
	uint8                                        Pad_326C[0x48];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnGeneralTagsRegistered;                           // 0x78(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnQuestStateReachedTagsRegistered;                 // 0x88(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnQuestStateActivatedTagsRegistered;               // 0x98(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnQuestStateCompletedTagsRegistered;               // 0xA8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnNPCDeath;                                        // 0xB8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_326D[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FHexQuestDirectorSaveData             QuestsSaveData;                                    // 0xF8(0xC8)(SaveGame, NativeAccessSpecifierPrivate)
	TMap<class FName, class UQuest*>             Quests;                                            // 0x1C0(0x50)(Transient, NativeAccessSpecifierPrivate)
	TMap<struct FGameplayTag, class FName>       QuestsByActor;                                     // 0x210(0x50)(Transient, NativeAccessSpecifierPrivate)
	TMap<struct FGameplayTag, class ASimpleCharacterSpawner*> NPCSpawners;                                       // 0x260(0x50)(Transient, NativeAccessSpecifierPrivate)
	TMap<struct FGameplayTag, struct FHexPotentialNPCSpawnersArray> PotentialNPCSpawners;                              // 0x2B0(0x50)(Transient, NativeAccessSpecifierPrivate)
	class UQuestFactory*                         QuestFactory;                                      // 0x300(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bPostLoadGameRequested;                            // 0x308(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_326E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          GestureTag;                                        // 0x30C(0x8)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bLoadingGame;                                      // 0x314(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_326F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<struct FGameplayTag, struct FHexQuestCachedWorldStateKeys> QuestsCachedWorldStateKeys;                        // 0x318(0x50)(NativeAccessSpecifierPrivate)
	TMap<struct FGameplayTag, struct FHexQuestStateCachedWorldStateKeys> QuestStatesCachedWorldStateKeys;                   // 0x368(0x50)(NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UQuestDirector* GetDefaultObj();

	void UnregisterTags(struct FGameplayTagContainer& Tags);
	void UnregisterTag(struct FGameplayTag& Tag);
	void UnregisterPendingTag(struct FGameplayTag& Tag);
	void RegisterTags(struct FGameplayTagContainer& Tags, bool bBroadcast);
	void RegisterTag(struct FGameplayTag& Tag, bool bBroadcastChange);
	void RegisterPendingTag(struct FGameplayTag& Tag);
	void OnSpawnerSpawnedCharacterDead(class ASimpleCharacterSpawner* Spawner, class ALOTF2Character* SpawnedCharacter);
	void OnQuestStatusChanged(class UQuest* Quest);
	void OnQuestStateReached(class UQuest* Quest);
	void OnPlayerStateReplicated(class APlayerState* PlayerState);
	void OnNotifyPlayerJoined(class APlayerCharacter* Character);
	void OnHUDReady();
	bool HasGeneralTag(struct FGameplayTag& TagToCheck);
	struct FQuestDirectorTags GetQuestsTags();
	struct FGameplayTag GetLastVisitedArea();
};

// 0xA0 (0xC8 - 0x28)
// Class LOTF2.QuestFactory
class UQuestFactory : public UObject
{
public:
	TMap<enum class EQuestTaskType, TSubclassOf<class UQuestTask>> TaskTypes;                                         // 0x28(0x50)(UObjectWrapper, NativeAccessSpecifierPrivate)
	TMap<enum class EQuestActionType, TSubclassOf<class UQuestAction>> ActionTypes;                                       // 0x78(0x50)(UObjectWrapper, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UQuestFactory* GetDefaultObj();

};

// 0xF8 (0x3C8 - 0x2D0)
// Class LOTF2.QuestReader
class AQuestReader : public AAbilitySystemActor
{
public:
	TArray<class AActor*>                        ActorsToAffect;                                    // 0x2D0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class ASimpleCharacterSpawner*>       CharacterSpawnersToAffect;                         // 0x2E0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bDelayEffectsToMapReload;                          // 0x2F0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3270[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        EffectsDelay;                                      // 0x2F4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FAnathemaQuery                        Query;                                             // 0x2F8(0x50)(Edit, Protected, NativeAccessSpecifierProtected)
	class ALevelSequenceActor*                   SequenceToPlay;                                    // 0x348(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayCueTag                       GameplayCueTagToTriggerOnAffectedActors;           // 0x350(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FAkAnathemaEvent                      AudioToPlay;                                       // 0x358(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FDataTableRowHandle                   ShakeFeedback;                                     // 0x3A8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_3271[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AQuestReader* GetDefaultObj();

	void OnTagContainerAdded(struct FGameplayTagContainer& Itags);
	void MulticastOnTriggerFeedback();
	void BP_OnTrigger();
};

// 0x30 (0x3F8 - 0x3C8)
// Class LOTF2.QuestReaderChangeVisibility
class AQuestReaderChangeVisibility : public AQuestReader
{
public:
	bool                                         bHide;                                             // 0x3C8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseDissolveToChangeVisibility;                    // 0x3C9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bPlayFXOnVisibilityChange;                         // 0x3CA(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3272[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UNiagaraSystem*                        NiagaraFXToPlay;                                   // 0x3D0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bActorsHidden;                                     // 0x3D8(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3273[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ACharacter*                            SpawnedCharacterToAffect;                          // 0x3E0(0x8)(Net, ZeroConstructor, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3274[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bSentDissolveEvent;                                // 0x3E9(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3275[0xE];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AQuestReaderChangeVisibility* GetDefaultObj();

	void PlayFX();
	void OnRep_SpawnedCharacterToAffect();
	void OnRep_SentDissolveEvent();
	void OnRep_ActorsHidden();
	void OnCharacterSpawned(class ASimpleCharacterSpawner* Spawner, class ALOTF2Character* Character);
	void BP_OnVisibilityChanged();
};

// 0x10 (0x3D8 - 0x3C8)
// Class LOTF2.QuestReaderChangeVolumeSettings
class AQuestReaderChangeVolumeSettings : public AQuestReader
{
public:
	bool                                         bChangeVolumeSettings;                             // 0x3C8(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ECollisionEnabled                 CollisionType;                                     // 0x3C9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3276[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UNavArea>                  NavArea;                                           // 0x3D0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AQuestReaderChangeVolumeSettings* GetDefaultObj();

	void OnRep_ChangeVolumeSettings();
};

// 0xC0 (0xF8 - 0x38)
// Class LOTF2.QuestsSettings
class UQuestsSettings : public UHexDeveloperSettings
{
public:
	struct FQuestDirectorConfig                  QuestDirectorConfig;                               // 0x38(0xC0)(Edit, Config, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UQuestsSettings* GetDefaultObj();

	TArray<class FName> GetTaskIDs();
	TArray<class FName> GetDialogueIDs();
	TArray<class FName> GetActionIDs();
};

// 0x200 (0x228 - 0x28)
// Class LOTF2.QuestState
class UQuestState : public UObject
{
public:
	uint8                                        Pad_3277[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        PreviousQuestStateIndex;                           // 0x48(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        Index;                                             // 0x4C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UQuest*                                ParentQuest;                                       // 0x50(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UQuestTask*>                    RequiredTasks;                                     // 0x58(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class UQuestTask*>                    Tasks;                                             // 0x68(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class UQuestTask*>                    OptionalTasks;                                     // 0x78(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class UQuestAction*>                  OnCompletedActions;                                // 0x88(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class UQuestAction*>                  OnFailActions;                                     // 0x98(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	struct FQuestStateData                       Data;                                              // 0xA8(0x180)(Transient, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UQuestState* GetDefaultObj();

	void OnTaskFail(class UQuestTask* QuestTask);
	void OnTaskCompleted(class UQuestTask* QuestTask);
	void OnDialogueFinished(enum class EDialogueEndReason Reason);
	void CheckRequiredTagsOnGeneralTagAdded(struct FGameplayTagContainer& AddedTags);
};

// 0xC8 (0xF0 - 0x28)
// Class LOTF2.QuestTask
class UQuestTask : public UObject
{
public:
	FMulticastInlineDelegateProperty_            OnQuestTaskCompleted;                              // 0x28(0x10)(ZeroConstructor, Transient, InstancedReference, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnQuestTaskFail;                                   // 0x38(0x10)(ZeroConstructor, Transient, InstancedReference, NativeAccessSpecifierPublic)
	enum class EQuestTaskStatus                  RuntimeStatus;                                     // 0x48(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3278[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          CustomOnCompleteGameStateFlag;                     // 0x4C(0x8)(Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3279[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UQuestState*                           ParentQuestState;                                  // 0x58(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  QuestTaskID;                                       // 0x60(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bUseOrOperator;                                    // 0x68(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_327A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FQuestTaskData                        Data;                                              // 0x70(0x68)(Transient, NativeAccessSpecifierPrivate)
	enum class EHexQuestTaskCompletionType       TaskCompletionType;                                // 0xD8(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_327B[0x17];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UQuestTask* GetDefaultObj();

	void OnPlayerControllerPostRespawned(class APlayerCharacterController* PlayerController);
	void OnDialogueStarted();
	void OnDialogueFinished(enum class EDialogueEndReason Reason);
	void OnDialogueAnswerSelected(enum class EAnswerType AnswerType);
	void CheckCompleteStateTagChangedAndReact(struct FGameplayTagContainer& Tags);
};

// 0x10 (0x100 - 0xF0)
// Class LOTF2.QuestTaskApplyTint
class UQuestTaskApplyTint : public UQuestTask
{
public:
	class ALOTF2Character*                       Character;                                         // 0xF0(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMutableWrapperComponent*              MutableWrapperComponent;                           // 0xF8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UQuestTaskApplyTint* GetDefaultObj();

	void UnregisterFromLocalCharacter();
	void RegisterToLocalCharacter();
};

// 0x38 (0x128 - 0xF0)
// Class LOTF2.QuestTaskCollectItem
class UQuestTaskCollectItem : public UQuestTask
{
public:
	TSoftClassPtr<class UItemData>               ItemClass;                                         // 0xF0(0x30)(Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_327C[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UQuestTaskCollectItem* GetDefaultObj();

	void CheckInventory();
};

// 0x10 (0x100 - 0xF0)
// Class LOTF2.QuestTaskGameplayAbility
class UQuestTaskGameplayAbility : public UQuestTask
{
public:
	class ALOTF2Character*                       Character;                                         // 0xF0(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAbilitySystemComponent*               AbilitySystemComponent;                            // 0xF8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UQuestTaskGameplayAbility* GetDefaultObj();

	void UnregisterFromLocalCharacter();
	void RegisterToLocalCharacter();
};

// 0x8 (0x108 - 0x100)
// Class LOTF2.QuestTaskGameplayAbilityEnds
class UQuestTaskGameplayAbilityEnds : public UQuestTaskGameplayAbility
{
public:
	uint8                                        Pad_327D[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UQuestTaskGameplayAbilityEnds* GetDefaultObj();

};

// 0x0 (0x108 - 0x108)
// Class LOTF2.QuestTaskForgeAnchor
class UQuestTaskForgeAnchor : public UQuestTaskGameplayAbilityEnds
{
public:

	static class UClass* StaticClass();
	static class UQuestTaskForgeAnchor* GetDefaultObj();

};

// 0x30 (0x120 - 0xF0)
// Class LOTF2.QuestTaskShowItem
class UQuestTaskShowItem : public UQuestTask
{
public:
	TSoftClassPtr<class UItemData>               ItemClass;                                         // 0xF0(0x30)(Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UQuestTaskShowItem* GetDefaultObj();

};

// 0x0 (0x120 - 0x120)
// Class LOTF2.QuestTaskGiveItem
class UQuestTaskGiveItem : public UQuestTaskShowItem
{
public:

	static class UClass* StaticClass();
	static class UQuestTaskGiveItem* GetDefaultObj();

};

// 0x0 (0xF0 - 0xF0)
// Class LOTF2.QuestTaskGiveVigor
class UQuestTaskGiveVigor : public UQuestTask
{
public:

	static class UClass* StaticClass();
	static class UQuestTaskGiveVigor* GetDefaultObj();

};

// 0x0 (0xF0 - 0xF0)
// Class LOTF2.QuestTaskHaveDLC
class UQuestTaskHaveDLC : public UQuestTask
{
public:

	static class UClass* StaticClass();
	static class UQuestTaskHaveDLC* GetDefaultObj();

	void OnQuestStatusChanged();
	void OnLoadingScreenEnd(bool bActive);
};

// 0x10 (0x100 - 0xF0)
// Class LOTF2.QuestTaskInventoryComponent
class UQuestTaskInventoryComponent : public UQuestTask
{
public:
	class ALOTF2Character*                       Character;                                         // 0xF0(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryComponent*                   InventoryComponent;                                // 0xF8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UQuestTaskInventoryComponent* GetDefaultObj();

	void UnregisterFromLocalCharacter();
	void RegisterToLocalCharacter();
};

// 0x8 (0xF8 - 0xF0)
// Class LOTF2.QuestTaskKillEnemy
class UQuestTaskKillEnemy : public UQuestTask
{
public:
	class ASimpleCharacterSpawner*               Spawner;                                           // 0xF0(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UQuestTaskKillEnemy* GetDefaultObj();

	void OnSpawnerUnregistered(class ASimpleCharacterSpawner* Spawner);
	void OnSpawnerSpawnedCharacterDead(class ASimpleCharacterSpawner* Spawner, class ALOTF2Character* Character);
	void OnSpawnerRegistered(class ASimpleCharacterSpawner* Spawner);
};

// 0x0 (0x100 - 0x100)
// Class LOTF2.QuestTaskKillWithTag
class UQuestTaskKillWithTag : public UQuestTaskGameplayAbility
{
public:

	static class UClass* StaticClass();
	static class UQuestTaskKillWithTag* GetDefaultObj();

};

// 0x8 (0xF8 - 0xF0)
// Class LOTF2.QuestTaskRequireActivateAnchor
class UQuestTaskRequireActivateAnchor : public UQuestTask
{
public:
	class ADualRealmAnchorActor*                 Anchor;                                            // 0xF0(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UQuestTaskRequireActivateAnchor* GetDefaultObj();

	void OnAnchorRegistered(class ADualRealmAnchorActor* Anchor);
	void OnAnchorChangedState(enum class EDualRealmAnchorState State);
};

// 0x0 (0xF0 - 0xF0)
// Class LOTF2.QuestTaskRequireActivateAnyAnchor
class UQuestTaskRequireActivateAnyAnchor : public UQuestTask
{
public:

	static class UClass* StaticClass();
	static class UQuestTaskRequireActivateAnyAnchor* GetDefaultObj();

	void OnAnchorRegistered(class ADualRealmAnchorActor* Anchor);
	void OnAnchorChangedState(enum class EDualRealmAnchorState State);
};

// 0x0 (0xF0 - 0xF0)
// Class LOTF2.QuestTaskRequireAnswer
class UQuestTaskRequireAnswer : public UQuestTask
{
public:

	static class UClass* StaticClass();
	static class UQuestTaskRequireAnswer* GetDefaultObj();

};

// 0x30 (0x120 - 0xF0)
// Class LOTF2.QuestTaskRequireGear
class UQuestTaskRequireGear : public UQuestTask
{
public:
	TSoftClassPtr<class UItemData>               ItemClass;                                         // 0xF0(0x30)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UQuestTaskRequireGear* GetDefaultObj();

	void OnEquippedInventoryItemsChanged(class UInventoryItem* InventoryItem);
	void OnEquipmentChanged();
};

// 0x38 (0x128 - 0xF0)
// Class LOTF2.QuestTaskRequireItem
class UQuestTaskRequireItem : public UQuestTask
{
public:
	TSoftClassPtr<class UItemData>               ItemClass;                                         // 0xF0(0x30)(Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_327E[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UQuestTaskRequireItem* GetDefaultObj();

	void CheckInventory();
};

// 0x0 (0xF0 - 0xF0)
// Class LOTF2.QuestTaskRequirePlayerToDie
class UQuestTaskRequirePlayerToDie : public UQuestTask
{
public:

	static class UClass* StaticClass();
	static class UQuestTaskRequirePlayerToDie* GetDefaultObj();

};

// 0x0 (0xF0 - 0xF0)
// Class LOTF2.QuestTaskRequirePlayGesture
class UQuestTaskRequirePlayGesture : public UQuestTask
{
public:

	static class UClass* StaticClass();
	static class UQuestTaskRequirePlayGesture* GetDefaultObj();

	void OnGesturePlayed();
};

// 0x38 (0x138 - 0x100)
// Class LOTF2.QuestTaskRequireStatLevel
class UQuestTaskRequireStatLevel : public UQuestTaskGameplayAbility
{
public:
	uint8                                        Pad_327F[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UQuestTaskRequireStatLevel* GetDefaultObj();

};

// 0x8 (0xF8 - 0xF0)
// Class LOTF2.QuestTaskRequireTag
class UQuestTaskRequireTag : public UQuestTask
{
public:
	uint8                                        Pad_3280[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UQuestTaskRequireTag* GetDefaultObj();

	void OnTagContainerAdded(struct FGameplayTagContainer& Tags);
	void OnTagAdded(const struct FGameplayTag& Tag, int32 NewCount);
};

// 0x8 (0x100 - 0xF8)
// Class LOTF2.QuestTaskRequireTagPlayer
class UQuestTaskRequireTagPlayer : public UQuestTaskRequireTag
{
public:
	uint8                                        Pad_3281[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UQuestTaskRequireTagPlayer* GetDefaultObj();

};

// 0x0 (0xF8 - 0xF8)
// Class LOTF2.QuestTaskRequireTagQuest
class UQuestTaskRequireTagQuest : public UQuestTaskRequireTag
{
public:

	static class UClass* StaticClass();
	static class UQuestTaskRequireTagQuest* GetDefaultObj();

};

// 0x0 (0xF8 - 0xF8)
// Class LOTF2.QuestTaskRequireTagQuestState
class UQuestTaskRequireTagQuestState : public UQuestTaskRequireTag
{
public:

	static class UClass* StaticClass();
	static class UQuestTaskRequireTagQuestState* GetDefaultObj();

};

// 0x0 (0xF0 - 0xF0)
// Class LOTF2.QuestTaskRevenge
class UQuestTaskRevenge : public UQuestTask
{
public:

	static class UClass* StaticClass();
	static class UQuestTaskRevenge* GetDefaultObj();

};

// 0x0 (0x100 - 0x100)
// Class LOTF2.QuestTaskSocketAnyRune
class UQuestTaskSocketAnyRune : public UQuestTaskInventoryComponent
{
public:

	static class UClass* StaticClass();
	static class UQuestTaskSocketAnyRune* GetDefaultObj();

};

// 0x0 (0x100 - 0x100)
// Class LOTF2.QuestTaskSocketMaxRune
class UQuestTaskSocketMaxRune : public UQuestTaskSocketAnyRune
{
public:

	static class UClass* StaticClass();
	static class UQuestTaskSocketMaxRune* GetDefaultObj();

};

// 0x0 (0x100 - 0x100)
// Class LOTF2.QuestTaskSocketLanternRuneToMax
class UQuestTaskSocketLanternRuneToMax : public UQuestTaskSocketMaxRune
{
public:

	static class UClass* StaticClass();
	static class UQuestTaskSocketLanternRuneToMax* GetDefaultObj();

};

// 0x0 (0x100 - 0x100)
// Class LOTF2.QuestTaskSocketWeaponRuneToMax
class UQuestTaskSocketWeaponRuneToMax : public UQuestTaskSocketMaxRune
{
public:

	static class UClass* StaticClass();
	static class UQuestTaskSocketWeaponRuneToMax* GetDefaultObj();

};

// 0x0 (0xF0 - 0xF0)
// Class LOTF2.QuestTaskTalk
class UQuestTaskTalk : public UQuestTask
{
public:

	static class UClass* StaticClass();
	static class UQuestTaskTalk* GetDefaultObj();

};

// 0x0 (0x100 - 0x100)
// Class LOTF2.QuestTaskUpgradeLanternToMax
class UQuestTaskUpgradeLanternToMax : public UQuestTaskInventoryComponent
{
public:

	static class UClass* StaticClass();
	static class UQuestTaskUpgradeLanternToMax* GetDefaultObj();

};

// 0x0 (0x100 - 0x100)
// Class LOTF2.QuestTaskUpgradePotionToMax
class UQuestTaskUpgradePotionToMax : public UQuestTaskInventoryComponent
{
public:

	static class UClass* StaticClass();
	static class UQuestTaskUpgradePotionToMax* GetDefaultObj();

};

// 0x0 (0x100 - 0x100)
// Class LOTF2.QuestTaskUpgradeWeaponToMax
class UQuestTaskUpgradeWeaponToMax : public UQuestTaskInventoryComponent
{
public:

	static class UClass* StaticClass();
	static class UQuestTaskUpgradeWeaponToMax* GetDefaultObj();

};

// 0xA0 (0x358 - 0x2B8)
// Class LOTF2.QuickBarWidget
class UQuickBarWidget : public ULOTF2UserWidget
{
public:
	class UWidgetSwitcher*                       Switcher_Current;                                  // 0x2B8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                       Switcher_Next;                                     // 0x2C0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                       Switcher_Previous;                                 // 0x2C8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonBorder*                         Container_Name;                                    // 0x2D0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            Text_EquippedItemName;                             // 0x2D8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UItemSlotWidget>           ItemWidgetClass;                                   // 0x2E0(0x8)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInputAction*                          SelectNextItemInputAction;                         // 0x2E8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInputAction*                          SelectPrevItemInputAction;                         // 0x2F0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInputAction*                          SelectFirstItemInputAction;                        // 0x2F8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URichTextBlock*                        RichText_InputUseItem;                             // 0x300(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URichTextBlock*                        RichText_InputSwitchItem;                          // 0x308(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3283[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FQuickBarItem>                 ItemsCreated;                                      // 0x328(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3284[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UInputAction*                          InputActionUseItem;                                // 0x350(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UQuickBarWidget* GetDefaultObj();

	void UpdateCachedPlayerInfo(class APawn* OldPawn, class APawn* NewPawn);
	void RestoreHudAfterDialogueSequence();
	void OnKeyBindingChanged(class FName& Name);
	void OnItemEquipped(class UInventoryItem* InItem, int32 InSlot);
	void OnInventoryUpdate();
	void OnEquippedItemChange(class UInventoryItem* EquippedItem);
	void HideHudForDialogueSequence();
	void EnableItemsInteraction(bool bEnabled);
	void EnableInteraction();
	void DisableInteraction();
	void BP_PingItemName(bool bPlaySound);
};

// 0x8 (0x4F8 - 0x4F0)
// Class LOTF2.QuitGamePanel
class UQuitGamePanel : public UInGameMenuPanel
{
public:
	class UCommonDateTimeTextBlock*              Text_LastSavedTime;                                // 0x4F0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UQuitGamePanel* GetDefaultObj();

	void OnQuitGamePressed();
};

// 0x70 (0x120 - 0xB0)
// Class LOTF2.RagdollComponent
class URagdollComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnRagdollStateChanged;                             // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	TArray<class FName>                          WeaponBonesToDetach;                               // 0xC0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	bool                                         bUsePhysicsBlendWeight;                            // 0xD0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3285[0x4F];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class URagdollComponent* GetDefaultObj();

	void StartRagdoll();
	void SetupRagdollDuringCinematic();
	void SaveOriginalCollisionResponses();
	void RestoreOriginalCollisionResponses();
	void ResetRagdoll();
	bool IsRagdollActive();
};

// 0x38 (0xE8 - 0xB0)
// Class LOTF2.RangedCostManagerComponent
class URangedCostManagerComponent : public UActorComponent
{
public:
	uint8                                        Pad_3286[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FAmmoCostModifier>             AmmoCostModifierArray;                             // 0xC8(0x10)(BlueprintVisible, Net, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_3287[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class URangedCostManagerComponent* GetDefaultObj();

	void OnBattleEffectRemovedCallback(class FName& BattleEffectName);
	void OnBattleEffectAddedCallback(class FName& BattleEffectName);
};

// 0xF8 (0x780 - 0x688)
// Class LOTF2.WeaponsData
class UWeaponsData : public UEquipementData
{
public:
	struct FDataTableRowHandle                   StatsRow;                                          // 0x688(0x10)(Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class UDataTable*                            WeaponHitboxesDefinition;                          // 0x698(0x8)(Edit, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            WeaponAttackDefinitions;                           // 0x6A0(0x8)(Edit, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          AttackDefinitionCategory;                          // 0x6A8(0x8)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          AttackDefinitionOverrideCategory;                  // 0x6B0(0x8)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<enum class EStanceType, struct FWeaponMovesetData> StanceMovesetData;                                 // 0x6B8(0x50)(Edit, Protected, NativeAccessSpecifierProtected)
	TMap<enum class EStanceType, struct FWeaponMovesetData> ExtraMovesetData;                                  // 0x708(0x50)(Edit, Protected, NativeAccessSpecifierProtected)
	class UAkSwitchValue*                        WeaponEquipAkSwitch;                               // 0x758(0x8)(Edit, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            OverrideWeaponComboSequenceTable;                  // 0x760(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFXData*                               FXDataRef;                                         // 0x768(0x8)(Edit, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TSubclassOf<class UAnimInstance>>     PrimaryWeaponAnimLayers;                           // 0x770(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UWeaponsData* GetDefaultObj();

	bool CanBeBuffed();
};

// 0x208 (0x988 - 0x780)
// Class LOTF2.RangedWeaponData
class URangedWeaponData : public UWeaponsData
{
public:
	bool                                         bOverrideShotSpawnDefinition;                      // 0x780(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3288[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSpawnDefinition                      ShootSpawnDefinition;                              // 0x788(0x120)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bCanBeLoaded;                                      // 0x8A8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3289[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 VisualHoldingWeaponTags;                           // 0x8B0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                 LogicHoldingWeaponTags;                            // 0x8D0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                 FullUnholsteredWeaponTags;                         // 0x8F0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPrivate)
	TSubclassOf<class UActionsContext>           InputContext;                                      // 0x910(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<TSubclassOf<class UAnimInstance>>     RangedWeaponAnimLayers;                            // 0x918(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	TSoftClassPtr<class AActor>                  QuiverItemVisual;                                  // 0x928(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                               QuiverJointOffset;                                 // 0x958(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FRotator                              QuiverJointRotationOffset;                         // 0x970(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class URangedWeaponData* GetDefaultObj();

	struct FGameplayTagContainer GetVisualHoldingWeaponTags();
	float GetSpellPower(int32 ItemLevel);
	TArray<TSubclassOf<class UAnimInstance>> GetRangedWeaponAnimLayers();
	struct FRotator GetQuiverJointRotationOffset();
	struct FVector GetQuiverJointOffset();
	TSoftClassPtr<class AActor> GetQuiverItemVisual();
	int32 GetNumberOfAmmoAvailable();
	struct FGameplayTagContainer GetLogicHoldingWeaponTags();
	TSubclassOf<class UActionsContext> GetInputContext();
	struct FGameplayTagContainer GetFullUnholsteredWeaponTags();
	bool GetCanBeLoaded();
};

// 0x70 (0x310 - 0x2A0)
// Class LOTF2.Ranged_LevelUpCharacterPanel
class URanged_LevelUpCharacterPanel : public UCommonUserWidget
{
public:
	class UWidgetSwitcher*                       Weapon_Switcher;                                   // 0x2A0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                          Panel_Ranged;                                      // 0x2A8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                          Panel_Throwables;                                  // 0x2B0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                          Panel_Catalyst;                                    // 0x2B8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCharUpgradeRangedPanel*               Panel_Throwable_1;                                 // 0x2C0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCharUpgradeRangedPanel*               Panel_Throwable_2;                                 // 0x2C8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCharUpgradeRangedPanel*               Panel_Throwable_3;                                 // 0x2D0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryItemName*                    Name_Ranged;                                       // 0x2D8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWeaponScalingStatRow*                 Ranged_DamagePhysical;                             // 0x2E0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWeaponScalingStatRow*                 Ranged_DamageFire;                                 // 0x2E8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWeaponScalingStatRow*                 Ranged_DamageDark;                                 // 0x2F0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWeaponScalingStatRow*                 Ranged_DamageHoly;                                 // 0x2F8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryItemName*                    Name_Catalyst;                                     // 0x300(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWeaponScalingStatRow*                 Stat_SpellPower;                                   // 0x308(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class URanged_LevelUpCharacterPanel* GetDefaultObj();

	void UpdateStats(bool bInitialize, class UEquipableInventoryWeapon* InventoryWeapon, class UAbilitySystemComponent* OwnerAbilitySystemComponent);
};

// 0x48 (0x2E8 - 0x2A0)
// Class LOTF2.RemembranceBossPortraitEntry
class URemembranceBossPortraitEntry : public UCommonUserWidget
{
public:
	uint8                                        Pad_328B[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UImage*                                Image_BossPortrait;                                // 0x2C0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Image_Selector_Normal;                             // 0x2C8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Image_Selector_Selected;                           // 0x2D0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Image_Selector_Disabled;                           // 0x2D8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UObject*                               BossEntry;                                         // 0x2E0(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class URemembranceBossPortraitEntry* GetDefaultObj();

};

// 0xE0 (0x108 - 0x28)
// Class LOTF2.UIBossRemembranceEntry
class UUIBossRemembranceEntry : public UObject
{
public:
	struct FBossRemembranceDefinition            RemembranceDefinition;                             // 0x28(0xD8)(BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                         bIsPlaceholder;                                    // 0x100(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_328C[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UUIBossRemembranceEntry* GetDefaultObj();

};

// 0x80 (0x570 - 0x4F0)
// Class LOTF2.RemembranceBossSelectorPanel
class URemembranceBossSelectorPanel : public UInGameMenuPanel
{
public:
	struct FGameplayTag                          Tag_KeyboardInteract;                              // 0x4F0(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UHexActivatableWidget>   ItemVendorScreenClass;                             // 0x4F8(0x30)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                          Container_BossInfo;                                // 0x528(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHexTileView*                          List_Remembrances;                                 // 0x530(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                      Text_BossName;                                     // 0x538(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                      Text_ItemName;                                     // 0x540(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonRichTextBlock*                  Text_BossDescription;                              // 0x548(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Image_BossBigPortrait;                             // 0x550(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            BossRemembrances;                                  // 0x558(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UObject*                               LastInteractedItem;                                // 0x560(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_328E[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class URemembranceBossSelectorPanel* GetDefaultObj();

	void OnItemFocused(class UObject* ListEntry, bool bIsHovered);
	void BP_ShowPlayerNeedsRemembrance(bool bShowMessage);
	void BP_SetActive(bool bActive);
	void BP_SelectItem(class UObject* ItemToSelect);
};

// 0x108 (0x5F8 - 0x4F0)
// Class LOTF2.RemembranceItemVendor
class URemembranceItemVendor : public UInGameMenuPanel
{
public:
	struct FGameplayTag                          Tag_KeyboardInteract;                              // 0x4F0(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<struct FGameplayTag, TSubclassOf<class UInventoryItemPanel>> ItemCategories;                                    // 0x4F8(0x50)(Edit, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TSubclassOf<class UInGameMessageNotification> InGameMessageClass;                                // 0x548(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                  Text_Error_Purchase_NotEnoughMemberBerry;          // 0x550(0x18)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                      Text_UmbralMemory;                                 // 0x568(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUpgradeMatWidget*                     Item_UmbralMemory;                                 // 0x570(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URemembranceBossPortraitEntry*         Boss_Portrait;                                     // 0x578(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                      Text_BossName;                                     // 0x580(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHexTileView*                          List_GridItems;                                    // 0x588(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonAnimatedSwitcher*               Item_Type_Switcher;                                // 0x590(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUIBossRemembranceEntry*               CurrentBossEntry;                                  // 0x598(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<struct FGameplayTag, class UInventoryItemPanel*> ItemTypePanels;                                    // 0x5A0(0x50)(ExportObject, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_328F[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class URemembranceItemVendor* GetDefaultObj();

	void RequestBuyItem(class UInventoryItem* ItemToBuy);
	void BP_BuyItem(class UInventoryItem* ItemToBuy);
};

// 0x70 (0xA0 - 0x30)
// Class LOTF2.ResistanceAttributeSet
class UResistanceAttributeSet : public UAttributeSet
{
public:
	struct FGameplayAttributeData                AbsortionBleed;                                    // 0x30(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                AbsortionPoison;                                   // 0x40(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                AbsortionWither;                                   // 0x50(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                AbsortionFrostbite;                                // 0x60(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                AbsortionSmite;                                    // 0x70(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                AbsortionBurn;                                     // 0x80(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                AbsortionIgnite;                                   // 0x90(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UResistanceAttributeSet* GetDefaultObj();

};

// 0x2B0 (0x7A0 - 0x4F0)
// Class LOTF2.UpgradeCharacterScreenWidget
class UUpgradeCharacterScreenWidget : public UInGameMenuPanel
{
public:
	TSubclassOf<class APlayerCharacterViewer>    PreviewCharacterClass;                             // 0x4F0(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProgressBar*                          Level_Progress;                                    // 0x4F8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryItemName*                    MH_Name;                                           // 0x500(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryItemName*                    OH_Name;                                           // 0x508(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                          Container_OffHand;                                 // 0x510(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                          Container_OffHand_AttackPower;                     // 0x518(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URanged_LevelUpCharacterPanel*         Panel_Ranged;                                      // 0x520(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UIncreaseAttributeWidget*              Stat_Strength;                                     // 0x528(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UIncreaseAttributeWidget*              Stat_Agility;                                      // 0x530(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UIncreaseAttributeWidget*              Stat_Vitality;                                     // 0x538(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UIncreaseAttributeWidget*              Stat_Endurance;                                    // 0x540(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UIncreaseAttributeWidget*              Stat_Faith;                                        // 0x548(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UIncreaseAttributeWidget*              Stat_chaos;                                        // 0x550(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULevelUpStatRow*                       StatRow_Health;                                    // 0x558(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULevelUpStatRow*                       StatRow_Mana;                                      // 0x560(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULevelUpStatRow*                       StatRow_Stamina;                                   // 0x568(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULevelUpStatRow*                       StatRow_Weight;                                    // 0x570(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStatsContainerComponent*              StatsContainerComponent;                           // 0x578(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHealthComponent*                      HealthComponent;                                   // 0x580(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEnergyComponent*                      EnergyComponent;                                   // 0x588(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVigorComponent*                       VigorComponent;                                    // 0x590(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        PlayerLevel;                                       // 0x598(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3292[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<struct FGameplayAttribute, int32>       AttributeToValueMap;                               // 0x5A0(0x50)(BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class UWeaponScalingStatRow*                 MH_DamagePhysical;                                 // 0x5F0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWeaponScalingStatRow*                 MH_DamageFire;                                     // 0x5F8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWeaponScalingStatRow*                 MH_DamageDark;                                     // 0x600(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWeaponScalingStatRow*                 MH_DamageHoly;                                     // 0x608(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULevelUpStatRow*                       MH_GuardProtectionPhysical;                        // 0x610(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULevelUpStatRow*                       MH_GuardProtectionFire;                            // 0x618(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULevelUpStatRow*                       MH_GuardProtectionHoly;                            // 0x620(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULevelUpStatRow*                       MH_GuardProtectionDark;                            // 0x628(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWeaponScalingStatRow*                 OH_DamagePhysical;                                 // 0x630(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWeaponScalingStatRow*                 OH_DamageFire;                                     // 0x638(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWeaponScalingStatRow*                 OH_DamageDark;                                     // 0x640(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWeaponScalingStatRow*                 OH_DamageHoly;                                     // 0x648(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULevelUpStatRow*                       OH_GuardProtectionPhysical;                        // 0x650(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULevelUpStatRow*                       OH_GuardProtectionFire;                            // 0x658(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULevelUpStatRow*                       OH_GuardProtectionHoly;                            // 0x660(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULevelUpStatRow*                       OH_GuardProtectionDark;                            // 0x668(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULevelUpStatRow*                       StatRow_DefensePhysical;                           // 0x670(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULevelUpStatRow*                       StatRow_DefenseFire;                               // 0x678(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULevelUpStatRow*                       StatRow_DefenseHoly;                               // 0x680(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULevelUpStatRow*                       StatRow_DefenseDark;                               // 0x688(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULevelUpStatRow*                       StatRow_ResistanceBleed;                           // 0x690(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULevelUpStatRow*                       StatRow_ResistancePoison;                          // 0x698(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULevelUpStatRow*                       StatRow_ResistanceFrostbite;                       // 0x6A0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULevelUpStatRow*                       StatRow_ResistanceSmite;                           // 0x6A8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULevelUpStatRow*                       StatRow_ResistanceBurn;                            // 0x6B0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULevelUpStatRow*                       StatRow_ResistanceIgnite;                          // 0x6B8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class APlayerCharacterViewer*                PlayerCharacterViewer;                             // 0x6C0(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        RespecStatPoints;                                  // 0x6C8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxRespecStatPoints;                               // 0x6CC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsRespecializing;                                 // 0x6D0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3293[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ALOTF2Character*                       PlayerCharacter;                                   // 0x6D8(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3294[0xC0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UUpgradeCharacterScreenWidget* GetDefaultObj();

	void UpdateVigor(int32 CurrentVigor, int32 VigorForNextLevel);
	void UpdateStats();
	void UpdatePlayerStats(int32 PlayerLevel);
	void OnStatIncrease(const struct FGameplayAttribute& GameplayAttribute, int32 NewValue);
	void OnStatDecrease(const struct FGameplayAttribute& GameplayAttribute, int32 NewValue);
	void OnPreviewCharacterReady();
	void OnApplyChangesRequested();
	bool CanIncreaseStats();
};

// 0x20 (0x7C0 - 0x7A0)
// Class LOTF2.RespecCharacterScreenWidget
class URespecCharacterScreenWidget : public UUpgradeCharacterScreenWidget
{
public:
	class UCommonTextBlock*                      Text_RespecPoints;                                 // 0x7A0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonRichTextBlock*                  Text_RespecItemsAmount;                            // 0x7A8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        RespecItemAmount;                                  // 0x7B0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3295[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class URespecCharacterScreenWidget* GetDefaultObj();

};

// 0x340 (0x698 - 0x358)
// Class LOTF2.ResurrectionShrineActor
class AResurrectionShrineActor : public AAnathemaSyncedInteractable
{
public:
	class UDualRealmBehaviourComponent*          DualRealmBehaviourComponent;                       // 0x358(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                       WorldCollisionRoot;                                // 0x360(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USceneComponent*                       RootVisualsComponent;                              // 0x368(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USceneComponent*                       InteractionCollisionRoot;                          // 0x370(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USceneComponent*                       EnemyPreventUsageAreasRoot;                        // 0x378(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UEnemyDetectionComponent*              EnemyDetectionComponent;                           // 0x380(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FText                                  InactiveInteractionText;                           // 0x388(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  ActiveInteractionText;                             // 0x3A0(0x18)(Edit, NativeAccessSpecifierPrivate)
	class FText                                  OccupiedBecauseOfEnemiesNearText;                  // 0x3B8(0x18)(Edit, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3296[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPlayerVisualData                     PlayerVisuals;                                     // 0x3D8(0x268)(NativeAccessSpecifierPrivate)
	TSoftClassPtr<class ABaseFakeCharacter>      PlayerCharacterClass;                              // 0x640(0x30)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ABaseFakeCharacter*                    PlayerCharacterInstance;                           // 0x670(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USceneComponent*                       PlayerPosition;                                    // 0x678(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3297[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AResurrectionShrineActor* GetDefaultObj();

	void UpdateOccupiedByEnemiesNear(enum class ERealmDetectionState RealmDetectionState);
	void OnPlayerRespawn(bool bHostWillRespawn);
	void OnPlayerClassLoaded();
	void OnDispose();
	void OnCheckHostSanguinarixAmount();
	void Dispose();
};

// 0x40 (0xDF0 - 0xDB0)
// Class LOTF2.RevengeCharacter
class ARevengeCharacter : public ABaseFakeCharacter
{
public:
	uint8                                        Pad_3298[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTargetComponent*                      TargetComponent;                                   // 0xDB8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHexRevengeCharacterSoulFlayComponent* RevengeSoulFlayComponent;                          // 0xDC0(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USphereComponent*                      SphereCollision;                                   // 0xDC8(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                RevengeBuffer;                                     // 0xDD0(0x10)(Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          GameplayEventToTrigger;                            // 0xDE0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3299[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ARevengeCharacter* GetDefaultObj();

	void OnSoulPullStarted(class AActor* Actor, const struct FVector& PullDirectionWS);
};

// 0x80 (0xB8 - 0x38)
// Class LOTF2.RevengeDirectorSettings
class URevengeDirectorSettings : public UHexDeveloperSettings
{
public:
	TSoftClassPtr<class ARevengeActivationPoint> RevengeActivationPointClass;                       // 0x38(0x30)(Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        QualifyingThreshold;                               // 0x68(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxVigorValue;                                     // 0x6C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxEnemyKills;                                     // 0x70(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_329A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSoftObjectPath                       TombstoneLocationEQSPath;                          // 0x78(0x20)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGameplayTag>                  InvalidEnemyTags;                                  // 0x98(0x10)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	int32                                        ResetRevengeCooldownMultiplierCooldown;            // 0xA8(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RevengeItemCooldownMultiplier;                     // 0xAC(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>           RevengeInhibitGameplayEffect;                      // 0xB0(0x8)(Edit, ZeroConstructor, Config, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class URevengeDirectorSettings* GetDefaultObj();

};

// 0x1B0 (0x1F0 - 0x40)
// Class LOTF2.RevengeDirector
class URevengeDirector : public UTickableWorldSubsystem
{
public:
	uint8                                        Pad_329D[0xE0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ARevengeActivationPoint*               SpawnedRevengeActivationPoint;                     // 0x120(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_329E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TimeTillNextAvailableRevenge;                      // 0x12C(0x4)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_329F[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ALOTF2Character*                       RevengeEnemyCharacter;                             // 0x160(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_32A0[0x88];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class URevengeDirector* GetDefaultObj();

	void ResetRevengeCooldownMultiplier();
	void OnWorldBeginPlay();
	void OnRevengeEnemyDeath(class AActor* InstigatorActor, struct FGameplayTagContainer& InstigatorTags, bool bDeathWasObserved);
	void OnRevengeCharacterSpawned(class ASimpleCharacterSpawner* Spawner, class ALOTF2Character* Character);
	void OnRevengeActivationPointEnd(class AActor* Actor, enum class EEndPlayReason EndPlayReason);
	void OnLevelRemoved(class ULevel* Level, class UWorld* World);
	void OnLevelAdded(class ULevel* Level, class UWorld* World);
	void HandleLogoutFromOnlineServices();
};

// 0x10 (0x2E8 - 0x2D8)
// Class LOTF2.RevengeForbiddenAreaVolume
class ARevengeForbiddenAreaVolume : public AVolume
{
public:
	class UGameplayEffectsApplierComponent*      GameplayEffectsComponent;                          // 0x2D8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAbilitySystemComponent*               AbilitySystemComponent;                            // 0x2E0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ARevengeForbiddenAreaVolume* GetDefaultObj();

};

// 0x0 (0x2D8 - 0x2D8)
// Class LOTF2.RevengeInvalidAreaVolume
class ARevengeInvalidAreaVolume : public AVolume
{
public:

	static class UClass* StaticClass();
	static class ARevengeInvalidAreaVolume* GetDefaultObj();

};

// 0x90 (0x330 - 0x2A0)
// Class LOTF2.RevengePath
class ARevengePath : public AActor
{
public:
	uint8                                        Pad_32A1[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ALOTF2Character*                       RevengerCharacter;                                 // 0x2B0(0x8)(Net, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                TargetActor;                                       // 0x2B8(0x8)(Net, ZeroConstructor, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FVector>                       BackupPath;                                        // 0x2C0(0x10)(Net, ZeroConstructor, NativeAccessSpecifierPrivate)
	class USplineComponent*                      PathToEnemy;                                       // 0x2D0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_32A2[0x3C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MinSegmentLength;                                  // 0x314(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        SegmentSplitDistance;                              // 0x318(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        ForcedUpdateTime;                                  // 0x31C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        PlayerDistMovedForUpdate;                          // 0x320(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        TargetDistMovedForUpdate;                          // 0x324(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_32A3[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ARevengePath* GetDefaultObj();

	void OnTargetSpawnerCharacterSpawned(class ASimpleCharacterSpawner* Spawner, class ALOTF2Character* Character);
	void OnRep_Target();
	class USplineComponent* GetPathToEnemy();
};

// 0x28 (0xD8 - 0xB0)
// Class LOTF2.RevengeTargetComponent
class URevengeTargetComponent : public UActorComponent
{
public:
	uint8                                        Pad_32A4[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  RevengedPlayerName;                                // 0xC0(0x18)(Net, RepNotify, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class URevengeTargetComponent* GetDefaultObj();

	void OnRep_RevengedPlayerName();
};

// 0x48 (0x128 - 0xE0)
// Class LOTF2.RubberBandingConfigComponent
class URubberBandingConfigComponent : public UHexApplySpawnConfigComponent
{
public:
	bool                                         bShouldOverrideRubberBandingConfig;                // 0xE0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_32A5[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRubberBandingAIConfig                RubberBandingConfig;                               // 0xE4(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_32A6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class AHexLeashingVolumeContainer> LeashingVolumeContainer;                           // 0xF8(0x30)(Edit, EditConst, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class URubberBandingConfigComponent* GetDefaultObj();

};

// 0x60 (0x4D8 - 0x478)
// Class LOTF2.HexRuneData
class UHexRuneData : public UItemData
{
public:
	struct FDataTableRowHandle                   RuneDefinionRow;                                   // 0x478(0x10)(Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class FText                                  WeaponDescription;                                 // 0x488(0x18)(Edit, Protected, NativeAccessSpecifierProtected)
	class FText                                  ArmorDescription;                                  // 0x4A0(0x18)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                 RuneTags;                                          // 0x4B8(0x20)(Edit, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UHexRuneData* GetDefaultObj();

};

// 0x0 (0x2A0 - 0x2A0)
// Class LOTF2.RuneEffectSummaryWidget
class URuneEffectSummaryWidget : public UCommonUserWidget
{
public:

	static class UClass* StaticClass();
	static class URuneEffectSummaryWidget* GetDefaultObj();

	void Reset();
	void AddRuneEffectDescriptionForShard(class FText& Description, enum class EHexRuneShardType ShardType);
	void AddRuneEffectDescription(class FText& Description);
};

// 0x20 (0x2C0 - 0x2A0)
// Class LOTF2.RuneEquipItemWidget
class URuneEquipItemWidget : public UCommonUserWidget
{
public:
	class URuneSocketWidget*                     Item_OldRune;                                      // 0x2A0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URuneSocketWidget*                     Item_NewRune;                                      // 0x2A8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UShardSocketWidget*                    Item_OldShard;                                     // 0x2B0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UShardSocketWidget*                    Item_NewShard;                                     // 0x2B8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class URuneEquipItemWidget* GetDefaultObj();

};

// 0x30 (0x430 - 0x400)
// Class LOTF2.RuneGridPanel
class URuneGridPanel : public UItemGridPanel
{
public:
	TSoftClassPtr<class UHexActivatableWidget>   RuneSocketScreenClass;                             // 0x400(0x30)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class URuneGridPanel* GetDefaultObj();

};

// 0x30 (0x2D0 - 0x2A0)
// Class LOTF2.RuneInfoPanel
class URuneInfoPanel : public UCommonUserWidget
{
public:
	class URuneEffectSummaryWidget*              Container_RuneEffectSummary;                       // 0x2A0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URuneEffectSummaryWidget*              Container_SecondaryRuneEffect;                     // 0x2A8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          ShieldIdentifier;                                  // 0x2B0(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                      Text_RuneName;                                     // 0x2B8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInventoryItemImage*                   Item_Image;                                        // 0x2C0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonRichTextBlock*                  Text_Long_Description;                             // 0x2C8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class URuneInfoPanel* GetDefaultObj();

};

// 0x18 (0x510 - 0x4F8)
// Class LOTF2.RuneInteractionPopup
class URuneInteractionPopup : public UGridInteractionPopupBase
{
public:
	class UFocusableButtonWidget*                Button_Apply;                                      // 0x4F8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEquipableInventoryItem*               AffectedItem;                                      // 0x500(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_32A8[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class URuneInteractionPopup* GetDefaultObj();

	void OnApplyRune();
};

// 0x18 (0x90 - 0x78)
// Class LOTF2.HexRuneInventoryItem
class UHexRuneInventoryItem : public UInventoryItem
{
public:
	TArray<struct FHexRuneActiveGameplayEffectsData> AppliedEffects;                                    // 0x78(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	bool                                         bSlottedIntoEquipment;                             // 0x88(0x1)(Net, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIdentified;                                       // 0x89(0x1)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_32AA[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHexRuneInventoryItem* GetDefaultObj();

	void SetRuneSize(enum class EHexRuneSize NewRuneSize);
	bool IsSlottedIntoEquipment();
	class FString GetWeaponEffectDescription();
	enum class EHexRuneShape GetSocketShape();
	enum class EHexRuneSize GetRuneSize();
	int32 GetRuneLevel();
	class FString GetArmorEffectDescription();
	class UHexRuneInventoryItem* CreateRuneFromDataClass(class ALOTF2Character* CharacterOwner, TSubclassOf<class UHexRuneData> RuneDataClass, enum class EHexRuneSize RuneRarity);
	class UHexRuneData* BP_GetRuneData();
};

// 0x30 (0x520 - 0x4F0)
// Class LOTF2.RuneScreenWidget
class URuneScreenWidget : public UInGameMenuPanel
{
public:
	class URuneGridPanel*                        Panel_Grid;                                        // 0x4F0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FInventoryCategoryElement>     InventoryCategories;                               // 0x4F8(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, NativeAccessSpecifierPrivate)
	class UInventoryCharacterStatusPanel*        Character_Status;                                  // 0x508(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInventoryRunePanel*                   Panel_ItemRune;                                    // 0x510(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_32AB[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class URuneScreenWidget* GetDefaultObj();

	void OnPrevCategorySelected();
	void OnNextCategorySelected();
	void OnItemFocused(class UObject* InventoryItem);
	class UWidget* GetFocusTarget();
	void BP_SelectItem();
};

// 0x50 (0x80 - 0x30)
// Class LOTF2.RuneShapeData
class URuneShapeData : public UDataAsset
{
public:
	TMap<enum class EHexRuneShape, TSoftObjectPtr<class UTexture2D>> RuneSockets;                                       // 0x30(0x50)(Edit, BlueprintVisible, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class URuneShapeData* GetDefaultObj();

	TSoftObjectPtr<class UTexture2D> GetImageFor(enum class EHexRuneShape RuneShape);
};

// 0x20 (0x2C0 - 0x2A0)
// Class LOTF2.RuneSlotIcon
class URuneSlotIcon : public UCommonUserWidget
{
public:
	class URuneShapeData*                        RuneShapeUIData;                                   // 0x2A0(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonLazyImage*                      Umbral_Patch;                                      // 0x2A8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonLazyImage*                      Image_Rune;                                        // 0x2B0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonLazyImage*                      Image_Socket;                                      // 0x2B8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class URuneSlotIcon* GetDefaultObj();

};

// 0x30 (0x430 - 0x400)
// Class LOTF2.RuneSocketGrid
class URuneSocketGrid : public UItemGridPanel
{
public:
	uint8                                        Pad_32AD[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UEquipableInventoryItem*               AffectedItem;                                      // 0x410(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UHexRuneInventoryItem*>         RunesEquipped;                                     // 0x418(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_32AE[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class URuneSocketGrid* GetDefaultObj();

};

// 0x18 (0x40 - 0x28)
// Class LOTF2.WeaponRunesListData
class UWeaponRunesListData : public UObject
{
public:
	int32                                        RuneIndex;                                         // 0x28(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EHexRuneShape                     SocketShape;                                       // 0x2C(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_32AF[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UHexRuneInventoryItem*                 RuneInventoryItem;                                 // 0x30(0x8)(BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UEquipableInventoryItem*               AffectedInventoryItem;                             // 0x38(0x8)(BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UWeaponRunesListData* GetDefaultObj();

};

// 0xA8 (0x470 - 0x3C8)
// Class LOTF2.RuneSocketWidget
class URuneSocketWidget : public UInventoryGridItem
{
public:
	bool                                         bIsWeaponRune;                                     // 0x3C8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_32B0[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          ShieldIdentifier;                                  // 0x3CC(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_32B1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  EmptyText;                                         // 0x3D8(0x18)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class URuneShapeData*                        RuneShapeUIData;                                   // 0x3F0(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<enum class EHexRuneShardType, class FText> ShardTypes;                                        // 0x3F8(0x50)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class UCommonLazyImage*                      Image_Empty;                                       // 0x448(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                      Text_RuneName;                                     // 0x450(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                      Text_RuneEffects;                                  // 0x458(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                      Text_SocketType;                                   // 0x460(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHexRuneInventoryItem*                 RuneInventoryItem;                                 // 0x468(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class URuneSocketWidget* GetDefaultObj();

};

// 0x48 (0x318 - 0x2D0)
// Class LOTF2.SAA_BaseActor
class ASAA_BaseActor : public AAbilitySystemActor
{
public:
	class UAutonomousAbilitiesComponent*         AutonomousAbilitiesComponent;                      // 0x2D0(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimerHandle                          ActiveDelayedFinishSpawningTimer;                  // 0x2D8(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_32B2[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASAA_BaseActor* GetDefaultObj();

	void OnSubAutonomousAbilityDataReplicated();
};

// 0x10 (0x328 - 0x318)
// Class LOTF2.SAA_AreaOfEffectActor
class ASAA_AreaOfEffectActor : public ASAA_BaseActor
{
public:
	class UGameplayEffectsApplierComponent*      GameplayEffectsApplierComponent;                   // 0x318(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_32B3[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASAA_AreaOfEffectActor* GetDefaultObj();

};

// 0x8 (0x330 - 0x328)
// Class LOTF2.SAA_AreaOfEffectBoxActor
class ASAA_AreaOfEffectBoxActor : public ASAA_AreaOfEffectActor
{
public:
	class UBoxComponent*                         BoxComponent;                                      // 0x328(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ASAA_AreaOfEffectBoxActor* GetDefaultObj();

};

// 0x8 (0x330 - 0x328)
// Class LOTF2.SAA_AreaOfEffectSphereActor
class ASAA_AreaOfEffectSphereActor : public ASAA_AreaOfEffectActor
{
public:
	class USphereComponent*                      SphereComponent;                                   // 0x328(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ASAA_AreaOfEffectSphereActor* GetDefaultObj();

};

// 0x8 (0x330 - 0x328)
// Class LOTF2.SAA_AreaOfEffectCapsuleActor
class ASAA_AreaOfEffectCapsuleActor : public ASAA_AreaOfEffectActor
{
public:
	class UCapsuleComponent*                     CapsuleComponent;                                  // 0x328(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ASAA_AreaOfEffectCapsuleActor* GetDefaultObj();

};

// 0x8 (0x330 - 0x328)
// Class LOTF2.SAA_AreaOfEffectCustomShapeActor
class ASAA_AreaOfEffectCustomShapeActor : public ASAA_AreaOfEffectActor
{
public:
	class UStaticMeshComponent*                  CustomShapeComponent;                              // 0x328(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ASAA_AreaOfEffectCustomShapeActor* GetDefaultObj();

};

// 0x138 (0x460 - 0x328)
// Class LOTF2.SAA_ProjectileActor
class ASAA_ProjectileActor : public ASAA_AreaOfEffectActor
{
public:
	class UHexProjectileMovementComponent*       HexProjectileMovementComponent;                    // 0x328(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_32B4[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USceneComponent*                       TargetComponent;                                   // 0x380(0x8)(ExportObject, Net, ZeroConstructor, InstancedReference, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShouldIgnoreAimToTarget;                          // 0x388(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_32B5[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        RandomSeed;                                        // 0x38C(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bWaitForTarget;                                    // 0x390(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_32B6[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TWeakObjectPtr<class AActor>>         LowPriorityActors;                                 // 0x398(0x10)(ZeroConstructor, Transient, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                        Pad_32B7[0xA8];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class USAA_AreaOfEffectData>     AINotifyHitboxProjectileDataClass;                 // 0x450(0x8)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class USAA_AreaOfEffectData>     AINotifyHitboxMagicProjectileDataClass;            // 0x458(0x8)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ASAA_ProjectileActor* GetDefaultObj();

	void OnRep_TargetComponent();
	void OnAccelerationStart();
};

// 0x8 (0x468 - 0x460)
// Class LOTF2.SAA_ProjectileSphereActor
class ASAA_ProjectileSphereActor : public ASAA_ProjectileActor
{
public:
	class USphereComponent*                      ProjectileCollisionSphereComponent;                // 0x460(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ASAA_ProjectileSphereActor* GetDefaultObj();

};

// 0x8 (0x468 - 0x460)
// Class LOTF2.SAA_ProjectileBoxActor
class ASAA_ProjectileBoxActor : public ASAA_ProjectileActor
{
public:
	class UBoxComponent*                         ProjectileCollisionBoxComponent;                   // 0x460(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ASAA_ProjectileBoxActor* GetDefaultObj();

};

// 0x18 (0x478 - 0x460)
// Class LOTF2.SAA_ProjectileCapsuleActor
class ASAA_ProjectileCapsuleActor : public ASAA_ProjectileActor
{
public:
	class UCapsuleComponent*                     ProjectileCollisionCapsuleComponent;               // 0x460(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_32B8[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASAA_ProjectileCapsuleActor* GetDefaultObj();

};

// 0x8 (0x480 - 0x478)
// Class LOTF2.SAA_ProjectileCapsuleWithShapeCastActor
class ASAA_ProjectileCapsuleWithShapeCastActor : public ASAA_ProjectileCapsuleActor
{
public:
	class USceneComponent*                       ImpactPositionComponent;                           // 0x478(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ASAA_ProjectileCapsuleWithShapeCastActor* GetDefaultObj();

};

// 0x8 (0x468 - 0x460)
// Class LOTF2.SAA_ProjectileCustomShapeActor
class ASAA_ProjectileCustomShapeActor : public ASAA_ProjectileActor
{
public:
	class UStaticMeshComponent*                  ProjectileCollisionCustomShapeComponent;           // 0x460(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ASAA_ProjectileCustomShapeActor* GetDefaultObj();

};

// 0x120 (0x668 - 0x548)
// Class LOTF2.SAA_ProjectileData
class USAA_ProjectileData : public USAA_AreaOfEffectData
{
public:
	struct FVector                               InitialDirection;                                  // 0x548(0x18)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AtenuationRange;                                   // 0x560(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Gravity;                                           // 0x564(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GravityOutsideAtenuationRange;                     // 0x568(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Speed;                                             // 0x56C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxSpeed;                                          // 0x570(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bStopOnReachAtenuationRange;                       // 0x574(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_32B9[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Acceleration;                                      // 0x578(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DelayToStartAcceleration;                          // 0x57C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AccelerationOutsideAtenuationRange;                // 0x580(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseOnlyYawToRotate;                               // 0x584(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_32BA[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RotationSpeed;                                     // 0x588(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_32BB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               RotationDirection;                                 // 0x590(0x18)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RotationStartDelay;                                // 0x5A8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RotationDuration;                                  // 0x5AC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHoming2D;                                         // 0x5B0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_32BC[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        HomingRotationSpeed;                               // 0x5B4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           HomingRotationSpeedByDistance;                     // 0x5B8(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HomingStartDistance;                               // 0x5C0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HomingStopDistanceToTarget;                        // 0x5C4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HomingStartDelay;                                  // 0x5C8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HomingDuration;                                    // 0x5CC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HomingRotationSpeedDecay;                          // 0x5D0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RotationSpeedDecay;                                // 0x5D4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHomingAngleCheck;                                 // 0x5D8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EStopHomingAngleCheckCondition    StopHomingAngleCheckCondition;                     // 0x5D9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_32BD[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        HomingAngle;                                       // 0x5DC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRotationFollowsVelocity;                          // 0x5E0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EProjectileBehaviourCondition     StartHomingConditionsToMeet;                       // 0x5E1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EProjectileBehaviourCondition     StopHomingConditionsToMeet;                        // 0x5E2(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EProjectileBehaviourCondition     StopRotationConditionsToMeet;                      // 0x5E3(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EProjectileAimMode                AimMode;                                           // 0x5E4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_32BE[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  BlackboardTargetKey;                               // 0x5E8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDoNotModifyInitialTransform;                      // 0x5F0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EProjectileAimDirection           ProjectileAimDirection;                            // 0x5F1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAimToTargetWithParabola;                          // 0x5F2(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_32BF[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFloatRange                           RandomTargetOffsetX;                               // 0x5F4(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFloatRange                           RandomTargetOffsetY;                               // 0x604(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFloatRange                           RandomTargetOffsetZ;                               // 0x614(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EReferenceActor                   RandomTargetOffsetRotationReference;               // 0x624(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_32C0[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFloatRange                           AimDistance;                                       // 0x628(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxAngleToAim;                                     // 0x638(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxAngleToAimVertical;                             // 0x63C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ParabolaArc;                                       // 0x640(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bParabolaOverrideSpeed;                            // 0x644(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseAimPrediction;                                 // 0x645(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_32C1[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AimPredictionRatio;                                // 0x648(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsHomingProjectile;                               // 0x64C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EProjectileHomingOffsetMode       HomingOffsetMode;                                  // 0x64D(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldCreateAINotifyHitbox;                       // 0x64E(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldCreateAINotifyHitboxIfInstigatorAI;         // 0x64F(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldMantainFatherTargetIfStillAlive;            // 0x650(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_32C2[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AutoDetectionSphereSize;                           // 0x654(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsTraceGroundMovement;                            // 0x658(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_32C3[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RayCastTraceGroundLength;                          // 0x65C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RayCastTraceGroundHitOffset;                       // 0x660(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIfTraceGroundMovementNoHitDestroy;                // 0x664(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bTraceGroundMovementOrientProjectileToOnHit;       // 0x665(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDestroyIfTargetIsNotFound;                        // 0x666(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_32C4[0x1];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USAA_ProjectileData* GetDefaultObj();

};

// 0x8 (0x338 - 0x330)
// Class LOTF2.SAA_SpawnCharacterActor
class ASAA_SpawnCharacterActor : public ASAA_AreaOfEffectSphereActor
{
public:
	uint8                                        Pad_32C6[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASAA_SpawnCharacterActor* GetDefaultObj();

	void OnSpawnedCharacterEndPlay(class AActor* DestroyedActor, enum class EEndPlayReason EndPlayReason);
	void OnInstigatorRealmChanged(enum class EGameRealm OldRealm, enum class EGameRealm NewRealm);
};

// 0x108 (0x650 - 0x548)
// Class LOTF2.SAA_SpawnCharacterData
class USAA_SpawnCharacterData : public USAA_AreaOfEffectData
{
public:
	TSubclassOf<class UCharacterData>            CharacterData;                                     // 0x548(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDestroyOnSpawnedCharacterDeath;                   // 0x550(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInformSpawnerOwnerOfSpawnedCharacterDeath;        // 0x551(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDestroyOnSpawnedCharacterEndPlay;                 // 0x552(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bApplySpellPowerOnSpawn;                           // 0x553(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPrioritizeInstigatorTarget;                       // 0x554(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRedirectDamageFromSpawnedCharacterToInstigator;   // 0x555(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldApplyDualRealmFromInstigator;               // 0x556(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESpawnActorCollisionHandlingMethod SpawnActorCollisionHandlingMethod;                 // 0x557(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCharacterGameplayAbilitiesConfig     OnSpawnGameplayAbilitiesConfig;                    // 0x558(0xE8)(Edit, NativeAccessSpecifierPublic)
	struct FCurveTableRowHandle                  SpellPowerSummonScalingCurve;                      // 0x640(0x10)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USAA_SpawnCharacterData* GetDefaultObj();

};

// 0x8 (0x2A8 - 0x2A0)
// Class LOTF2.SAA_SpringArmActor
class ASAA_SpringArmActor : public AActor
{
public:
	class USpringArmComponent*                   SpringArmComponent;                                // 0x2A0(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ASAA_SpringArmActor* GetDefaultObj();

};

// 0xA8 (0xF0 - 0x48)
// Class LOTF2.SamplingConsideration
class USamplingConsideration : public UAIConsideration
{
public:
	class UCurveFloat*                           Curve;                                             // 0x48(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRuntimeFloatCurve                    UtilityCurve;                                      // 0x50(0x88)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	enum class EeSamplingConsiderationParam      SamplingParam;                                     // 0xD8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_32C7[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FStepsToProbability>           ProbabilitiesBySteps;                              // 0xE0(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USamplingConsideration* GetDefaultObj();

};

// 0x20 (0x2C0 - 0x2A0)
// Class LOTF2.SaveGameEntryWidget
class USaveGameEntryWidget : public UCommonUserWidget
{
public:
	uint8                                        Pad_32C9[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCommonTextBlock*                      Text_CharName;                                     // 0x2A8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                      Text_CharLocation;                                 // 0x2B0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                      Text_Error;                                        // 0x2B8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USaveGameEntryWidget* GetDefaultObj();

	void SetSelected(bool bSelected);
	void SetSaveData(const class FString& CharName, int32 CharLevel, const class FString& CharLocation);
	void SetRemoveProgress(float Progress);
	void SetError(class FText& TextError);
};

// 0x60 (0x300 - 0x2A0)
// Class LOTF2.SaveGameStatsWidget
class USaveGameStatsWidget : public UCommonUserWidget
{
public:
	class UDataTable*                            AreaNamesDB;                                       // 0x2A0(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                      Text_PlayerLevel;                                  // 0x2A8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                      Text_PlayerStrength;                               // 0x2B0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                      Text_PlayerAgility;                                // 0x2B8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                      Text_PlayerEndurance;                              // 0x2C0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                      Text_PlayerVitality;                               // 0x2C8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                      Text_PlayerFaith;                                  // 0x2D0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                      Text_PlayerChaos;                                  // 0x2D8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                      Text_ClassName;                                    // 0x2E0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                      Text_LastLocation;                                 // 0x2E8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonDateTimeTextBlock*              Text_TimePlayed;                                   // 0x2F0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonDateTimeTextBlock*              Text_LastSavedTime;                                // 0x2F8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class USaveGameStatsWidget* GetDefaultObj();

	void UpdateStats(class ULOTF2SaveGame* SaveGameData);
	void Reset();
};

// 0x10 (0x2B0 - 0x2A0)
// Class LOTF2.ScalabilityLightManager
class AScalabilityLightManager : public AActor
{
public:
	TArray<class ALight*>                        Lights;                                            // 0x2A0(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AScalabilityLightManager* GetDefaultObj();

};

// 0x68 (0xA0 - 0x38)
// Class LOTF2.SceneStateSettings
class USceneStateSettings : public UHexDeveloperSettings
{
public:
	TSoftClassPtr<class ALOTF2PosePlayerCharacter> CharacterBlueprintData;                            // 0x38(0x30)(Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxSlots;                                          // 0x68(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_32CA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class APhotoMode>              PhotoModeActorClass;                               // 0x70(0x30)(Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USceneStateSettings* GetDefaultObj();

};

// 0x0 (0x2A0 - 0x2A0)
// Class LOTF2.PoseActor
class APoseActor : public AActor
{
public:

	static class UClass* StaticClass();
	static class APoseActor* GetDefaultObj();

	void HideActor(bool bHide);
};

// 0x380 (0x620 - 0x2A0)
// Class LOTF2.LOTF2PosePlayerCharacter
class ALOTF2PosePlayerCharacter : public AActor
{
public:
	class USkeletalMeshComponent*                SkeletalMeshComponent;                             // 0x2A0(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPoseableMeshComponent*                PoseableMeshComponent;                             // 0x2A8(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCustomizableSkeletalComponent*        CustomizableSkeletalComponent;                     // 0x2B0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCustomizableObject*                   CustomizableObject;                                // 0x2B8(0x8)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBodyShapeData*                        BodyShapeData;                                     // 0x2C0(0x8)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMutableWrapperComponent*              MutableWrapper;                                    // 0x2C8(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_32CB[0x350];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ALOTF2PosePlayerCharacter* GetDefaultObj();

	void OnMutableChanged();
};

// 0xA68 (0xAA0 - 0x38)
// Class LOTF2.SceneStateSaveGame
class USceneStateSaveGame : public UHexBaseSaveGame
{
public:
	uint8                                        Pad_32CC[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSceneState                           SceneState;                                        // 0x40(0xA50)(NativeAccessSpecifierPublic)
	bool                                         bIsCorrupted;                                      // 0xA90(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsIncompatible;                                   // 0xA91(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_32CD[0xE];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USceneStateSaveGame* GetDefaultObj();

};

// 0xCD0 (0xD00 - 0x30)
// Class LOTF2.SceneStateSubsystem
class USceneStateSubsystem : public UGameInstanceSubsystem
{
public:
	uint8                                        Pad_32D1[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnInitialized;                                     // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSlotLimitReached;                                // 0x50(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSceneStateStartedLoading;                        // 0x60(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSceneStateSaved;                                 // 0x70(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSceneStateLoaded;                                // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSceneStateDeleted;                               // 0x90(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSceneStateDestroyed;                             // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSaveGamesFinishedLoaded;                         // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSaveGameLoaded;                                  // 0xC0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TSubclassOf<class UCommonActivatableWidget>  SceneStateActivatableWidgetClass;                  // 0xD0(0x8)(BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bStateLoaded;                                      // 0xD8(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bStateIsActive;                                    // 0xD9(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_32D2[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ALOTF2PosePlayerCharacter*>     SpawnedPlayerCharacters;                           // 0xE0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPrivate)
	TMap<class FString, class USceneStateSaveGame*> SceneStateSaveGames;                               // 0xF0(0x50)(NativeAccessSpecifierPrivate)
	struct FSceneState                           SceneState;                                        // 0x140(0xA50)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPrivate)
	TArray<class APoseActor*>                    SpawnedAICharacters;                               // 0xB90(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<class APoseActor*>                    SpawnedActors;                                     // 0xBA0(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	bool                                         bIsLoadingSaveGames;                               // 0xBB0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_32D3[0x137];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	class APhotoMode*                            PhotoModeActor;                                    // 0xCE8(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_32D4[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USceneStateSubsystem* GetDefaultObj();

	void TranscendRealm(enum class EGameRealm Realm);
	void SlotLimitReached();
	void SetHasUnsavedChanges(bool bHasChanges);
	void SaveSceneSnapshot(struct FPhotoModeSettings& Settings, struct FIntPoint& ThumbnailResolution, TArray<struct FColor>& ThumbnailColors);
	void Reset();
	void PrepareSceneState(struct FSceneState& SceneState);
	void PreLoadState(class APlayerCharacter* PlayerCharacter);
	void PostLoadState(bool bVisible);
	void OpenPhotoMode();
	void OnSceneSaved();
	void LoadTimerHandles();
	void LoadSceneStateDirect(struct FSceneState& SceneState);
	void LoadSceneState(const class FString& StateName);
	bool LoadFromSlot(const class FString& SlotName, struct FSceneState* State);
	void HidePlayerCharacter(bool bVisibility, class APoseActor* Actor);
	void HideAI(bool bVisibility);
	bool HasFree3DPictureSlot();
	TArray<class ALOTF2PosePlayerCharacter*> GetSpawnedPlayerCharacters();
	struct FSceneState GetSceneState();
	TArray<class APlayerCharacter*> GetPlayerCharacters();
	bool GetIsStateLoaded();
	bool GetIsStateActive();
	bool GetHasUnsavedChanges();
	void DeleteSceneState(const class FString& SlotName);
};

// 0x10 (0x38 - 0x28)
// Class LOTF2.SceneStatesInfo
class USceneStatesInfo : public USaveGame
{
public:
	TArray<struct FSceneStateSlot>               SceneStates;                                       // 0x28(0x10)(ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USceneStatesInfo* GetDefaultObj();

};

// 0x8 (0x3D0 - 0x3C8)
// Class LOTF2.SceneStateActivatableWidget
class USceneStateActivatableWidget : public UCommonActivatableWidget
{
public:
	class USceneStateMenuWidget*                 SceneStateMenuWidget;                              // 0x3C8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class USceneStateActivatableWidget* GetDefaultObj();

	void CloseAlbum();
};

// 0x38 (0x60 - 0x28)
// Class LOTF2.SceneStateSlotViewListData
class USceneStateSlotViewListData : public UObject
{
public:
	struct FSceneStateSlot                       SlotInfo;                                          // 0x28(0x28)(BlueprintVisible, NativeAccessSpecifierPublic)
	class UTexture2D*                            ImageTexture;                                      // 0x50(0x8)(BlueprintVisible, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneStateMenuWidget*                 Widget;                                            // 0x58(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USceneStateSlotViewListData* GetDefaultObj();

};

// 0x50 (0x540 - 0x4F0)
// Class LOTF2.SceneStateMenuWidget
class USceneStateMenuWidget : public UInGameMenuPanel
{
public:
	FMulticastInlineDelegateProperty_            OnSceneStateMenuClosed;                            // 0x4F0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UHexListView*                          SceneStatesListView;                               // 0x500(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCommonRichTextBlock*                  Text_ListEmptyWarning;                             // 0x508(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                Image_Thumbnail;                                   // 0x510(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                      Text_PathToImages;                                 // 0x518(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          AlbumPreviewTag;                                   // 0x520(0x8)(Edit, BlueprintVisible, DisableEditOnTemplate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneStateSlotViewListData*           SelectedData;                                      // 0x528(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_32D5[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USceneStateMenuWidget* GetDefaultObj();

	void SetLockEditing(bool Block);
	void SetDisplay(class USceneStateSlotViewListData* Data);
	void SelectPreviousSlot();
	void SelectNextSlot();
	void OpenFileExplorer();
	void OnSaveGamesFinishedLoading();
	void OnSaveGameLoaded(class USceneStateSaveGame* SceneStateSaveGame);
	void OnLoadState();
	void OnDeleteStateConfirmation();
	void OnDeleteState();
	void CloseMenu();
};

// 0x28 (0x50 - 0x28)
// Class LOTF2.SerializableActorHandle
class USerializableActorHandle : public UObject
{
public:
	struct FSerializationId                      ID;                                                // 0x28(0x1C)(SaveGame, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_32D6[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USerializableActorHandle* GetDefaultObj();

	bool IsInstanceLoaded();
	class AActor* GetWorldInstance();
};

// 0x8 (0xB8 - 0xB0)
// Class LOTF2.SetOwnerVisibilityFromAttachParentActorComponent
class USetOwnerVisibilityFromAttachParentActorComponent : public UActorComponent
{
public:
	uint8                                        Pad_32D7[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USetOwnerVisibilityFromAttachParentActorComponent* GetDefaultObj();

	void OnOwnerCharacterActorHiddenInGameChanged(bool bHidden);
};

// 0x60 (0x810 - 0x7B0)
// Class LOTF2.SettingsEditorRotator
class USettingsEditorRotator : public UFocusableButtonWidget
{
public:
	uint8                                        Pad_32D8[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnRotated;                                         // 0x7C0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_32D9[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UCommonTextBlock*                      MyText;                                            // 0x7E8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_32DA[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USettingsEditorRotator* GetDefaultObj();

	void ShiftTextRight();
	void ShiftTextLeft();
	void SetSelectedItem(int32 InValue);
	void PopulateTextLabels(const TArray<class FText>& Labels);
	class FText GetSelectedText();
	int32 GetSelectedIndex();
	void BP_OnOptionsPopulated(int32 Count);
	void BP_OnOptionSelected(int32 Index);
	void BP_OnDefaultOptionSpecified(int32 DefaultOptionIndex);
};

// 0x78 (0x568 - 0x4F0)
// Class LOTF2.SettingsMenuWidget
class USettingsMenuWidget : public UInGameMenuPanel
{
public:
	class UHexGameUserSettings*                  UserSettings;                                      // 0x4F0(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFocusableButtonWidget*                Button_GraphicsPerformanceMode;                    // 0x4F8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFocusableButtonWidget*                Button_GraphicsQualityMode;                        // 0x500(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFocusableButtonWidget*                Button_GraphicsUltraMode;                          // 0x508(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHexGenericSlider*                     Slider_MasterVolume;                               // 0x510(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            Text_MasterVolumeValue;                            // 0x518(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHexGenericSlider*                     Slider_MusicVolume;                                // 0x520(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            Text_MusicVolumeValue;                             // 0x528(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHexGenericSlider*                     Slider_EffectsVolume;                              // 0x530(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            Text_EffectsVolumeValue;                           // 0x538(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHexGenericSlider*                     Slider_VoiceVolume;                                // 0x540(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            Text_VoiceVolumeValue;                             // 0x548(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCheckBox*                             Checkbox_Invert_Vertical_Axis;                     // 0x550(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCheckBox*                             Checkbox_Invert_Horizontal_Axis;                   // 0x558(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCheckBox*                             Checkbox_Auto_Change_Target;                       // 0x560(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USettingsMenuWidget* GetDefaultObj();

	void OnVoiceVolumeSliderValueChanged(float Value);
	void OnMusicVolumeSliderValueChanged(float Value);
	void OnMouseInvertVerticalAxisChanged(bool bIsInverted);
	void OnMouseInvertHorizontalAxisChanged(bool bIsInverted);
	void OnMasterVolumeSliderValueChanged(float Value);
	void OnGraphicsUltraMode();
	void OnGraphicsQualityMode();
	void OnGraphicsPerformanceMode();
	void OnEffectsVolumeSliderValueChanged(float Value);
	void OnAutoChangeTargetChanged(bool bEnabled);
};

// 0x30 (0x7E0 - 0x7B0)
// Class LOTF2.SettingsTabButton
class USettingsTabButton : public UFocusableButtonWidget
{
public:
	uint8                                        Pad_32DB[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIsTabSelected;                                    // 0x7C0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_32DC[0xF];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCommonTextBlock*                      Text_ButtonLabel;                                  // 0x7D0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_32DD[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USettingsTabButton* GetDefaultObj();

	void OnRefreshVisibility();
};

// 0x58 (0x310 - 0x2B8)
// Class LOTF2.SettingsTabListWidget
class USettingsTabListWidget : public ULOTF2UserWidget
{
public:
	uint8                                        Pad_32DE[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FSettingsCategoryElement>      SettingsCategories;                                // 0x2D8(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class USettingsTabButton>        TabButtonClass;                                    // 0x2E8(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class USettingsTabButton*>            TabButtons;                                        // 0x2F0(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_32DF[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UHorizontalBox*                        Panel_Tabs;                                        // 0x308(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class USettingsTabListWidget* GetDefaultObj();

	void HandleSettingsTabSelected(class FName TabId);
};

// 0x20 (0x170 - 0x150)
// Class LOTF2.SettingsValueGraphicsQualityPreset
class USettingsValueGraphicsQualityPreset : public UGameSettingValueDiscrete
{
public:
	uint8                                        Pad_32E0[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USettingsValueGraphicsQualityPreset* GetDefaultObj();

};

// 0x18 (0x168 - 0x150)
// Class LOTF2.SettingsValueLanguage
class USettingsValueLanguage : public UGameSettingValueDiscrete
{
public:
	uint8                                        Pad_32E1[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USettingsValueLanguage* GetDefaultObj();

};

// 0x50 (0x1A0 - 0x150)
// Class LOTF2.SettingValueResolution
class USettingValueResolution : public UGameSettingValueDiscrete
{
public:
	uint8                                        Pad_32E2[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USettingValueResolution* GetDefaultObj();

};

// 0x8 (0xB8 - 0xB0)
// Class LOTF2.ShakeFeedbackComponent
class UShakeFeedbackComponent : public UActorComponent
{
public:
	class UDataTable*                            DataTable;                                         // 0xB0(0x8)(Edit, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UShakeFeedbackComponent* GetDefaultObj();

	void StopLocalShakeFeedback(class FName Name, class APawn* Instigator);
	void PlayLocalShakeFeedback(class FName Name, class APawn* Instigator);
};

// 0x0 (0x28 - 0x28)
// Class LOTF2.ShakeFeedbackHelper
class UShakeFeedbackHelper : public UObject
{
public:

	static class UClass* StaticClass();
	static class UShakeFeedbackHelper* GetDefaultObj();

	void StopShakeFeedback(class UObject* WorldContextObject, struct FDataTableRowHandle& RowHandle);
	void StopLocalShakeFeedback(class APawn* Instigator, struct FDataTableRowHandle& RowHandle);
	void PlayWorldShakeFeedback(class UObject* WorldContextObject, struct FDataTableRowHandle& RowHandle, const struct FVector& Epicenter, float Radius);
	void PlayLocalShakeFeedback(class APawn* Instigator, struct FDataTableRowHandle& RowHandle);
};

// 0x30 (0x58 - 0x28)
// Class LOTF2.UIShapeDataListEntry
class UUIShapeDataListEntry : public UObject
{
public:
	int32                                        Index;                                             // 0x28(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_32E4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FUIShapeData                          ShapeData;                                         // 0x30(0x28)(BlueprintVisible, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UUIShapeDataListEntry* GetDefaultObj();

};

// 0xC8 (0x5B8 - 0x4F0)
// Class LOTF2.ShapeCustomizationScreenWidget
class UShapeCustomizationScreenWidget : public UInGameMenuPanel
{
public:
	uint8                                        Pad_32E5[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  FeatureName;                                       // 0x500(0x18)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	TArray<struct FShapeCustomizationWidgetSetup> ShapesSetupArray;                                  // 0x518(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                      Text_Title;                                        // 0x528(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                       Shape_Switcher;                                    // 0x530(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  NavigateBack_ActionName;                           // 0x538(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	FDelegateProperty_                           InputActionEvent_NavigateBack;                     // 0x540(0x10)(ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_32E6[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class ECustomizationCategory, struct FShapeCustomizationWidgetSetup> ShapeWidgets;                                      // 0x568(0x50)(Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UShapeCustomizationScreenWidget* GetDefaultObj();

};

// 0x38 (0x378 - 0x340)
// Class LOTF2.ShapeSelectorWidget
class UShapeSelectorWidget : public UOptionSelectorBaseWidget
{
public:
	FMulticastInlineDelegateProperty_            OnHeadShapeSelected;                               // 0x340(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	bool                                         bIsMorphTarget;                                    // 0x350(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsUnisex;                                         // 0x351(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_32E7[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UShapePresetWidget>        ShapePresetClass;                                  // 0x358(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBodyShapeData*                        BodyShapeData;                                     // 0x360(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FUIShapeData>                  ShapeOptions;                                      // 0x368(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UShapeSelectorWidget* GetDefaultObj();

	void Randomize();
	void OnBodyTypeChanged(enum class ECharacterBodyType bodyType);
	class FString GetMutableName();
};

// 0xB8 (0x480 - 0x3C8)
// Class LOTF2.ShardSocketWidget
class UShardSocketWidget : public UInventoryGridItem
{
public:
	class URuneShapeData*                        RuneShapeUIData;                                   // 0x3C8(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                  EmptyText;                                         // 0x3D0(0x18)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_32E8[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class EHexRuneShardType, class FText> ShardTypes;                                        // 0x3F0(0x50)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                      Text_SocketType;                                   // 0x440(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Image_Pressed;                                     // 0x448(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UCommonTextStyle>          MainShardStyle;                                    // 0x450(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UCommonTextStyle>          SecondaryShardStyle;                               // 0x458(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonLazyImage*                      Image_Empty;                                       // 0x460(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                      Text_RuneName;                                     // 0x468(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                      Text_RuneEffects;                                  // 0x470(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHexRuneInventoryItem*                 RuneInventoryItem;                                 // 0x478(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UShardSocketWidget* GetDefaultObj();

	void OnWidgetCreated(bool bIsEmpty);
	void OnHoveredStateChanged(bool bIsFocused);
};

// 0x30 (0x60 - 0x30)
// Class LOTF2.ShiningAttributeSet
class UShiningAttributeSet : public UAttributeSet
{
public:
	struct FGameplayAttributeData                MaxShiningAmount;                                  // 0x30(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                MinShiningAmount;                                  // 0x40(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                ShiningAmount;                                     // 0x50(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UShiningAttributeSet* GetDefaultObj();

	void OnRep_ShiningAmount(struct FGameplayAttributeData& OldShiningAmount);
	void OnRep_MinShiningAmount(struct FGameplayAttributeData& OldMinShiningAmount);
	void OnRep_MaxShiningAmount(struct FGameplayAttributeData& OldMaxShiningAmount);
};

// 0x20 (0x2E0 - 0x2C0)
// Class LOTF2.ShiningComponent
class UShiningComponent : public UGameplayEffectsAreaComponent
{
public:
	float                                        MaxShiningAmount;                                  // 0x2C0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinShiningAmount;                                  // 0x2C4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayEffectsWithParamsContainer   DecayGEs;                                          // 0x2C8(0x10)(Edit, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_32E9[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UShiningComponent* GetDefaultObj();

};

// 0x30 (0x2D0 - 0x2A0)
// Class LOTF2.SimpleClassStatsWidget
class USimpleClassStatsWidget : public UCommonUserWidget
{
public:
	class UCommonTextBlock*                      Text_PlayerStrength;                               // 0x2A0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                      Text_PlayerAgility;                                // 0x2A8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                      Text_PlayerEndurance;                              // 0x2B0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                      Text_PlayerVitality;                               // 0x2B8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                      Text_PlayerFaith;                                  // 0x2C0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCommonTextBlock*                      Text_PlayerChaos;                                  // 0x2C8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class USimpleClassStatsWidget* GetDefaultObj();

	void UpdateStats();
};

// 0x2F8 (0x598 - 0x2A0)
// Class LOTF2.SimpleElevator
class ASimpleElevator : public AActor
{
public:
	class ULOTF2SerializationComponent*          SerializationComponent;                            // 0x2A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USceneComponent*                       StartLocation;                                     // 0x2A8(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USceneComponent*                       DestinationLocation;                               // 0x2B0(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMeshComponent*                  DestinationLocationPreviewMesh;                    // 0x2B8(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USceneComponent*                       ElevatorPivot;                                     // 0x2C0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USceneComponent*                       ButtonPivot;                                       // 0x2C8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBoxComponent*                         ButtonTrigger;                                     // 0x2D0(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UItemDropForbiddenAreaComponent*       ItemDropForbiddenArea;                             // 0x2D8(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnchorForbiddenAreaComponent*         AnchorForbiddenArea;                               // 0x2E0(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAnathemaComponent*                  AkAnathemaComponent;                               // 0x2E8(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FAkAnathemaEvent                      MovementStartSound;                                // 0x2F0(0x50)(Edit, NativeAccessSpecifierPrivate)
	struct FAkAnathemaEvent                      MovementStopSound;                                 // 0x340(0x50)(Edit, NativeAccessSpecifierPrivate)
	class UCurveFloat*                           StartMovementCurve;                                // 0x390(0x8)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        StandardMovementSpeed;                             // 0x398(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_32EB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           EndMovementCurve;                                  // 0x3A0(0x8)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTimeline                             StartTimeline;                                     // 0x3A8(0x98)(Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_32EC[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimeline                             EndTimeline;                                       // 0x460(0x98)(Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_32ED[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FElevatorState                        ElevatorState;                                     // 0x518(0x8)(Net, SaveGame, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_32EE[0x78];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASimpleElevator* GetDefaultObj();

	void OnStartMovementTimelineUpdated(float CurveValue);
	void OnStartMovemendTimelineFinished();
	void OnRepElevatorState();
	void OnEndMovementTimelineUpdated(float CurveValue);
	void OnEndMovemendTimelineFinished();
	void OnElevatorMovementStart();
	void OnElevatorMovementEnding();
	void OnElevatorMovementEnd();
	void OnButtonComponentOverload(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	bool IsAtOriginalPosition();
	class USceneComponent* GetStartLocationComponent();
	class ULOTF2SerializationComponent* GetSerializationComponent();
	enum class ESimpleElevatorState GetElevatorState();
	class USceneComponent* GetElevatorPivot();
	class USceneComponent* GetDestinationLocationComponent();
	class USceneComponent* GetButtonPivot();
	bool CanActivate();
	void Activate();
};

// 0x28 (0x368 - 0x340)
// Class LOTF2.SkinTypeSelectorWidget
class USkinTypeSelectorWidget : public UOptionSelectorBaseWidget
{
public:
	TArray<class FText>                          Options;                                           // 0x340(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	TArray<class FString>                        MutableOptions;                                    // 0x350(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class UPresetNameWidget>         PresetWidgetClass;                                 // 0x360(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USkinTypeSelectorWidget* GetDefaultObj();

	void AddOptions(TArray<class FText>& Options);
};

// 0x18 (0x4F0 - 0x4D8)
// Class LOTF2.SkipCinematicWidget
class USkipCinematicWidget : public UHexActivatableWidget
{
public:
	class UHoldButton*                           Button_Hold;                                       // 0x4D8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_            OnSkipIntro;                                       // 0x4E0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USkipCinematicWidget* GetDefaultObj();

	void OnAnyKeyPressed();
};

// 0x20 (0x2F0 - 0x2D0)
// Class LOTF2.SmallFeatureSliderWidget
class USmallFeatureSliderWidget : public UCustomizationSliderBase
{
public:
	class UCustomizationFeatureLabelWidget*      Text_FeatureName;                                  // 0x2D0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                  FeatureName;                                       // 0x2D8(0x18)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USmallFeatureSliderWidget* GetDefaultObj();

	void SetText(class FText& Text);
	void OnSliderValueChanged(float Value);
};

// 0x10 (0x2B0 - 0x2A0)
// Class LOTF2.SmallRuneSlot
class USmallRuneSlot : public UCommonUserWidget
{
public:
	class UImage*                                Rune_Empty;                                        // 0x2A0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                Rune_Full;                                         // 0x2A8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class USmallRuneSlot* GetDefaultObj();

	void SetSocketed(bool bSocketed);
};

// 0x30 (0x2D0 - 0x2A0)
// Class LOTF2.SocialCurrencyItem
class USocialCurrencyItem : public UCommonUserWidget
{
public:
	uint8                                        Pad_32EF[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UWidgetSwitcher*                       Switcher_Type;                                     // 0x2A8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInventoryGridItem*                    Normal_Item;                                       // 0x2B0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInventoryGridItem*                    Tint_Item;                                         // 0x2B8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                Owned_Icon;                                        // 0x2C0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UInventoryGridItem*                    UsedItem;                                          // 0x2C8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class USocialCurrencyItem* GetDefaultObj();

	void ShowOwnedIcon(bool ShowIcon);
	class UInventoryGridItem* GetItem();
};

// 0x1B0 (0x6A0 - 0x4F0)
// Class LOTF2.SocialCurrencyPanel
class USocialCurrencyPanel : public UInGameMenuPanel
{
public:
	FMulticastInlineDelegateProperty_            DonationSuccess;                                   // 0x4F0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UAmountSelectorWidget>   AmountSelectorWidgetClass;                         // 0x500(0x30)(Edit, DisableEditOnTemplate, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                  Text_InsufficentCoins;                             // 0x530(0x18)(Edit, Protected, NativeAccessSpecifierProtected)
	int32                                        MinTiers;                                          // 0x548(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_32F0[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class USocialCurrencyRow>        Row_Class;                                         // 0x550(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class USocialCurrencyTierRow>    TierRow_Class;                                     // 0x558(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                      Text_ItemName;                                     // 0x560(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonBorder*                         Container_ItemName;                                // 0x568(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                          Panel_Rows;                                        // 0x570(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UScrollBox*                            Scroll_Content;                                    // 0x578(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProgressBar*                          Progress_Tier;                                     // 0x580(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonRichTextBlock*                  Text_OwnedCoinsAmount;                             // 0x588(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonRichTextBlock*                  Text_DonationAmount;                               // 0x590(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          TagToFilter;                                       // 0x598(0x8)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ABaseNPCCharacter*                     NPCCharacter;                                      // 0x5A0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_32F1[0xF8];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USocialCurrencyPanel* GetDefaultObj();

	void PurchaseItem(class UInventoryItem* InventoryItem, class UInventoryGridItem* InventoryGridItem);
	void OnShowDonationPopup();
	void OnItemAmountSelected(int32 Amount);
	void BP_PurchaseItem(class UInventoryItem* InventoryItem, class UInventoryGridItem* InventoryGridItem);
};

// 0x40 (0x2E0 - 0x2A0)
// Class LOTF2.SocialCurrencyRow
class USocialCurrencyRow : public UCommonUserWidget
{
public:
	uint8                                        Pad_32F2[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UHexTileView*                          List_Items;                                        // 0x2D0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_32F3[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USocialCurrencyRow* GetDefaultObj();

	void SetLocked(bool bIsUnlocked);
	class UWidget* GetDesiredFocusTarget();
	void BP_SetupEmptyRow();
};

// 0x0 (0x2A0 - 0x2A0)
// Class LOTF2.SocialCurrencyTierRow
class USocialCurrencyTierRow : public UCommonUserWidget
{
public:

	static class UClass* StaticClass();
	static class USocialCurrencyTierRow* GetDefaultObj();

	void SetTierId(int32 Tier);
};

// 0x20 (0x2D0 - 0x2B0)
// Class LOTF2.SoftRepulsionCapsuleComponent
class USoftRepulsionCapsuleComponent : public USceneComponent
{
public:
	float                                        CapsuleHalfHeight;                                 // 0x2B0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CapsuleRadius;                                     // 0x2B4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseSizeFromOwnerCapsuleComponentIfAvailable;      // 0x2B8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_32F5[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AdditionalMarginSize;                              // 0x2BC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEnableRepulsion;                                  // 0x2C0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_32F6[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RepulsionFactor;                                   // 0x2C4(0x4)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_32F7[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USoftRepulsionCapsuleComponent* GetDefaultObj();

	void SetUseSizeFromOwnerCapsuleComponentIfAvailable(bool bUse, float AdditionalMarginSize);
	void SetRepulsionEnabled(bool bEnabled);
	void SetCapsuleShape(float CapsuleRadius, float CapsuleHalfHeight);
	bool IsRepulsionEnabled();
	float GetRepulsionFactor();
	float GetCapsuleRadius();
	float GetCapsuleHalfHeight();
};

// 0x20 (0x6F0 - 0x6D0)
// Class LOTF2.SoulflayableHintWidgetComponent
class USoulflayableHintWidgetComponent : public UActorWidgetComponent
{
public:
	uint8                                        Pad_32F8[0x15];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bShouldBeVisibleInAxiom;                           // 0x6E5(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_32F9[0xA];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USoulflayableHintWidgetComponent* GetDefaultObj();

	void OnRealmChanged(enum class EGameRealm CurrentRealm, enum class EGameRealm PrevRealm);
	void EnableUI(bool bEnableUI);
};

// 0x60 (0x110 - 0xB0)
// Class LOTF2.SoulflayAffectedActorsComponent
class USoulflayAffectedActorsComponent : public UActorComponent
{
public:
	TArray<TWeakObjectPtr<class AActor>>         SoulflayVictims;                                   // 0xB0(0x10)(Net, ZeroConstructor, RepNotify, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	class UNiagaraSystem*                        FluidTendrilVFX;                                   // 0xC0(0x8)(Edit, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayCueTag                       FailStateHyperArmorGameplayCue;                    // 0xC8(0x8)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FGameplayCueTag                       FailStateParryGameplayCue;                         // 0xD0(0x8)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FGameplayCueTag                       FailStateBlockedGameplayCue;                       // 0xD8(0x8)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FGameplayCueTag                       FailStateNoTargetGameplayCue;                      // 0xE0(0x8)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        SoulflayFailDuration;                              // 0xE8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_32FC[0x24];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USoulflayAffectedActorsComponent* GetDefaultObj();

	void SpawnFailEffect(const struct FVector& Location, struct FGameplayCueTag& GameplayCue);
	void RemoveSoulflayVictim(class AActor* Victim);
	void ProcessSoulflayCase(enum class EHexSoulFlayPerformResult Result, class AActor* Target);
	void OnRep_SoulflayVictims();
	bool GetLanternLocation(struct FVector* OutLanternLocation);
};

// 0xD0 (0x100 - 0x30)
// Class LOTF2.SoulFlayAttributeSet
class USoulFlayAttributeSet : public UAttributeSet
{
public:
	struct FGameplayAttributeData                SoulFlayCharges;                                   // 0x30(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                MaxSoulFlayCharges;                                // 0x40(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                SoulFlayChargeRecoverPerHit;                       // 0x50(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                SoulFlayPerVigorDropAbsorb;                        // 0x60(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                SoulFlayBurstDamageAmount;                         // 0x70(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                PerfectDodgeProvisionalDamage;                     // 0x80(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                PerfectDodgeMojoRecovery;                          // 0x90(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                PerfectBlockMojoRecovery;                          // 0xA0(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                SoulFlayDuration;                                  // 0xB0(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                ProvisionalDamagePerHitRecoveryMultiplier;         // 0xC0(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                UmbralHealingMultiplier;                           // 0xD0(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                UmbralHealingProvisionalDamagePercentage;          // 0xE0(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                SyphonConeLengthMultiplier;                        // 0xF0(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USoulFlayAttributeSet* GetDefaultObj();

	void OnRep_SoulFlayCharges(struct FGameplayAttributeData& OldSoulFlayCharges);
	void OnRep_MaxSoulFlayCharges(struct FGameplayAttributeData& OldMaxSoulFlayCharges);
};

// 0xA8 (0x360 - 0x2B8)
// Class LOTF2.SoulFlayChargesContainerWidget
class USoulFlayChargesContainerWidget : public ULOTF2UserWidget
{
public:
	TSubclassOf<class UGameplayAbility>          SoulFlayAbilityClass;                              // 0x2B8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class USoulFlayChargeWidget>     SoulFlayWidgetClass;                               // 0x2C0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                        SoulFlay_Container;                                // 0x2C8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnathemaAbilitySystemComponent*       PlayerAsc;                                         // 0x2D0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayAttribute                    SoulFlayChargesAttribute;                          // 0x2D8(0x38)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayAttribute                    MaxSoulFlayChargesAttribute;                       // 0x310(0x38)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class USoulFlayChargeWidget*>         SoulFlayCharges;                                   // 0x348(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_32FD[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USoulFlayChargesContainerWidget* GetDefaultObj();

	void UpdateCachedPlayerInfo(class APawn* OldPawn, class APawn* NewPawn);
	void OnConfigInit();
};

// 0xF8 (0x3B0 - 0x2B8)
// Class LOTF2.SoulFlayChargeWidget
class USoulFlayChargeWidget : public ULOTF2UserWidget
{
public:
	class UImage*                                SoulFlay_Charge;                                   // 0x2B8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                SoulFlay_Full;                                     // 0x2C0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Image_SoulFlayFire;                                // 0x2C8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_Charge_Full;                                  // 0x2D0(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AnimationDelay;                                    // 0x2D8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_32FE[0xD4];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USoulFlayChargeWidget* GetDefaultObj();

	void PlaySetEmptyAnimation();
	void PlayAbilityFailedFeedback();
};

// 0x8 (0x2D8 - 0x2D0)
// Class LOTF2.SoulsLanternActor
class ASoulsLanternActor : public AAbilitySystemActor
{
public:
	class USoulsLanternComponent*                SoulsLanternComponent;                             // 0x2D0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ASoulsLanternActor* GetDefaultObj();

	bool IsInUmbral();
	class USoulsLanternComponent* GetSoulsLanternComponent();
	float GetLanternIntensity();
};

// 0xB0 (0xE0 - 0x30)
// Class LOTF2.SoulsLanternAttributeSet
class USoulsLanternAttributeSet : public UAttributeSet
{
public:
	struct FGameplayAttributeData                InnerAxiomMask;                                    // 0x30(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                InnerUmbralMask;                                   // 0x40(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                OuterAxiomMask;                                    // 0x50(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                OuterUmbralMask;                                   // 0x60(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                WaxTransition;                                     // 0x70(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                ConeHalfAngle;                                     // 0x80(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                ConeLength;                                        // 0x90(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                SphereRadius;                                      // 0xA0(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                InitRadius;                                        // 0xB0(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                EndRadius;                                         // 0xC0(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                ConePostProMaster;                                 // 0xD0(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USoulsLanternAttributeSet* GetDefaultObj();

};

// 0xE8 (0x198 - 0xB0)
// Class LOTF2.SoulsLanternComponent
class USoulsLanternComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnEnternHotSpot;                                   // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnExitHotSpot;                                     // 0xC0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnStateChanged;                                    // 0xD0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnDualRealmMaskUpdateVisuals;                      // 0xE0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnLanternUpdateVisuals;                            // 0xF0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TSubclassOf<class ULanternLightDropInventoryItem> LanternLightDropInventoryItemClass;                // 0x100(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UEffigyOfReincarnationInventoryItem> EffigyOfReincarnationInventoryItemClass;           // 0x108(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class APickup>                   LanternLightPickupClass;                           // 0x110(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class APickup>                   EffigyOfReincarnationPickupClass;                  // 0x118(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3305[0x78];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USoulsLanternComponent* GetDefaultObj();

	class ALanternLightDropPickup* SpawnLanternLightPickup(struct FTransform& SpawnTransform, struct FVector& TargetFallLocation, int32 VigorQuantity, bool bShouldSpawnPickupCopyForAlly);
	class AEffigyOfReincarnationPickup* SpawnEffigyOfReincarnationPickup(struct FTransform& SpawnTransform, struct FVector& TargetFallLocation);
	void SetWorldDefaultLanternIntensity(float Value);
	void OnPlayerEndPlay(class AActor* Actor, enum class EEndPlayReason EndPlayReason);
	void OnOwnerPlayerExitHotSpot(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnOwnerPlayerEntersHotSpot(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	bool IsInUmbral();
	void HandleOnRealmChanged(enum class EGameRealm OldRealm, enum class EGameRealm NewRealm);
	float GetWorldDefaultLanternIntensity();
	float GetLanternIntensity();
	class ULanternLightDropInventoryItem* ConstructLanternLightInventoryItem(class UObject* Outer, int32 VigorQuantity);
	class UEffigyOfReincarnationInventoryItem* ConstructEffigyOfReincarnationInventoryItem(class UObject* Outer);
};

// 0x10 (0x580 - 0x570)
// Class LOTF2.SoulsLanternHotSpotComponent
class USoulsLanternHotSpotComponent : public USphereComponent
{
public:
	float                                        Intensity;                                         // 0x570(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        CoreSphereRadius;                                  // 0x574(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3309[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USoulsLanternHotSpotComponent* GetDefaultObj();

	void SetEnabled(bool bEnabled);
	bool IsComponentInHotSpotSubArea(class UPrimitiveComponent* Component);
	bool IsComponentInHotSpot(class UPrimitiveComponent* Component);
	float GetUnscaledCoreSphereRadius();
	float GetScaledCoreSphereRadius();
	float GetIntensityForLantern(class USoulsLanternComponent* Lantern);
	float GetIntensity();
};

// 0x10 (0x580 - 0x570)
// Class LOTF2.SpawnAreaComponent
class USpawnAreaComponent : public USphereComponent
{
public:
	uint32                                       MaxGeneratedSpawnPoints;                           // 0x570(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ECollisionChannel                 CollisionChannelToTest;                            // 0x574(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bDrawDebugSearchedPoints;                          // 0x575(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bDrawDebugAllPossiblePoints;                       // 0x576(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_330A[0x9];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USpawnAreaComponent* GetDefaultObj();

	void DebugSimulateAllSpawnPointsValidation(float CollisionCapsuleRadius, float CollisionCapsuleHalfHeight, float VisualOutputLifetime);
};

// 0x178 (0x1A0 - 0x28)
// Class LOTF2.SpawnDirector
class USpawnDirector : public UObject
{
public:
	uint8                                        Pad_3310[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnAiCharacterRegistered;                           // 0x58(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMap<struct FSerializationId, struct FSpawnPoolsInfo> SpawnPoolsState;                                   // 0x68(0x50)(SaveGame, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3311[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ABaseAICharacter*>              RegisteredAICharacters;                            // 0xC8(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class ASimpleCharacterSpawner*>       EnqueuedSpawners;                                  // 0xD8(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class AActor*>                        EnqueuedActorsToDestroy;                           // 0xE8(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class ADestructible*>                 EnqueuedDestructibleDelayDeath;                    // 0xF8(0x10)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TMap<TWeakObjectPtr<class ASimpleCharacterSpawner>, struct FRegionScalingData> RegionalScalingDataBySpawner;                      // 0x108(0x50)(Transient, NativeAccessSpecifierPrivate)
	TArray<TWeakObjectPtr<class ASimpleCharacterSpawner>> SpawnersPendingCollisionActivation;                // 0x158(0x10)(ZeroConstructor, Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3312[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FHexSpawnActorRequest>         PendingSpawnRequests;                              // 0x170(0x10)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<TWeakObjectPtr<class AActor>>         ActorsPendingUpdateOverlapsRequests;               // 0x180(0x10)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3313[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ASimpleCharacterSpawner*               CurrentSpawningSpawner;                            // 0x198(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class USpawnDirector* GetDefaultObj();

	void UnregisterVolatileActor(class AActor* Actor);
	void Reset();
	void RegisterVolatileActor(class AActor* Actor);
	void RegisterDestructibleDelayDeath(class ADestructible* Actor);
	void OnVolatileActorEndPlay(class AActor* Actor, enum class EEndPlayReason EndPlayReason);
	void OnSpawnPoolEndPlay(class AActor* Actor, enum class EEndPlayReason EndPlayReason);
	void OnSpawnPoolCurrentNumberOfSpawnsChange(class ASpawnPool* SpawnPool, int32 CurrentNumberOfSpawns);
	void OnSpawnerEndPlay(class AActor* Actor, enum class EEndPlayReason EndPlayReason);
	TArray<class ABaseAICharacter*> GetRegisteredAICharactersFilteredByDistance(TArray<class ABaseAICharacter*>& CharactersToFilter, const struct FVector& PositionToCompare, float DistanceToFilter);
	int32 GetRegisteredAICharactersCount();
	TArray<class ABaseAICharacter*> GetRegisteredAICharacters(TArray<class ABaseAICharacter*>& CharactersToFilter);
	void EnqueuePendingOverlapsRequest(class AActor* RequestingActor);
	void DestroySpawnedAIs();
	void ActivateNextPendingSpawnerCollisions();
};

// 0x88 (0x328 - 0x2A0)
// Class LOTF2.SpawnPool
class ASpawnPool : public AActor
{
public:
	uint8                                        Pad_3315[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ULOTF2SerializationComponent*          LOTF2SerializationComponent;                       // 0x2B8(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FSpawnwerData>                 SpawnersConfig;                                    // 0x2C0(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, NativeAccessSpecifierPrivate)
	TArray<struct FSpawnedCharacterData>         CharactersConfig;                                  // 0x2D0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	int32                                        MinNumberOfSpawns;                                 // 0x2E0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        MaxNumberOfSpawns;                                 // 0x2E4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        CurrentNumberOfSpawns;                             // 0x2E8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3316[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                AvailableSpawners;                                 // 0x2F0(0x10)(ZeroConstructor, SaveGame, NativeAccessSpecifierPrivate)
	TArray<int32>                                AvailableCharacters;                               // 0x300(0x10)(ZeroConstructor, SaveGame, NativeAccessSpecifierPrivate)
	TArray<struct FCurrentlyUsedData>            CurrentlyUsedSpawnersAndCharacters;                // 0x310(0x10)(ZeroConstructor, SaveGame, NativeAccessSpecifierPrivate)
	class USceneComponent*                       RootSceneComponent;                                // 0x320(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ASpawnPool* GetDefaultObj();

	void OnSpawnerEndPlay(class AActor* Spawner, enum class EEndPlayReason EndPlayReason);
	void OnSpawnedCharacterDead(class ASimpleCharacterSpawner* Spawner, class ALOTF2Character* Character);
};

// 0x2D0 (0x380 - 0xB0)
// Class LOTF2.SpecialDamageSpotsHighlighterComponent
class USpecialDamageSpotsHighlighterComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnSpotHighlightBegin;                              // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSpotHighlightEnd;                                // 0xC0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 RequeredTagsToActivateComponent;                   // 0xD0(0x20)(Edit, NativeAccessSpecifierPrivate)
	float                                        EndHighlightDelay;                                 // 0xF0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3319[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBodyInstance                         BodyInstanceForSpotColliderSetup;                  // 0xF8(0x190)(Edit, NativeAccessSpecifierPrivate)
	TMap<class UPrimitiveComponent*, int32>      SpotColliderOverlapCounters;                       // 0x288(0x50)(Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TMap<class UPrimitiveComponent*, float>      SpotColliderEndDelayCountdowns;                    // 0x2D8(0x50)(Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_331A[0x58];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USpecialDamageSpotsHighlighterComponent* GetDefaultObj();

	void OnEndShiningOnSpot(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnBeginShiningOnSpot(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
};

// 0x60 (0x300 - 0x2A0)
// Class LOTF2.SplineSound
class ASplineSound : public AActor
{
public:
	class USplineComponent*                      SplineComponent;                                   // 0x2A0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAnathemaComponent*                  AkAnathemaComponent;                               // 0x2A8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               LocalPlayerAkComponentLocation;                    // 0x2B0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               SplineLocationClosestToAkComponent;                // 0x2C8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         OutOfRange;                                        // 0x2E0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_331B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxDistance;                                       // 0x2E4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InterpolationSpeed;                                // 0x2E8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TickIntervalOutOfRange;                            // 0x2EC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TickIntervalInRange;                               // 0x2F0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CurrentTickInterval;                               // 0x2F4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_331C[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASplineSound* GetDefaultObj();

	void BP_StopPlaySound();
	void BP_StartPlaySound();
};

// 0xE8 (0x198 - 0xB0)
// Class LOTF2.StanceComponent
class UStanceComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnMeleeOptionChanged;                              // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRangedOptionChanged;                             // 0xC0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnMeleeStanceChanged;                              // 0xD0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRangedStanceChanged;                             // 0xE0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnStanceTypeChanged;                               // 0xF0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnWeaponHolsterLogicStateChanged;                  // 0x100(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnWeaponHolsterVisualStateChanged;                 // 0x110(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	enum class EMeleeOption                      MeleeOption;                                       // 0x120(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class ERangedOption                     RangedOption;                                      // 0x121(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EMeleeStance                      MeleeStance;                                       // 0x122(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class ERangedStance                     RangedStance;                                      // 0x123(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EStanceType                       CurrentStance;                                     // 0x124(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bFullyHolstered;                                   // 0x125(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3320[0x32];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FActiveGameplayEffectHandle>   StanceActiveGameplayEffectHandles;                 // 0x158(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3321[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UStanceComponent* GetDefaultObj();

	void SetupInventoryComponentFromActorBegunPlay();
	void SetupInventoryComponent();
	void SetRangedOption(enum class ERangedOption RangedOption);
	void SetMeleeOption(enum class EMeleeOption MeleeOption);
	void SetFullyHolstered(bool bFullyHolstered);
	void SetDefaultStance();
	void RemoveFullyHolsteredOverride(class FName ID, bool bChecked);
	void OnRep_RangedOption(enum class ERangedOption OldRangedOption);
	void OnRep_MeleeOption(enum class EMeleeOption OldStance);
	void OnRep_FullyHolstered();
	void OnCurrentFullyHolsteredStateChanged(bool bNewState);
	bool IsFullyHolstered();
	void HandleOnWeaponHolsterVisualStateChanged(bool bHolstered, enum class EHolsterableSlot HolsterableSlot);
	void HandleOnWeaponHolsterLogicStateChanged(bool bHolstered, enum class EHolsterableSlot HolsterableSlot);
	void HandleOnRangedAmmoSlotChanged(enum class EFEquipmentSlot& OldSlot, enum class EFEquipmentSlot& NewSlot);
	void HandleEquippedGearChanged(TArray<class UEquipableInventoryItem*>& PrevEquippedGear, TArray<class UEquipableInventoryItem*>& NewEquippedGear);
	enum class EStanceType GetStance();
	enum class ERangedStance GetRangedStance();
	enum class ERangedOption GetRangedOption();
	enum class EMeleeStance GetMeleeStance();
	enum class EMeleeOption GetMeleeOption();
	void CycleStance();
	bool ContainsFullyHolsteredOverride(class FName ID);
	void AddFullyHolsteredOverride(bool bFullyHolstered, class FName ID, int32 Priority);
};

// 0x2F8 (0x5B0 - 0x2B8)
// Class LOTF2.StatBarWidget
class UStatBarWidget : public ULOTF2UserWidget
{
public:
	uint8                                        Pad_3322[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSlateBrush                           FillImage;                                         // 0x2C0(0xD0)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTag                          FailedToActivateTag;                               // 0x390(0x8)(Edit, BlueprintVisible, DisableEditOnTemplate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProgressBar*                          ProgressBar_Stat;                                  // 0x398(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProgressBar*                          ProgressBar_ProvisionalStat;                       // 0x3A0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProgressBar*                          ProgressBar_Highlight;                             // 0x3A8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProgressBar*                          ProgressBar_Scaling;                               // 0x3B0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBorder*                               Border_Background_Front;                           // 0x3B8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBorder*                               Border_Background_Back;                            // 0x3C0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayAttribute                    Attribute;                                         // 0x3C8(0x38)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayAttribute                    MaxAttribute;                                      // 0x400(0x38)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayAttribute                    ProvisionalAttribute;                              // 0x438(0x38)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHasProvisionalAttribute;                          // 0x470(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3323[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayAttribute                    ScalingAttribute;                                  // 0x478(0x38)(Edit, BlueprintVisible, DisableEditOnTemplate, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHasScalingAttribute;                              // 0x4B0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3324[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSubclassOf<class UGameplayAbility>>  AbilityFailArray;                                  // 0x4B8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	bool                                         bHasAbilityFailFeedback;                           // 0x4C8(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHasDecreaseFeedback;                              // 0x4C9(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3325[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAbilitySystemComponent*               PlayerAsc;                                         // 0x4D0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinWidth;                                          // 0x4D8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxWidth;                                          // 0x4DC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ProportionPixels;                                  // 0x4E0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3326[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        HighlightDelay;                                    // 0x4EC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3327[0xB0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UHexPlayerAbilityFeedbackComponent*    FeedbackComponent;                                 // 0x5A0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3328[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UStatBarWidget* GetDefaultObj();

	void UpdateStats(float CurrentHealth, float MaxHealth);
	void UpdateCachedPlayerInfo(class APawn* OldPawn, class APawn* NewPawn);
	void ScaleProgressBars(float Value);
	void OnConfigInit();
	void OnAbilityFailed(class UGameplayAbility* Ability, struct FGameplayTagContainer& GameplayTags);
	void BP_ShowScalingBar();
	void BP_ShowDecreaseFeedback(float Time);
	void BP_PlayFailAbilityFeedback();
	void BP_HideScalingBar();
};

// 0x898 (0xB50 - 0x2B8)
// Class LOTF2.StatProgressBar
class UStatProgressBar : public ULOTF2UserWidget
{
public:
	class UProgressBar*                          ProgressBar_Main;                                  // 0x2B8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProgressBar*                          ProgressBar_Highlight;                             // 0x2C0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProgressBar*                          ProgressBar_Feedback;                              // 0x2C8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FProgressBarStyle                     ProgressBar_Main_Style;                            // 0x2D0(0x290)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	struct FProgressBarStyle                     ProgressBar_Highlight_Style;                       // 0x560(0x290)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	struct FProgressBarStyle                     ProgressBar_Feedback_Style;                        // 0x7F0(0x290)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	struct FSlateBrush                           BorderBrush;                                       // 0xA80(0xD0)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UStatProgressBar* GetDefaultObj();

};

// 0x8 (0x2A8 - 0x2A0)
// Class LOTF2.StatRequirementsWidget
class UStatRequirementsWidget : public UCommonUserWidget
{
public:
	class UPanelWidget*                          Panel_AttributeRequirements;                       // 0x2A0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UStatRequirementsWidget* GetDefaultObj();

};

// 0x18 (0x2D0 - 0x2B8)
// Class LOTF2.StatRowWidget
class UStatRowWidget : public ULOTF2UserWidget
{
public:
	class UImage*                                Image_Background;                                  // 0x2B8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            Text_Stat;                                         // 0x2C0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            Text_Value;                                        // 0x2C8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UStatRowWidget* GetDefaultObj();

};

// 0x28 (0xD8 - 0xB0)
// Class LOTF2.StatsContainerComponent
class UStatsContainerComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnLevelChange;                                     // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnExperienceChange;                                // 0xC0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_332B[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UStatsContainerComponent* GetDefaultObj();

	void ServerUpgradeStats(int32 StrengthIncrement, int32 AgilityIncrement, int32 VitalityIncrement, int32 EnduranceIncrement, int32 FaithIncrement, int32 ChaosIncrement, bool bPayVigorCost);
	void ResetAttributeBuild_Server();
	int32 GetVitality();
	int32 GetVigorToNextAPFromLevel(int32 CurrentLevel);
	int32 GetVigorToNextAP();
	int32 GetStrength();
	int32 GetStatPoints();
	int32 GetPowerLevel(bool bTakeWeaponIntoAccount);
	int32 GetLevel();
	float GetItemDiscovery();
	int32 GetInitialVitality();
	int32 GetInitialStrength();
	int32 GetInitialFaith();
	int32 GetInitialEndurance();
	int32 GetInitialChaos();
	int32 GetInitialAgility();
	int32 GetFaith();
	int32 GetEndurance();
	int32 GetChaos();
	int32 GetAgility();
	void DebugSetVitalityValue_Server(int32 Value);
	void DebugSetStrengthValue_Server(int32 Value);
	void DebugSetFaithValue_Server(int32 Value);
	void DebugSetEnduranceValue_Server(int32 Value);
	void DebugSetChaosValue_Server(int32 Value);
	void DebugSetAgilityValue_Server(int32 Value);
};

// 0x10 (0x40 - 0x30)
// Class LOTF2.StatueSpawnerCharacterData
class UStatueSpawnerCharacterData : public UDataAsset
{
public:
	TArray<struct FStatueSpawnerPose>            Poses;                                             // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UStatueSpawnerCharacterData* GetDefaultObj();

	TArray<struct FStatueSpawnerPose> GetPoses();
};

// 0x68 (0x308 - 0x2A0)
// Class LOTF2.StatusEffect
class AStatusEffect : public AActor
{
public:
	bool                                         bUseEffectDecay;                                   // 0x2A0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_332D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        EffectLifetime;                                    // 0x2A4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CurrentEffectDecay;                                // 0x2A8(0x4)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEffectorsStallDecay;                              // 0x2AC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsDecaying;                                       // 0x2AD(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_332E[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 GameplayTags;                                      // 0x2B0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class AActor*                                Target;                                            // 0x2D0(0x8)(BlueprintVisible, Net, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStatusEffectComponent*                EffectManager;                                     // 0x2D8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEffectActive;                                     // 0x2E0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_332F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UObject*>                       EffectorList;                                      // 0x2E8(0x10)(BlueprintVisible, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_            OnStatusEffectEnd;                                 // 0x2F8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AStatusEffect* GetDefaultObj();

	void StartEffect(class UStatusEffectComponent* StatusEffectComponent);
	void RemoveEffector(class UObject* Effector);
	bool IsEffectActive();
	bool HasEffector(class UObject* Effector);
	struct FGameplayTagContainer GetGameplayTags();
	void EndEffect();
	int32 EffectorCount();
	void AddEffector(class UObject* Effector);
};

// 0x10 (0x2D0 - 0x2C0)
// Class LOTF2.StatusEffectBar
class UStatusEffectBar : public UExtensionPointEntryWidget
{
public:
	class UStatBarWidget*                        StatBar_StatusEffect;                              // 0x2C0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBuffIconWidget*                       Icon_StatusEffect;                                 // 0x2C8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UStatusEffectBar* GetDefaultObj();

};

// 0x10 (0xC0 - 0xB0)
// Class LOTF2.StatusEffectComponent
class UStatusEffectComponent : public UActorComponent
{
public:
	TArray<class AStatusEffect*>                 StatusEffects;                                     // 0xB0(0x10)(BlueprintVisible, Net, ZeroConstructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UStatusEffectComponent* GetDefaultObj();

	void RemoveStatusEffect(class AStatusEffect* Effect);
	TArray<class AStatusEffect*> GetStatusEffectsWithEffector(class UObject* Effector);
	void ClearEffector(class UObject* Effector);
	void CancelStatusEffectsWithTags(const struct FGameplayTagContainer& Tags, bool bRequireAllTags);
	void CancelStatusEffectsWithEffector(class UObject* Effector);
	void ApplyStatusEffect(TSubclassOf<class AStatusEffect> StatusEffect);
	void AddStatusEffect(class AStatusEffect* Effect);
};

// 0x248 (0x278 - 0x30)
// Class LOTF2.StatusEffectsAttributeSet
class UStatusEffectsAttributeSet : public UAttributeSet
{
public:
	struct FGameplayAttributeData                BuildupBleed;                                      // 0x30(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                BuildupPoison;                                     // 0x40(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                BuildupWither;                                     // 0x50(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                BuildupFrostbite;                                  // 0x60(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                BuildupSmite;                                      // 0x70(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                BuildupBurn;                                       // 0x80(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                BuildupIgnite;                                     // 0x90(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                MaxBuildupBleed;                                   // 0xA0(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                MaxBuildupPoison;                                  // 0xB0(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                MaxBuildupWither;                                  // 0xC0(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                MaxBuildupFrostbite;                               // 0xD0(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                MaxBuildupSmite;                                   // 0xE0(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                MaxBuildupBurn;                                    // 0xF0(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                MaxBuildupIgnite;                                  // 0x100(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                CooldownBleed;                                     // 0x110(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                CooldownPoison;                                    // 0x120(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                CooldownWither;                                    // 0x130(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                CooldownFrostbite;                                 // 0x140(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                CooldownSmite;                                     // 0x150(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                CooldownBurn;                                      // 0x160(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                CooldownIgnite;                                    // 0x170(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TMap<enum class EHexStatusEffectGEType, struct FHexStatusEffectHandleByAttribute> RuntimeStatusEffectHandles;                        // 0x180(0x50)(NativeAccessSpecifierPrivate)
	uint8                                        Pad_3331[0xA8];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UStatusEffectsAttributeSet* GetDefaultObj();

	void OnRep_MaxBuildupSmite(struct FGameplayAttributeData& OldMaxBuildupSmite);
	void OnRep_MaxBuildupPoison(struct FGameplayAttributeData& OldMaxBuildupPoison);
	void OnRep_MaxBuildupIgnite(struct FGameplayAttributeData& OldMaxBuildupIgnite);
	void OnRep_MaxBuildupFrostbite(struct FGameplayAttributeData& OldMaxBuildupFrostbite);
	void OnRep_MaxBuildupBurn(struct FGameplayAttributeData& OldMaxBuildupBurn);
	void OnRep_MaxBuildupBleed(struct FGameplayAttributeData& OldMaxBuildupBleed);
	void OnRep_BuildupSmite(struct FGameplayAttributeData& OldBuildupSmite);
	void OnRep_BuildupPoison(struct FGameplayAttributeData& OldBuildupPoison);
	void OnRep_BuildupIgnite(struct FGameplayAttributeData& OldBuildupIgnite);
	void OnRep_BuildupFrostbite(struct FGameplayAttributeData& OldBuildupFrostbite);
	void OnRep_BuildupBurn(struct FGameplayAttributeData& OldBuildupBurn);
	void OnRep_BuildupBleed(struct FGameplayAttributeData& OldBuildupBleed);
};

// 0x30 (0x2D0 - 0x2A0)
// Class LOTF2.StatusEffectsContainer
class UStatusEffectsContainer : public UCommonUserWidget
{
public:
	class UInventoryStatRow*                     Stat_SmiteDamage;                                  // 0x2A0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryStatRow*                     Stat_BleedDamage;                                  // 0x2A8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryStatRow*                     Stat_BurnDamage;                                   // 0x2B0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryStatRow*                     Stat_IgniteDamage;                                 // 0x2B8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryStatRow*                     Stat_FrostbiteDamage;                              // 0x2C0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryStatRow*                     Stat_PoisonDamage;                                 // 0x2C8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UStatusEffectsContainer* GetDefaultObj();

	void UpdateStats(class UEquipableInventoryItem* InventoryWeapon, class UAbilitySystemComponent* OwnerAbilitySystemComponent);
};

// 0x70 (0xA0 - 0x30)
// Class LOTF2.StatusEffectsDamageAttributeSet
class UStatusEffectsDamageAttributeSet : public UAttributeSet
{
public:
	struct FGameplayAttributeData                DamageStatusBleed;                                 // 0x30(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                DamageStatusPoison;                                // 0x40(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                DamageStatusWither;                                // 0x50(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                DamageStatusFrostbite;                             // 0x60(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                DamageStatusSmite;                                 // 0x70(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                DamageStatusBurn;                                  // 0x80(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                DamageStatusIgnite;                                // 0x90(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UStatusEffectsDamageAttributeSet* GetDefaultObj();

};

// 0x0 (0x38 - 0x38)
// Class LOTF2.StopFlinchNotify
class UStopFlinchNotify : public UAnimNotify
{
public:

	static class UClass* StaticClass();
	static class UStopFlinchNotify* GetDefaultObj();

};

// 0x48 (0x300 - 0x2B8)
// Class LOTF2.SubtitleWidget
class USubtitleWidget : public ULOTF2UserWidget
{
public:
	uint8                                        Pad_3332[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnAnimationDone;                                   // 0x2C8(0x10)(ZeroConstructor, InstancedReference, BlueprintCallable, NativeAccessSpecifierPublic)
	class UCommonRichTextBlock*                  Text_Subtitle;                                     // 0x2D8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Show_Animation;                                    // 0x2E0(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Hide_Animation;                                    // 0x2E8(0x8)(ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3333[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USubtitleWidget* GetDefaultObj();

	void SetText(class FText& Text);
	void OnSetTextDone();
	void OnCurrentDialogueFinished();
};

// 0x28 (0x2E0 - 0x2B8)
// Class LOTF2.SwitchableStancesWidget
class USwitchableStancesWidget : public ULOTF2UserWidget
{
public:
	uint8                                        Pad_3334[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class URichTextBlock*                        RichText_SwitchToLantern;                          // 0x2C0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class URichTextBlock*                        RichText_SwitchToRanged;                           // 0x2C8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInputAction*                          InputActionSwitchToLantern;                        // 0x2D0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInputAction*                          InputActionSwitchToRanged;                         // 0x2D8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class USwitchableStancesWidget* GetDefaultObj();

	void SetupPawn(class APawn* OldPawn, class APawn* NewPawn);
	void RestoreHudAfterDialogueSequence();
	void OnRangedStanceChanged(enum class ERangedStance OldRangedStance, enum class ERangedStance NewRangedStance);
	void OnKeyBindingChanged(class FName& Name);
	void OnChangeSelectedRangedOption();
	void HideHudForDialogueSequence();
	void BP_SwitchStance(enum class EStanceWidgetIndex CurrentStance);
	void BP_SwitchActionsVisibility(enum class EStanceWidgetIndex CurrentStance, bool bHolding);
};

// 0x68 (0x118 - 0xB0)
// Class LOTF2.SyncAnimMontagesComponent
class USyncAnimMontagesComponent : public UActorComponent
{
public:
	TMap<TSoftObjectPtr<class UAnimMontage>, class UAnimMontage*> SyncMontagesMap;                                   // 0xB0(0x50)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_3336[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USyncAnimMontagesComponent* GetDefaultObj();

	void SetActorMontagesLeader(class AActor* ActorMontagesLeader);
	void OnMontageStarted(class UAnimMontage* PMontage);
	void OnMontageEnded(class UAnimMontage* Montage, int32 MontageInstanceID, bool bInterrupted);
	class AActor* GetActorMontagesLeader();
};

// 0x10 (0x400 - 0x3F0)
// Class LOTF2.TargetActor_TargetComponent
class ATargetActor_TargetComponent : public AGameplayAbilityTargetActor
{
public:
	uint8                                        Pad_3337[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATargetActor_TargetComponent* GetDefaultObj();

};

// 0xE0 (0x390 - 0x2B0)
// Class LOTF2.TargetComponent
class UTargetComponent : public USceneComponent
{
public:
	FMulticastInlineDelegateProperty_            OnTargeted;                                        // 0x2B0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTargetOutOfVisibility;                           // 0x2C0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnUnTargeted;                                      // 0x2D0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bIsBoss;                                           // 0x2E0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3339[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          CameraTransitionTag;                               // 0x2E4(0x8)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  AttachingBoneName;                                 // 0x2EC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        TargetMultiplayerRole;                             // 0x2F4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_333A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayAttribute                    AttributeToTrack;                                  // 0x2F8(0x38)(Edit, BlueprintVisible, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayAttribute                    MaxValueAttributeToTrack;                          // 0x330(0x38)(Edit, BlueprintVisible, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bOverrideMaxDistanceToLockOn;                      // 0x368(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_333B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxDistanceToLockOn;                               // 0x36C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSupportAutoSwitch;                                // 0x370(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_333C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LockOnWeightMultiplier;                            // 0x374(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bLockOnActive;                                     // 0x378(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_333D[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TWeakObjectPtr<class AActor>>         Targeters;                                         // 0x380(0x10)(ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UTargetComponent* GetDefaultObj();

	void SetEnableLockOn(bool InEnableLockOn);
	void OnRep_LockOnActive();
	void OnPlayerStateReplicated(class APlayerState* PlayerState);
	bool IsBeingTargetedBy(class AActor* Actor);
	bool IsBeingTargeted();
};

// 0xE0 (0x120 - 0x40)
// Class LOTF2.TargetManager
class UTargetManager : public UTickableWorldSubsystem
{
public:
	uint8                                        Pad_333E[0xD4];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bEnablePrioritizeCenterLockOnExperimental;         // 0x114(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_333F[0xB];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTargetManager* GetDefaultObj();

};

// 0x68 (0x308 - 0x2A0)
// Class LOTF2.TattooPanel
class UTattooPanel : public UCommonUserWidget
{
public:
	class UHexTileView*                          Shapes_Grid;                                       // 0x2A0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            TattooDefaults;                                    // 0x2A8(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsHeadTattoo;                                     // 0x2B0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3340[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  Title;                                             // 0x2B8(0x18)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	enum class ETattooLocation                   Location;                                          // 0x2D0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EBodyShapeAttributeType           Color_Attribute;                                   // 0x2D1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EBodyShapeAttributeType           Intensity_Attribute;                               // 0x2D2(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EBodyShapeAttributeType           Tint_Attribute;                                    // 0x2D3(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EBodyShapeAttributeType           Opacity_Attribute;                                 // 0x2D4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ECustomizationCategory            ShapeCategory;                                     // 0x2D5(0x1)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3341[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UShapePresetWidget>        ShapePresetClass;                                  // 0x2D8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        GridColumns;                                       // 0x2E0(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3342[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UBodyShapeData*                        BodyShapeData;                                     // 0x2E8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EBodyShapeAttributeType           AttributeType;                                     // 0x2F0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsCustomizationActive;                            // 0x2F1(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3343[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UHSVColorSliderWidget*                 TattooColor;                                       // 0x2F8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3344[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTattooPanel* GetDefaultObj();

	void SelectAndFocus();
	void OnMeshChanged();
	void InitTattooPanel();
};

// 0x30 (0x370 - 0x340)
// Class LOTF2.TattooSelectorWidget
class UTattooSelectorWidget : public UOptionSelectorBaseWidget
{
public:
	bool                                         bIsHeadTattoo;                                     // 0x340(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ETattooLocation                   Location;                                          // 0x341(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EBodyShapeAttributeType           Color_Attribute;                                   // 0x342(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EBodyShapeAttributeType           Intensity_Attribute;                               // 0x343(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EBodyShapeAttributeType           Tint_Attribute;                                    // 0x344(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EBodyShapeAttributeType           Opacity_Attribute;                                 // 0x345(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3345[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UShapePresetWidget>        ShapePresetClass;                                  // 0x348(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBodyShapeData*                        BodyShapeData;                                     // 0x350(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FUIShapeData>                  ShapeOptions;                                      // 0x358(0x10)(ZeroConstructor, Transient, Protected, NativeAccessSpecifierProtected)
	class UDataTable*                            TattooDefaults;                                    // 0x368(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UTattooSelectorWidget* GetDefaultObj();

};

// 0x10 (0x338 - 0x328)
// Class LOTF2.TeamActor
class ATeamActor : public APawn
{
public:
	uint8                                        Pad_3346[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAIFactionComponent*                   AIFactionComponent;                                // 0x330(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ATeamActor* GetDefaultObj();

};

// 0x660 (0x7B0 - 0x150)
// Class LOTF2.ThreeValueSliderWidget
class UThreeValueSliderWidget : public UWidget
{
public:
	float                                        TopValue;                                          // 0x150(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeftValue;                                         // 0x154(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RightValue;                                        // 0x158(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FDelegateProperty_                           TopValueDelegate;                                  // 0x15C(0x10)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FDelegateProperty_                           LeftValueDelegate;                                 // 0x16C(0x10)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FDelegateProperty_                           RightValueDelegate;                                // 0x17C(0x10)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3347[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FThreeValueSliderStyle                WidgetStyle;                                       // 0x190(0x4F0)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                         bUseControllerIcon;                                // 0x680(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3348[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class ESupportedPlatforms, struct FSlateBrush> StylePerPlatform;                                  // 0x688(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FLinearColor                          SliderHandleColor;                                 // 0x6D8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IndentHandle;                                      // 0x6E8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3349[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        StepSize;                                          // 0x6EC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AnalogStepSize;                                    // 0x6F0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         RequiresControllerLock;                            // 0x6F4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsFocusable;                                       // 0x6F5(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Locked;                                            // 0x6F6(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         RenderBackground;                                  // 0x6F7(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnInputCaptureEnd;                                 // 0x6F8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnMouseCaptureBegin;                               // 0x708(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnMouseCaptureEnd;                                 // 0x718(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnControllerCaptureBegin;                          // 0x728(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnControllerCaptureEnd;                            // 0x738(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTopValueChanged;                                 // 0x748(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnLeftValueChanged;                                // 0x758(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRightValueChanged;                               // 0x768(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnAllValuesChanged;                                // 0x778(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bSelected;                                         // 0x788(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_334A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UInputAction*                          RotateInputAction;                                 // 0x790(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_334B[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UThreeValueSliderWidget* GetDefaultObj();

	void SetValue(struct FVector& InValue);
	void SetStepSize(float InStepSizeValue, float InAnalogStepSizeValue);
	void SetSliderHandleColor(const struct FLinearColor& InValue);
	void SetRenderBackground(bool InValue);
	void SetLocked(bool InValue);
	void SetIndentHandle(bool InValue);
	struct FVector GetValue();
	struct FVector GetRawValue();
};

// 0x8 (0x8E8 - 0x8E0)
// Class LOTF2.ThrowableData
class UThrowableData : public UAmmoData
{
public:
	TSubclassOf<class USubAutonomousAbilityData> SSAToTriggerWhenShootOnFeet;                       // 0x8E0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UThrowableData* GetDefaultObj();

	TSubclassOf<class USubAutonomousAbilityData> GetSSAToTriggerWhenShootOnFeet();
};

// 0x40 (0x440 - 0x400)
// Class LOTF2.TintGrid
class UTintGrid : public UInventoryGridPanel
{
public:
	uint8                                        Pad_334C[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UObject*                               InteractedItem;                                    // 0x430(0x8)(BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_334D[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTintGrid* GetDefaultObj();

};

// 0x28 (0x3F0 - 0x3C8)
// Class LOTF2.TintGridItem
class UTintGridItem : public UInventoryGridItem
{
public:
	class UImage*                                Icon_Selector;                                     // 0x3C8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Icon_Image_Metal;                                  // 0x3D0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Icon_Image_Fabric;                                 // 0x3D8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Icon_Image_Leather;                                // 0x3E0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryItem*                        TintItem;                                          // 0x3E8(0x8)(BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UTintGridItem* GetDefaultObj();

	void OnHoveredStateChanged(bool bIsFocused);
};

// 0x10 (0x488 - 0x478)
// Class LOTF2.TintItemData
class UTintItemData : public UItemData
{
public:
	struct FDataTableRowHandle                   TintDefinitionRow;                                 // 0x478(0x10)(Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UTintItemData* GetDefaultObj();

};

// 0x8 (0x2D0 - 0x2C8)
// Class LOTF2.TitleShapePreviewWidget
class UTitleShapePreviewWidget : public UCustomizationUserWidget
{
public:
	class UShapePresetWidget*                    ShapePreset;                                       // 0x2C8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UTitleShapePreviewWidget* GetDefaultObj();

	void SetShapeData(struct FUIShapeData& ShapeData, int32 Index);
};

// 0x40 (0x7F0 - 0x7B0)
// Class LOTF2.TopBarButton
class UTopBarButton : public UFocusableButtonWidget
{
public:
	uint8                                        Pad_334F[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UCommonLazyImage*                      Image_Icon;                                        // 0x7D0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                          Container_Image;                                   // 0x7D8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                      Text_Name;                                         // 0x7E0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3350[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTopBarButton* GetDefaultObj();

	void SetSelected(bool bSelected);
};

// 0x10 (0x40 - 0x30)
// Class LOTF2.TouchInputFilterSubsystem
class UTouchInputFilterSubsystem : public ULocalPlayerSubsystem
{
public:
	uint8                                        Pad_3351[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTouchInputFilterSubsystem* GetDefaultObj();

};

// 0x0 (0x688 - 0x688)
// Class LOTF2.TumorEquipmentData
class UTumorEquipmentData : public UEquipementData
{
public:

	static class UClass* StaticClass();
	static class UTumorEquipmentData* GetDefaultObj();

};

// 0x50 (0x80 - 0x30)
// Class LOTF2.TumorsDirector
class UTumorsDirector : public UWorldSubsystem
{
public:
	TMap<struct FSerializationId, struct FEquipmentSlotsSet> DestroyedTumors;                                   // 0x30(0x50)(SaveGame, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UTumorsDirector* GetDefaultObj();

};

// 0xD8 (0x398 - 0x2C0)
// Class LOTF2.TutorialMessage
class UTutorialMessage : public UExtensionPointEntryWidget
{
public:
	class UCommonRichTextBlock*                  Text_ItemPickupMessage;                            // 0x2C0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCommonRichTextBlock*                  TitleText;                                         // 0x2C8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCommonLazyImage*                      AdditionalContentImage;                            // 0x2D0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHexMoviePlayer*                       AdditionalContentMovie;                            // 0x2D8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCommonLazyWidget*                     AdditionalContentWidget;                           // 0x2E0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMediaSource*                          TutorialMovie;                                     // 0x2E8(0x8)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>             TutorialImageTexture;                              // 0x2F0(0x30)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class UUserWidget>             ContentSlotWidget;                                 // 0x320(0x30)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftClassPtr<class UUserWidget>>     ContentSlotWidgets;                                // 0x350(0x10)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	class UInputActionButton*                    ContinueButton;                                    // 0x360(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTutorialRequestsClose;                           // 0x368(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class FText                                  TutorialText;                                      // 0x378(0x18)(NativeAccessSpecifierPublic)
	uint8                                        Pad_3352[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTutorialMessage* GetDefaultObj();

	void SetTutorialText(class FText& Message);
	void SetTutorialMovie(class UMediaSource* Movie);
	void SetTutorialImage(TSoftObjectPtr<class UTexture2D> Texture);
	void SetTitleText(class FText& Message);
	void SetSlotContent(const TArray<TSoftClassPtr<class UUserWidget>>& WidgetsForSlot);
	void PlayMovie(bool ShouldLoopPlayback);
	void HandleInputAction();
	void HandleEntryHidden(class UExtensionPointEntryWidget* EntryWidget);
	class FText GetTutorialText();
};

// 0x80 (0x328 - 0x2A8)
// Class LOTF2.TutorialMessage_Area
class ATutorialMessage_Area : public ALOTF2BlueprintSerializableActor
{
public:
	bool                                         bIsTargetRealmActive;                              // 0x2A8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsTriggerActivated;                               // 0x2A9(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPendingShow;                                      // 0x2AA(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsFadingOut;                                      // 0x2AB(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsActivated;                                      // 0x2AC(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETutorialGameRealm                Realm;                                             // 0x2AD(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShouldDisplayFullscreen;                           // 0x2AE(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShouldPause;                                       // 0x2AF(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         TutorialDisplayed;                                 // 0x2B0(0x1)(ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3355[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  Text;                                              // 0x2B8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<TSoftClassPtr<class UUserWidget>>     WidgetSlotContent;                                 // 0x2D0(0x10)(Edit, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	class UTutorialMessage*                      TutorialMessage;                                   // 0x2E0(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDualRealmBehaviourComponent*          DualRealmComponent;                                // 0x2E8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                OverlappedPlayer;                                  // 0x2F0(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UExtensionPointEntryWidget> WidgetClass;                                       // 0x2F8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UExtensionPointEntryWidget> WidgetClassFullscreen;                             // 0x300(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3356[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATutorialMessage_Area* GetDefaultObj();

	void UpdateMultiplayerState(class APlayerState* PlayerState);
	void OnUpdateRealmVisuals(enum class EGameRealm Realm);
	void OnPlayerBeginPlay(class APlayerCharacter* Character);
	void OnOverlapEnd(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnOverlapBegin(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void OnFadingDone();
	void EndTutorialMessage();
};

// 0x8 (0x308 - 0x300)
// Class LOTF2.UCustomizationLabelButtonWidget
class UUCustomizationLabelButtonWidget : public UCustomizationButton
{
public:
	class UCustomizationFeatureLabelWidget*      Text_FeatureName;                                  // 0x300(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UUCustomizationLabelButtonWidget* GetDefaultObj();

};

// 0x8 (0x528 - 0x520)
// Class LOTF2.UHexConfirmationDialogCustom
class UUHexConfirmationDialogCustom : public UHexConfirmationDialog
{
public:
	TSubclassOf<class UHexConfirmationDialogButton> ActionButtonClassCancel;                           // 0x520(0x8)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UUHexConfirmationDialogCustom* GetDefaultObj();

};

// 0xF0 (0x120 - 0x30)
// Class LOTF2.UIInteractionAnimationManager
class UUIInteractionAnimationManager : public UGameInstanceSubsystem
{
public:
	FMulticastInlineDelegateProperty_            OnWidgetActivateEvent;                             // 0x30(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnShowWidgetEvent;                                 // 0x40(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnWidgetDeactivateEvent;                           // 0x50(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnWidgetBackActionEvent;                           // 0x60(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_3357[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FUIInteractionAnimationData           RequestedPlayerUIInteractionAnimationData;         // 0x78(0x48)(NoDestructor, NativeAccessSpecifierPrivate)
	struct FUIInteractionAnimationData           RequestedNPCUIInteractionAnimationData;            // 0xC0(0x48)(NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3358[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ALOTF2Character*                       NPCCharacter;                                      // 0x110(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ULevelSequencePlayer*                  LevelSequencePlayer;                               // 0x118(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UUIInteractionAnimationManager* GetDefaultObj();

};

// 0x70 (0xA0 - 0x30)
// Class LOTF2.UmbralAggroAttributeSet
class UUmbralAggroAttributeSet : public UAttributeSet
{
public:
	struct FGameplayAttributeData                UmbralAggro;                                       // 0x30(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                MaxUmbralAggro;                                    // 0x40(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                MinUmbralAggroToEnrage;                            // 0x50(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                UmbralAggroSpeed;                                  // 0x60(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                UmbralAggroSpeedDeviation;                         // 0x70(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                UmbralAggroMinDistanceInMeters;                    // 0x80(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                UmbralAggroMaxDistanceInMeters;                    // 0x90(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UUmbralAggroAttributeSet* GetDefaultObj();

};

// 0x78 (0x490 - 0x418)
// Class LOTF2.UmbralExitPointActor
class AUmbralExitPointActor : public ADestructible
{
public:
	class UDualRealmBehaviourComponent*          DualRealmBehaviourComponent;                       // 0x418(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USoulsLanternHotSpotComponent*         SoulsLanternHotSpotComponent;                      // 0x420(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInteractionComponent*                 InteractionComponent;                              // 0x428(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                       UIRootComponent;                                   // 0x430(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USphereComponent*                      InteractionTrigger;                                // 0x438(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                       EnemyPreventUsageAreasRoot;                        // 0x440(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEnemyDetectionComponent*              EnemyDetectionComponent;                           // 0x448(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                  OccupiedBecauseOfEnemiesNearText;                  // 0x450(0x18)(Edit, Protected, NativeAccessSpecifierProtected)
	class FText                                  OccupiedBecauseOfLinkedEnemyText;                  // 0x468(0x18)(Edit, Protected, NativeAccessSpecifierProtected)
	class ASimpleCharacterSpawner*               LinkedEnemySpawner;                                // 0x480(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bBreakWhenUsed;                                    // 0x488(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3359[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AUmbralExitPointActor* GetDefaultObj();

	void UpdateOccupiedInteraction(enum class ERealmDetectionState RealmDetectionState);
	void OnUpdateRealmLogic(enum class EGameRealm OldRealm, enum class EGameRealm NewRealm);
	void OnLinkedEnemySpawnerCharacterSpawned(class ASimpleCharacterSpawner* Spawner, class ALOTF2Character* Character);
	void OnLinkedEnemySpawnerCharacterDead(class ASimpleCharacterSpawner* Spawner, class ALOTF2Character* Character);
};

// 0xA8 (0x348 - 0x2A0)
// Class LOTF2.UmbralEyeWidget
class UUmbralEyeWidget : public UCommonUserWidget
{
public:
	class UAnimatedImage*                        AnimatedImage;                                     // 0x2A0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimatedImage*                        AnimatedImage_Red;                                 // 0x2A8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          TagToUnlockLvl1;                                   // 0x2B0(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          TagToUnlockLvl2;                                   // 0x2B8(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          TagToUnlockLvl3;                                   // 0x2C0(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                          Eye_Lvl_1;                                         // 0x2C8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                          Eye_Lvl_2;                                         // 0x2D0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                          Eye_Lvl_3;                                         // 0x2D8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Show_Eye_1;                                        // 0x2E0(0x8)(BlueprintVisible, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Show_Eye_2;                                        // 0x2E8(0x8)(BlueprintVisible, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Show_Eye_3;                                        // 0x2F0(0x8)(BlueprintVisible, ZeroConstructor, Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Progress_Wither;                                   // 0x2F8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                          Container_Level_1;                                 // 0x300(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                          Container_Level_2;                                 // 0x308(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                          Container_Level_3;                                 // 0x310(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  ProgressScalarName;                                // 0x318(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EUmbralEyeBlinkState              BlinkState;                                        // 0x320(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanBlink;                                         // 0x321(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_335A[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInstanceDynamic*              WitherRadialProgress;                              // 0x328(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimatedImage*                        CurrentAnimatedImage;                              // 0x330(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_335B[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UUmbralEyeWidget* GetDefaultObj();

	void StartBlinking();
	void ShowEye();
	void OpenEye();
	void OnWitherTimeChange(float NewWither);
	void OnWitherLevelChange(int32 WitherLevel, float LevelDuration);
	void OnWitherInhibited(bool bInhibit);
	void OnQuestGeneralTagAdded(struct FGameplayTagContainer& Tags);
	void OnMaxWitherLevelReached();
	void OnEyeAnimationDone();
	void OnBlinkStateChanged(enum class EUmbralEyeBlinkState EyeBlinkState);
	void HideEye();
	void HandleCurrentRealmChanged(enum class EGameRealm CurrentRealm, enum class EGameRealm PrevRealm);
	void CloseEye();
	void BP_OnLevelChange(bool bIsMaxLevel);
};

// 0x10 (0x2B0 - 0x2A0)
// Class LOTF2.UmbralReviveLocationOverrideAreaActor
class AUmbralReviveLocationOverrideAreaActor : public AActor
{
public:
	class UBoxComponent*                         TriggerArea;                                       // 0x2A0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                       SpawnPointsRoot;                                   // 0x2A8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AUmbralReviveLocationOverrideAreaActor* GetDefaultObj();

	void SetActive(bool bValue);
	void OnPlayerExitsTriggerArea(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnPlayerEntersTriggerArea(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	bool IsActive();
	TArray<struct FVector> GetAllSpawnPointLocations();
};

// 0x50 (0x100 - 0xB0)
// Class LOTF2.UmbralReviveLocationSelectorComponent
class UUmbralReviveLocationSelectorComponent : public UActorComponent
{
public:
	uint8                                        Pad_335F[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UUmbralReviveLocationSelectorComponent* GetDefaultObj();

	void RemoveActiveOverrideArea(class AUmbralReviveLocationOverrideAreaActor* OverrideAreaActor);
	struct FVector FindValidUmbralReviveLocation(bool bTryToUseCurrentLocation);
	void AddActiveOverrideArea(class AUmbralReviveLocationOverrideAreaActor* OverrideAreaActor);
};

// 0x18 (0x538 - 0x520)
// Class LOTF2.UnlockedClassDialog
class UUnlockedClassDialog : public UHexConfirmationDialog
{
public:
	class UCommonTextBlock*                      Text_ClassName;                                    // 0x520(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Image_ClassPortrait;                               // 0x528(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUnlockedClassEquipmentPanel*          UnlockedClassItems;                                // 0x530(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UUnlockedClassDialog* GetDefaultObj();

	void SetUnlockedClassName(class FName& UnlockedClassName);
};

// 0xA0 (0x340 - 0x2A0)
// Class LOTF2.UnlockedClassEquipmentPanel
class UUnlockedClassEquipmentPanel : public UCommonUserWidget
{
public:
	class UInventoryGridItem*                    Item_PrimaryWeapon;                                // 0x2A0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryGridItem*                    Item_SecondaryWeapon;                              // 0x2A8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryGridItem*                    Item_RangedWeapon;                                 // 0x2B0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryGridItem*                    Item_Ammo1;                                        // 0x2B8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryGridItem*                    Item_Ammo2;                                        // 0x2C0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryGridItem*                    Item_Ammo3;                                        // 0x2C8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryGridItem*                    Item_Ammo4;                                        // 0x2D0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryGridItem*                    Item_Ammo5;                                        // 0x2D8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryGridItem*                    Item_ArmorHead;                                    // 0x2E0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryGridItem*                    Item_ArmorBody;                                    // 0x2E8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryGridItem*                    Item_ArmorArms;                                    // 0x2F0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryGridItem*                    Item_ArmorLegs;                                    // 0x2F8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryGridItem*                    Item_ArmorAmulet;                                  // 0x300(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryGridItem*                    Item_ArmorRing1;                                   // 0x308(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryGridItem*                    Item_ArmorRing2;                                   // 0x310(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryGridItem*                    Item_Usable1;                                      // 0x318(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryGridItem*                    Item_Usable2;                                      // 0x320(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryGridItem*                    Item_Usable3;                                      // 0x328(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryGridItem*                    Item_Usable4;                                      // 0x330(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryGridItem*                    Item_Usable5;                                      // 0x338(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UUnlockedClassEquipmentPanel* GetDefaultObj();

	void SetUnlockedClassName(struct FCharacterClassData& CharClassData);
};

// 0x78 (0x478 - 0x400)
// Class LOTF2.UpgradeGridPanel
class UUpgradeGridPanel : public UItemGridPanel
{
public:
	class UPanelWidget*                          Container_UpgradeMaterials;                        // 0x400(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryItem*                        InteractedItem;                                    // 0x408(0x8)(BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TSubclassOf<class UItemData>>         UpgradeMaterials;                                  // 0x410(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TSubclassOf<class UUpgradeMatWidget>         UpgradeMatWidgetClass;                             // 0x420(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUpgradeMaterialItemData*              UpgradeMaterial;                                   // 0x428(0x8)(BlueprintVisible, ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3360[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UInGameMessageNotification> InGameMessageClass;                                // 0x438(0x8)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UCommonTextStyle>          AmountStyleKO;                                     // 0x440(0x8)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UCommonTextStyle>          AmountStyleOK;                                     // 0x448(0x8)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3361[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UInventoryGridItem*                    InteractedGridItem;                                // 0x458(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3362[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UUpgradeGridPanel* GetDefaultObj();

	void UpgradeItem();
	void UpdateUpgradeMaterials();
	void OnInteractionFinished();
	bool IsUpgradeAvailable();
	void BP_OnUpgradeButtonPressed(class UUpgradeMaterialItemData* UpgradeMaterial, int32 RequiredAmount, int32 InventoryAmount);
};

// 0x78 (0x318 - 0x2A0)
// Class LOTF2.UpgradeImportantItemWidget
class UUpgradeImportantItemWidget : public UCommonUserWidget
{
public:
	FMulticastInlineDelegateProperty_            OnRefreshItemInfo;                                 // 0x2A0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRefreshItemCost;                                 // 0x2B0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnUpgradeItem;                                     // 0x2C0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCancelUpgrade;                                   // 0x2D0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	class UCommonLazyImage*                      Image_LeftIcon;                                    // 0x2E0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                      Text_LeftTitle;                                    // 0x2E8(0x8)(ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                      Text_RequiredMaterial_Amount;                      // 0x2F0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonLazyImage*                      Image_RightIcon;                                   // 0x2F8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                      Text_RightTitle;                                   // 0x300(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonTextBlock*                      Text_Upgrade_Price;                                // 0x308(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInventoryItem*                        InventoryItem;                                     // 0x310(0x8)(ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UUpgradeImportantItemWidget* GetDefaultObj();

	void SetInventoryItem(class UInventoryItem* InventoryItem);
	void SetCanUpgrade(bool bCanUpgrade);
	void OnUpgradePressed();
	void OnCancelPressed();
	void OnActivated();
};

// 0x0 (0x478 - 0x478)
// Class LOTF2.UpgradeMaterialItemData
class UUpgradeMaterialItemData : public UItemData
{
public:

	static class UClass* StaticClass();
	static class UUpgradeMaterialItemData* GetDefaultObj();

};

// 0x0 (0x2B8 - 0x2B8)
// Class LOTF2.UpgradeMatWidget
class UUpgradeMatWidget : public ULOTF2UserWidget
{
public:

	static class UClass* StaticClass();
	static class UUpgradeMatWidget* GetDefaultObj();

	void SetItemData(class UTexture2D* Icon, int32 OwnedAmount, int32 MaxAmount);
};

// 0x50 (0x78 - 0x28)
// Class LOTF2.AIBehaviorEnvironment
class UAIBehaviorEnvironment : public UObject
{
public:
	TMap<enum class EeAIContextType, struct FAIBehaviorContext> Contexts;                                          // 0x28(0x50)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UAIBehaviorEnvironment* GetDefaultObj();

};

// 0x120 (0x1D0 - 0xB0)
// Class LOTF2.ValidLocationTrackingComponent
class UValidLocationTrackingComponent : public UActorComponent
{
public:
	bool                                         bDrawDebugHelpers;                                 // 0xB0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3365[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MaxSavedValidLocations;                            // 0xB4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinDistanceMovedToAddLocation;                     // 0xB8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinDelayBeforeAddingLocation;                      // 0xBC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AVolume>                   InvalidVolumeClass;                                // 0xC0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UPrimitiveComponent>       InvalidColliderComponentClass;                     // 0xC8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ALOTF2Character*                       OwnerCharacter;                                    // 0xD0(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTimestampedLocation                  LastValidTempLocation;                             // 0xD8(0x20)(SaveGame, NoDestructor, NativeAccessSpecifierPrivate)
	bool                                         bUseLastValidLocationBeforeBossFight;              // 0xF8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3366[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimestampedLocation                  LastValidLocationBeforeBossFight;                  // 0x100(0x20)(SaveGame, NoDestructor, NativeAccessSpecifierPrivate)
	struct FTimestampedLocation                  LastValidLocationInAxiom;                          // 0x120(0x20)(SaveGame, NoDestructor, NativeAccessSpecifierPrivate)
	struct FTimestampedLocation                  LastValidLocationInUmbral;                         // 0x140(0x20)(SaveGame, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3367[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTimestampedLocation>          TrailOfLastValidLocations;                         // 0x170(0x10)(ZeroConstructor, SaveGame, NativeAccessSpecifierPrivate)
	TArray<class AActor*>                        OverlappedInvalidAreaVolumes;                      // 0x180(0x10)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3368[0x40];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UValidLocationTrackingComponent* GetDefaultObj();

	void OnExitInvalidArea(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnEnterInvalidArea(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void NotifyBossFightStartWithValidPosition(struct FVector& LastValidPositionBeforeBossFight);
	void NotifyBossFightStart();
	void NotifyBossFightEnd();
	struct FVector GetLastValidLocation();
};

// 0xE0 (0x4E0 - 0x400)
// Class LOTF2.VendorGridPanel
class UVendorGridPanel : public UItemGridPanel
{
public:
	TSubclassOf<class UInGameMessageNotification> InGameMessageClass;                                // 0x400(0x8)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class UAmountSelectorWidget>   AmountSelectorWidgetClass;                         // 0x408(0x30)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                  Text_Error_Purchase_NotEnoughVigor;                // 0x438(0x18)(Edit, Protected, NativeAccessSpecifierProtected)
	class FText                                  Text_Error_Purchase_NotEnoughSocialCurrencyBlue;   // 0x450(0x18)(Edit, Protected, NativeAccessSpecifierProtected)
	class FText                                  Text_Error_Purchase_NotEnoughSocialCurrencyRed;    // 0x468(0x18)(Edit, Protected, NativeAccessSpecifierProtected)
	class FText                                  Text_Error_Purchase_NotEnoughSocialCurrencyYellow; // 0x480(0x18)(Edit, Protected, NativeAccessSpecifierProtected)
	class FText                                  Text_Error_MaxItemAmountReached;                   // 0x498(0x18)(Edit, Protected, NativeAccessSpecifierProtected)
	class ABaseNPCCharacter*                     NPCCharacter;                                      // 0x4B0(0x8)(ZeroConstructor, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_336C[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UInventoryItem*                        InteractedItem;                                    // 0x4C0(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_336D[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UVendorGridPanel* GetDefaultObj();

	void OnItemAmountSelected(int32 Amount);
	void ConfirmSellItem(class UInventoryItem* ItemToSell, int32 ItemAmount);
	void BP_SellItemToPlayerComplete();
	void BP_OnSellItemComplete(int32 ItemAmount);
	void BP_OnPurchaseItem(class UInventoryItem* Item, bool bPurchaseSuccess, enum class EVendorTransactionCode TransactionCode, bool bHasOverrideVoiceOver);
	void BP_OnItemInteracted(class UInventoryItem* ItemToSell, int32 ItemAmount);
};

// 0x40 (0x70 - 0x30)
// Class LOTF2.VigorAttributeSet
class UVigorAttributeSet : public UAttributeSet
{
public:
	struct FGameplayAttributeData                Vigor;                                             // 0x30(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                MaxVigor;                                          // 0x40(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                VigorAbsorbMultiplier;                             // 0x50(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                VigorDropMultiplier;                               // 0x60(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UVigorAttributeSet* GetDefaultObj();

	void OnRep_VigorAbsorbMultiplier(struct FGameplayAttributeData& OldVigorAbsorbMultiplier);
	void OnRep_Vigor(struct FGameplayAttributeData& OldVigor);
};

// 0x40 (0xF0 - 0xB0)
// Class LOTF2.VigorComponent
class UVigorComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnVigorChange;                                     // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnVigorMultiplierChange;                           // 0xC0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	int32                                        DefaultVigor;                                      // 0xD0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        DefaultVigorCapacity;                              // 0xD4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DefaultVigorMultiplier;                            // 0xD8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DefaultVigorDropMultiplier;                        // 0xDC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_336E[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UVigorComponent* GetDefaultObj();

	void SetVigorMultiplier(float Value);
	void SetVigorCapacity(int32 Value);
	void SetVigor(int32 Value);
	void ResetVigorMultiplier();
	void RemoveVigor(int32 Value);
	float GetVigorMultiplier();
	float GetVigorDropMultiplier();
	int32 GetVigorCapacity();
	int32 GetVigor();
	void AddVigorWithMultiplier(int32 Value);
	void AddVigor(int32 Value);
};

// 0x18 (0x40 - 0x28)
// Class LOTF2.VigorDecorator
class UVigorDecorator : public URichTextBlockDecorator
{
public:
	TSubclassOf<class UCommonTextStyle>          VigorTextStyle;                                    // 0x28(0x8)(Edit, ZeroConstructor, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_336F[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UVigorDecorator* GetDefaultObj();

	void SetVigor(int32 Vigor);
};

// 0x10 (0x88 - 0x78)
// Class LOTF2.VigorDropInventoryItem
class UVigorDropInventoryItem : public UInventoryItem
{
public:
	int32                                        VigorQuantity;                                     // 0x78(0x4)(Edit, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          VigorDropAcquiredTag;                              // 0x7C(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3370[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UVigorDropInventoryItem* GetDefaultObj();

	void SetVigorQuantity(int32 Value);
	int32 GetVigorQuantity();
};

// 0x0 (0x30 - 0x30)
// Class LOTF2.VoiceOverSubsystem
class UVoiceOverSubsystem : public UWorldSubsystem
{
public:

	static class UClass* StaticClass();
	static class UVoiceOverSubsystem* GetDefaultObj();

};

// 0x48 (0x128 - 0xE0)
// Class LOTF2.WaitFirstEncounterConfigComp
class UWaitFirstEncounterConfigComp : public UHexApplySpawnConfigComponent
{
public:
	TArray<TSoftObjectPtr<class AWaitFirstEncounterTriggerBox>> LinkedTriggersWeakPointer;                         // 0xE0(0x10)(Edit, BlueprintVisible, ZeroConstructor, EditConst, UObjectWrapper, NativeAccessSpecifierPublic)
	bool                                         bShouldAssignTargetWhenActivated;                  // 0xF0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bShouldIgnoreSenses;                               // 0xF1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bShouldIgnoreESP;                                  // 0xF2(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bAllowLockOn;                                      // 0xF3(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bShouldTriggerOnCombatAlerts;                      // 0xF4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bShouldTriggerOnEventAlerts;                       // 0xF5(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bRandomFirstEncounterAnimation;                    // 0xF6(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3371[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint32                                       SelectedFirstEncounter;                            // 0xF8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3372[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFirstEncounterAnimationGameplayTags> FirstEncounterAnimationGameplayTags;               // 0x100(0x10)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPrivate)
	bool                                         bShouldRunTowardsTarget;                           // 0x110(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3373[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DistanceToTriggerActionInMeters;                   // 0x114(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBehaviorTree*                         InitialActionBehaviorTree;                         // 0x118(0x8)(Edit, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        PatrolStartDelay;                                  // 0x120(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3374[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UWaitFirstEncounterConfigComp* GetDefaultObj();

	void SetFirstEncounterAnimationTags(TArray<struct FFirstEncounterAnimationGameplayTags>& FirstEncounterAnimationTags);
	TArray<struct FFirstEncounterAnimationGameplayTags> GetFirstEncounterAnimationGameplayTags();
};

// 0x20 (0x2C8 - 0x2A8)
// Class LOTF2.WaitFirstEncounterTriggerBox
class AWaitFirstEncounterTriggerBox : public ATriggerBox
{
public:
	TArray<TSoftObjectPtr<class ASimpleCharacterSpawner>> SimpleCharacterSpawners;                           // 0x2A8(0x10)(Edit, ZeroConstructor, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                        Pad_3375[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AWaitFirstEncounterTriggerBox* GetDefaultObj();

};

// 0x0 (0x2A0 - 0x2A0)
// Class LOTF2.WeaponActor
class AWeaponActor : public AActor
{
public:

	static class UClass* StaticClass();
	static class AWeaponActor* GetDefaultObj();

};

// 0x8 (0x608 - 0x600)
// Class LOTF2.WeaponAnimationData
class UWeaponAnimationData : public UAnimationData
{
public:
	class UAnimationAsset*                       RightArmOverride;                                  // 0x600(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UWeaponAnimationData* GetDefaultObj();

};

// 0x80 (0xB0 - 0x30)
// Class LOTF2.WeaponAttributeSet
class UWeaponAttributeSet : public UAttributeSet
{
public:
	struct FGameplayAttributeData                ScalingStrenth;                                    // 0x30(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                ScalingAgility;                                    // 0x40(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                ScalingOrder;                                      // 0x50(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                ScalingChaos;                                      // 0x60(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                RequirementStrength;                               // 0x70(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                RequirementAgility;                                // 0x80(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                RequirementOrder;                                  // 0x90(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                RequirementChaos;                                  // 0xA0(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UWeaponAttributeSet* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class LOTF2.WeaponBuffData
class UWeaponBuffData : public UObject
{
public:

	static class UClass* StaticClass();
	static class UWeaponBuffData* GetDefaultObj();

	bool CanBuffWeapons(const struct FHexWeaponBuffDefinition& WeaponBuffDefinition, class AActor* ActorToApplyTo);
	void ApplyWeaponBuff(const struct FHexWeaponBuffDefinition& WeaponBuffDefinition, class AActor* ActorToApplyTo, class AActor* ApplierActor);
};

// 0x10 (0x488 - 0x478)
// Class LOTF2.WeaponBuffItemData
class UWeaponBuffItemData : public UItemData
{
public:
	struct FDataTableRowHandle                   WeaponBuffHandle;                                  // 0x478(0x10)(Edit, NoDestructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UWeaponBuffItemData* GetDefaultObj();

};

// 0x0 (0x120 - 0x120)
// Class LOTF2.WeaponGameplayData
class UWeaponGameplayData : public UGameplayData
{
public:

	static class UClass* StaticClass();
	static class UWeaponGameplayData* GetDefaultObj();

};

// 0x10 (0x2B0 - 0x2A0)
// Class LOTF2.WeaponScalingStatRow
class UWeaponScalingStatRow : public UCommonUserWidget
{
public:
	float                                        WeaponDamage;                                      // 0x2A0(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        WeaponScaling;                                     // 0x2A4(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        UpdatedWeaponScaling;                              // 0x2A8(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3377[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UWeaponScalingStatRow* GetDefaultObj();

	void SetUpdatedScaling(float UpdatedWeaponScaling);
	void SetBaseValues(float WeaponDamage, float WeaponScaling);
};

// 0x170 (0x1A0 - 0x30)
// Class LOTF2.WeaponsHitFXData
class UWeaponsHitFXData : public UPrimaryDataAsset
{
public:
	struct FWeaponHitFxData                      DefaultWeaponHitFX;                                // 0x30(0xD0)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	TMap<TSoftClassPtr<class UWeaponsData>, struct FWeaponHitFxData> BaseWeaponsHitFX;                                  // 0x100(0x50)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	TMap<TSoftClassPtr<class ALOTF2Character>, struct FWeaponsHitFXMap> WeaponsHitFXByCharacter;                           // 0x150(0x50)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UWeaponsHitFXData* GetDefaultObj();

	void GetWeaponHitFxData(struct FWeaponHitFxData* OutWeaponHitFXData, TSubclassOf<class ALOTF2Character> CharacterClass, TSubclassOf<class UWeaponsData> WeaponDataClass);
	void GetUnarmedHitFxData(struct FWeaponHitFxData* OutUnarmedHitFXData, TSubclassOf<class ALOTF2Character> CharacterClass, enum class EAnathemaUnarmed UnarmedType);
};

// 0x0 (0x30 - 0x30)
// Class LOTF2.WeaponStatsData
class UWeaponStatsData : public UPrimaryDataAsset
{
public:

	static class UClass* StaticClass();
	static class UWeaponStatsData* GetDefaultObj();

};

// 0x0 (0x2A8 - 0x2A8)
// Class LOTF2.WeaponVisual
class AWeaponVisual : public AItemVisual
{
public:

	static class UClass* StaticClass();
	static class AWeaponVisual* GetDefaultObj();

};

// 0x10 (0x2B0 - 0x2A0)
// Class LOTF2.WebTravel
class AWebTravel : public AActor
{
public:
	class UInteractionComponent*                 InteractionComponent;                              // 0x2A0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanOpen;                                          // 0x2A8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanClose;                                         // 0x2A9(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsOpen;                                           // 0x2AA(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_337A[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AWebTravel* GetDefaultObj();

	bool Open(class AController* OpenInstigator);
	bool IsActivated();
	void HandleOpen();
	void HandleClose();
	void ForceOpen();
	void Close();
	bool CanInteract();
};

// 0x10 (0x40 - 0x30)
// Class LOTF2.WitherAttributeSet
class UWitherAttributeSet : public UAttributeSet
{
public:
	struct FGameplayAttributeData                WitherTimeGainMultiplier;                          // 0x30(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UWitherAttributeSet* GetDefaultObj();

	void HandleWitherProgressRateChange(float NewProgressRate);
};

// 0x178 (0x1B0 - 0x38)
// Class LOTF2.WitherSubsystemSettings
class UWitherSubsystemSettings : public UHexDeveloperSettings
{
public:
	TSoftObjectPtr<class UEnvQuery>              SpawnQuery;                                        // 0x38(0x30)(Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class ASimpleCharacterSpawner> WitherEntitySpawnerClass;                          // 0x68(0x30)(Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayEffectsWithParamsContainer   SpawnGameplayEffects;                              // 0x98(0x10)(Edit, Config, NativeAccessSpecifierPublic)
	float                                        SpawnTickRate;                                     // 0xA8(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_337B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FWitherLevelDefinition>        WitherLevelDefinitions;                            // 0xB0(0x10)(Edit, ZeroConstructor, Config, NativeAccessSpecifierPublic)
	struct FWitherChaserEnemyDefinition          ChaserDefinition;                                  // 0xC0(0x70)(Edit, Config, NativeAccessSpecifierPublic)
	bool                                         DrawSpawnDebug;                                    // 0x130(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_337C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SpawnDebugTime;                                    // 0x134(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BoxTestExtents;                                    // 0x138(0x18)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BoxTestOffset;                                     // 0x150(0x18)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               GroundRaycastOffset;                               // 0x168(0x18)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               EdgeCheckCorner;                                   // 0x180(0x18)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EdgeCheckCornerHeightOffset;                       // 0x198(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_337D[0x14];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UWitherSubsystemSettings* GetDefaultObj();

};

// 0x2D8 (0x318 - 0x40)
// Class LOTF2.WitherSubsystem
class UWitherSubsystem : public UTickableWorldSubsystem
{
public:
	uint8                                        Pad_337E[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnWitherLevelProgressChange;                       // 0x68(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnWitherLevelChange;                               // 0x78(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnWitherMaxLevelReached;                           // 0x88(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnWitherStart;                                     // 0x98(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnWitherEnd;                                       // 0xA8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnWitherInhibitChange;                             // 0xB8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnWitherProgressRateChange;                        // 0xC8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnWitherEntitySpawned;                             // 0xD8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bInhibited;                                        // 0xE8(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_337F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ProgressRate;                                      // 0xEC(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        LevelProgress;                                     // 0xF0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        Level;                                             // 0xF4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        LevelDuration;                                     // 0xF8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3380[0x21C];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UWitherSubsystem* GetDefaultObj();

	void SetProgressRate(float ProgressRate);
	void SetInhibit(bool bNewInhibit);
	void SetDontResetWitherOnCinematicRealmChange();
	void OnRealmChanged(enum class EGameRealm OldRealm, enum class EGameRealm NewRealm, enum class EActivateRealmReason Reason);
	void OnMirageDestroyed(class AActor* Mirage);
	void OnEnemySpawned(class ASimpleCharacterSpawner* Spawner, class ALOTF2Character* Enemy);
	void OnEnemyDestroyed(class AActor* Enemy);
	void OnChaserDestroyed(class AActor* Chaser);
	bool IsWitherActive();
	bool IsInhibited();
	float GetProgressRate();
	int32 GetNumLevels();
	float GetLevelProgress();
	float GetLevelDuration();
	int32 GetLevel();
};

// 0x68 (0x98 - 0x30)
// Class LOTF2.GauntletData
class UGauntletData : public UDataAsset
{
public:
	TSoftObjectPtr<class UInputAction>           ShinningInputAction;                               // 0x30(0x30)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UInputAction>           BasicHitInputAction;                               // 0x60(0x30)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class USubAutonomousAbilityData> BossInstaKillAreaClass;                            // 0x90(0x8)(Edit, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGauntletData* GetDefaultObj();

};

// 0x10 (0x2B0 - 0x2A0)
// Class LOTF2.GoldenPath
class AGoldenPath : public AActor
{
public:
	TArray<struct FActorSplineData>              Path;                                              // 0x2A0(0x10)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AGoldenPath* GetDefaultObj();

};

// 0x198 (0x1C8 - 0x30)
// Class LOTF2.LOTF2GauntletController
class ULOTF2GauntletController : public UGauntletTestController
{
public:
	uint8                                        Pad_3381[0x100];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	class UGauntletData*                         TestDataAsset;                                     // 0x130(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                AAActor_BossKiller;                                // 0x138(0x8)(ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3382[0x88];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ULOTF2GauntletController* GetDefaultObj();

	void StopProfiling(int32 ExitCode);
};

}


